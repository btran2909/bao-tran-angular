{"version":3,"sources":["./demo/src/app/components/+typeahead/demos/no-result/no-result.ts","./demo/src/app/components/+typeahead/demos/no-result/no-result.html","webpack:///./demo/src/app/components/+typeahead/demos/selected-first-item/selected-first-item.ts?fe64","webpack:///./demo/src/app/components/+typeahead/demos/ordering/ordering.ts?d1b4","webpack:///./demo/src/app/components/+typeahead/demos/first-item-active/first-item-active.ts?d754","webpack:///./demo/src/app/components/+typeahead/demos/no-result/no-result.html?dddc","./demo/src/app/components/+typeahead/demos/multiple-search/multiple-search.ts","./demo/src/app/components/+typeahead/demos/multiple-search/multiple-search.html","./demo/src/app/components/+typeahead/demos/adaptive-position/adaptive-position.ts","./demo/src/app/components/+typeahead/demos/adaptive-position/adaptive-position.html","webpack:///./demo/src/app/components/+typeahead/demos/animated/animated.ts?e0dc","webpack:///./demo/src/app/components/+typeahead/demos/config/config.ts?e13a","./demo/src/app/components/+typeahead/demos/show-on-blur/show-on-blur.ts","./demo/src/app/components/+typeahead/demos/show-on-blur/show-on-blur.html","./demo/src/app/components/+typeahead/demos/scrollable/scrollable.ts","./demo/src/app/components/+typeahead/demos/scrollable/scrollable.html","./demo/src/app/components/+typeahead/demos/config/config.ts","./demo/src/app/components/+typeahead/demos/config/config.html","webpack:///./demo/src/app/components/+typeahead/demos/first-item-active/first-item-active.html?ef6b","webpack:///./demo/src/app/components/+typeahead/demos/on-select/on-select.ts?ee65","webpack:///./demo/src/app/components/+typeahead/demos/dropup/dropup.html?f58c","./demo/src/app/components/+typeahead/demo-typeahead.routes.ts","webpack:///./demo/src/app/components/+typeahead/demos/item-template/item-template.html?01c3","webpack:///./demo/src/app/components/+typeahead/demos/item-template/item-template.ts?031d","./demo/src/app/components/+typeahead/demos/on-blur/on-blur.ts","./demo/src/app/components/+typeahead/demos/on-blur/on-blur.html","./demo/src/app/components/+typeahead/demos/min-length/min-length.ts","./demo/src/app/components/+typeahead/demos/min-length/min-length.html","./demo/src/app/components/+typeahead/demos/on-select/on-select.ts","./demo/src/app/components/+typeahead/demos/on-select/on-select.html","webpack:///./demo/src/app/components/+typeahead/demos/single-world/single-world.html?0d5d","./demo/src/app/components/+typeahead/demos/item-template/item-template.ts","./demo/src/app/components/+typeahead/demos/item-template/item-template.html","webpack:///./demo/src/app/components/+typeahead/demos/grouping/grouping.html?0f20","webpack:///./demo/src/app/components/+typeahead/demos/phrase-delimiters/phrase-delimiters.html?11c7","./demo/src/app/components/+typeahead/demos/single-world/single-world.ts","./demo/src/app/components/+typeahead/demos/single-world/single-world.html","webpack:///./demo/src/app/components/+typeahead/demos/async/async.ts?151d","webpack:///./demo/src/app/components/+typeahead/demos/latinize/latinize.html?18eb","webpack:///./demo/src/app/components/+typeahead/demos/delay/delay.html?1a4a","webpack:///./demo/src/app/components/+typeahead/demos/container/container.ts?1da7","webpack:///./demo/src/app/components/+typeahead/demos/latinize/latinize.ts?20b3","webpack:///./demo/src/app/components/+typeahead/demos/reactive-form/reactive-form.html?2428","./demo/src/app/components/+typeahead/demos/basic/basic.ts","./demo/src/app/components/+typeahead/demos/basic/basic.html","./demo/src/app/components/+typeahead/demos/first-item-active/first-item-active.ts","./demo/src/app/components/+typeahead/demos/first-item-active/first-item-active.html","webpack:///./demo/src/app/components/+typeahead/demos/animated/animated.html?2ba1","webpack:///./demo/src/app/components/+typeahead/demos/config/config.html?2836","webpack:///./demo/src/app/components/+typeahead/demos/async/async.html?2a8f","webpack:///./demo/src/app/components/+typeahead/demos/basic/basic.html?2fe6","webpack:///./demo/src/app/components/+typeahead/demos/form/form.html?31df","webpack:///./demo/src/app/components/+typeahead/demos/list-template/list-template.ts?3688","webpack:///./demo/src/app/components/+typeahead/demos/adaptive-position/adaptive-position.html?3c09","webpack:///./demo/src/app/components/+typeahead/demos/container/container.html?3e9a","webpack:///./demo/src/app/components/+typeahead/demos/show-on-blur/show-on-blur.html?416a","webpack:///./demo/src/app/components/+typeahead/demos/delay/delay.ts?4765","./demo/src/app/components/+typeahead/demos/field/field.ts","./demo/src/app/components/+typeahead/demos/field/field.html","webpack:///./demo/src/app/components/+typeahead/demos/scrollable/scrollable.html?4b94","./demo/src/app/components/+typeahead/typeahead-section.list.ts","webpack:///./demo/src/app/components/+typeahead/demos/cancel-on-focus-lost/cancel-on-focus-lost.ts?4f53","./demo/src/app/components/+typeahead/demos/index.ts","./demo/src/app/components/+typeahead/demos/animated/animated.ts","./demo/src/app/components/+typeahead/demos/animated/animated.html","./demo/src/app/components/+typeahead/demo-typeahead.module.ts","webpack:///./demo/src/app/components/+typeahead/demos/basic/basic.ts?5137","./demo/src/app/components/+typeahead/demos/async-http-request/async-http-request.ts","./demo/src/app/components/+typeahead/demos/async-http-request/async-http-request.html","./demo/src/app/components/+typeahead/docs/usage.md","webpack:///./demo/src/app/components/+typeahead/demos/on-blur/on-blur.html?57ee","./demo/src/app/components/+typeahead/typeahead-section.component.ts","./demo/src/app/components/+typeahead/typeahead-section.component.html","./demo/src/app/components/+typeahead/demos/cancel-on-focus-lost/cancel-on-focus-lost.ts","./demo/src/app/components/+typeahead/demos/cancel-on-focus-lost/cancel-on-focus-lost.html","./demo/src/app/components/+typeahead/demos/latinize/latinize.ts","./demo/src/app/components/+typeahead/demos/latinize/latinize.html","./demo/src/app/components/+typeahead/demos/reactive-form/reactive-form.ts","./demo/src/app/components/+typeahead/demos/reactive-form/reactive-form.html","webpack:///./demo/src/app/components/+typeahead/demos/async-http-request/async-http-request.html?6554","./demo/src/app/components/+typeahead/demos/container/container.ts","./demo/src/app/components/+typeahead/demos/container/container.html","webpack:///./demo/src/app/components/+typeahead/demos/selected-first-item/selected-first-item.html?6960","webpack:///./demo/src/app/components/+typeahead/demos/field/field.html?6b21","webpack:///./demo/src/app/components/+typeahead/demos/phrase-delimiters/phrase-delimiters.ts?703f","webpack:///./demo/src/app/components/+typeahead/demos/list-template/list-template.html?753b","webpack:///./demo/src/app/components/+typeahead/demos/min-length/min-length.ts?7d17","webpack:///./demo/src/app/components/+typeahead/demos/multiple-search/multiple-search.ts?813e","webpack:///./demo/src/app/components/+typeahead/demos/min-length/min-length.html?82f8","webpack:///./demo/src/app/components/+typeahead/demos/show-on-blur/show-on-blur.ts?87eb","webpack:///./demo/src/app/components/+typeahead/demos/cancel-on-focus-lost/cancel-on-focus-lost.html?8ab7","./demo/src/app/components/+typeahead/demos/list-template/list-template.ts","./demo/src/app/components/+typeahead/demos/list-template/list-template.html","webpack:///./demo/src/app/components/+typeahead/demos/field/field.ts?93f2","webpack:///./demo/src/app/components/+typeahead/demos/on-select/on-select.html?92ad","./demo/src/app/components/+typeahead/demos/delay/delay.ts","./demo/src/app/components/+typeahead/demos/delay/delay.html","./demo/src/app/components/+typeahead/demos/async/async.ts","./demo/src/app/components/+typeahead/demos/async/async.html","webpack:///./demo/src/app/components/+typeahead/demos/dropup/dropup.ts?9b3e","./demo/src/app/components/+typeahead/demos/phrase-delimiters/phrase-delimiters.ts","./demo/src/app/components/+typeahead/demos/phrase-delimiters/phrase-delimiters.html","webpack:///./demo/src/app/components/+typeahead/demos/multiple-search/multiple-search.html?9d7b","webpack:///./demo/src/app/components/+typeahead/demos/single-world/single-world.ts?9e38","webpack:///./demo/src/app/components/+typeahead/demos/grouping/grouping.ts?a0e7","webpack:///./demo/src/app/components/+typeahead/demos/ordering/ordering.html?a5f1","./demo/src/app/components/+typeahead/demos/form/form.ts","./demo/src/app/components/+typeahead/demos/form/form.html","webpack:///./demo/src/app/components/+typeahead/demos/no-result/no-result.ts?a82a","webpack:///./demo/src/app/components/+typeahead/demos/form/form.ts?a9fd","webpack:///./demo/src/app/components/+typeahead/demos/on-blur/on-blur.ts?aaac","webpack:///./demo/src/app/components/+typeahead/demos/reactive-form/reactive-form.ts?ac85","webpack:///./demo/src/app/components/+typeahead/demos/async-http-request/async-http-request.ts?b1ff","./demo/src/app/components/+typeahead/demos/grouping/grouping.ts","./demo/src/app/components/+typeahead/demos/grouping/grouping.html","./demo/src/app/components/+typeahead/demos/ordering/ordering.ts","./demo/src/app/components/+typeahead/demos/ordering/ordering.html","webpack:///./demo/src/app/components/+typeahead/demos/scrollable/scrollable.ts?bf0d","./demo/src/app/components/+typeahead/demos/dropup/dropup.ts","./demo/src/app/components/+typeahead/demos/dropup/dropup.html","webpack:///./demo/src/app/components/+typeahead/demos/adaptive-position/adaptive-position.ts?c74f","./demo/src/app/components/+typeahead/demos/selected-first-item/selected-first-item.ts","./demo/src/app/components/+typeahead/demos/selected-first-item/selected-first-item.html"],"names":[],"mappings":"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","file":"components-typeahead-demo-typeahead-module.js","sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-no-result',\r\n  templateUrl: './no-result.html'\r\n})\r\nexport class DemoTypeaheadNoResultComponent {\r\n  selected: string;\r\n  noResult = false;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n\r\n  typeaheadNoResults(event: boolean): void {\r\n    this.noResult = event;\r\n  }\r\n}\r\n","<pre class=\"card card-block card-header\">Model: {{selected | json}}</pre>\r\n<div class=\"alert alert-danger\" *ngIf=\"noResult\">No Results Found</div>\r\n\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       (typeaheadNoResults)=\"typeaheadNoResults($event)\"\r\n       class=\"form-control\">\r\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-selected-first-item',\\r\\n  templateUrl: './selected-first-item.html'\\r\\n})\\r\\nexport class DemotypeaheadSelectFirstItemComponent {\\r\\n  selected: string;\\r\\n  states: string[] = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","export default \"import { Component, OnInit } from '@angular/core';\\n\\nimport { TypeaheadOrder } from 'bao-tran-angular/typeahead';\\nimport { Observable, of, Subscriber } from 'rxjs';\\nimport { switchMap } from 'rxjs/operators';\\n\\n@Component({\\n  selector: 'demo-typeahead-ordering',\\n  templateUrl: './ordering.html'\\n})\\nexport class DemoTypeaheadOrderingComponent implements OnInit {\\n  selected1: string;\\n  selected2: string;\\n  selected3: string;\\n  selected4: string;\\n  sortConfig1: TypeaheadOrder = {\\n    direction: 'desc'\\n  };\\n  sortConfig2: TypeaheadOrder = {\\n    direction: 'asc'\\n  };\\n  sortConfig3: TypeaheadOrder = {\\n    direction: 'asc',\\n    field: 'city'\\n  };\\n  states$: Observable<string[]>;\\n  states: string[] = [\\n    'New Mexico',\\n    'New York',\\n    'North Dakota',\\n    'North Carolina',\\n    'Ohio',\\n    'Oklahoma',\\n    'Oregon',\\n    'Pennsylvania',\\n    'Rhode Island',\\n    'South Carolina',\\n    'South Dakota',\\n    'Tennessee',\\n    'Texas',\\n    'Utah',\\n    'Alaska',\\n    'Alabama',\\n    'Iowa',\\n    'Kansas',\\n    'Kentucky',\\n    'Louisiana',\\n    'Maine',\\n    'Maryland',\\n    'Massachusetts',\\n    'Michigan',\\n    'Minnesota',\\n    'Mississippi',\\n    'Missouri',\\n    'Montana',\\n    'Nebraska',\\n    'Nevada',\\n    'New Hampshire',\\n    'New Jersey',\\n    'Arizona',\\n    'Arkansas',\\n    'California',\\n    'Colorado',\\n    'Connecticut',\\n    'Delaware',\\n    'Florida',\\n    'Georgia',\\n    'Hawaii',\\n    'Idaho',\\n    'Illinois',\\n    'Indiana',\\n    'Vermont',\\n    'Virginia',\\n    'Washington',\\n    'West Virginia',\\n    'Wisconsin',\\n    'Wyoming'\\n  ];\\n  cities = [{\\n    city: 'Norton',\\n    state: 'Virginia',\\n    code: '61523'\\n  }, {\\n    city: 'Grundy',\\n    state: 'Virginia',\\n    code: '77054'\\n  }, {\\n    city: 'Coeburn',\\n    state: 'Virginia',\\n    code: '01665'\\n  }, {\\n    city: 'Phoenix',\\n    state: 'Arizona',\\n    code: '29128'\\n  }, {\\n    city: 'Tucson',\\n    state: 'Arizona',\\n    code: '32084'\\n  }, {\\n    city: 'Mesa',\\n    state: 'Arizona',\\n    code: '21465'\\n  }, {\\n    city: 'Independence',\\n    state: 'Missouri',\\n    code: '26887'\\n  }, {\\n    city: 'Kansas City',\\n    state: 'Missouri',\\n    code: '79286'\\n  }, {\\n    city: 'Springfield',\\n    state: 'Missouri',\\n    code: '92325'\\n  }, {\\n    city: 'St. Louis',\\n    state: 'Missouri',\\n    code: '64891'\\n  }];\\n\\n  ngOnInit(): void {\\n    this.states$ = new Observable((observer: Subscriber<string>) => {\\n      // Runs on every search\\n      observer.next(this.selected4);\\n    })\\n      .pipe(\\n        switchMap((token: string) => {\\n          const query = new RegExp(token, 'i');\\n\\n          return of(\\n            this.states.filter((state: string) => query.test(state))\\n          );\\n        })\\n      );\\n  }\\n}\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-first-item-active',\\r\\n  templateUrl: './first-item-active.html'\\r\\n})\\r\\nexport class DemoTypeaheadFirstItemActiveComponent {\\r\\n  selected: string;\\r\\n  states: string[] = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","export default \"<pre class=\\\"card card-block card-header\\\">Model: {{selected | json}}</pre>\\r\\n<div class=\\\"alert alert-danger\\\" *ngIf=\\\"noResult\\\">No Results Found</div>\\r\\n\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       (typeaheadNoResults)=\\\"typeaheadNoResults($event)\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-multiple-search',\r\n  templateUrl: './multiple-search.html'\r\n})\r\nexport class DemoTypeaheadMultipleSearchComponent {\r\n  selected: string;\r\n  states = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header\">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       [typeaheadMultipleSearch]=\"true\"\r\n       typeaheadMultipleSearchDelimiters=\",|\"\r\n       class=\"form-control\">\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-adaptive-position',\r\n  templateUrl: './adaptive-position.html'\r\n})\r\nexport class DemoTypeaheadAdaptivePositionComponent {\r\n  selected: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header mb-3\">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       [adaptivePosition]=\"true\"\r\n       class=\"form-control\">","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-animated',\\r\\n  templateUrl: './animated.html'\\r\\n})\\r\\nexport class DemoTypeaheadAnimatedComponent {\\r\\n  selected: string;\\r\\n  states: string[] = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","export default \"import { Component } from '@angular/core';\\nimport { TypeaheadConfig } from 'bao-tran-angular/typeahead';\\n\\n// such override allows to keep some initial values\\nexport function getTypeaheadConfig(): TypeaheadConfig {\\n  return Object.assign(new TypeaheadConfig(), { hideResultsOnBlur: false });\\n}\\n\\n@Component({\\n  selector: 'demo-typeahead-config',\\n  templateUrl: './config.html',\\n  providers: [{ provide: TypeaheadConfig, useFactory: getTypeaheadConfig }]\\n})\\nexport class DemoTypeaheadConfigComponent {\\n  selected: string;\\n  states: string[] = [\\n    'Alabama',\\n    'Alaska',\\n    'Arizona',\\n    'Arkansas',\\n    'California',\\n    'Colorado',\\n    'Connecticut',\\n    'Delaware',\\n    'Florida',\\n    'Georgia',\\n    'Hawaii',\\n    'Idaho',\\n    'Illinois',\\n    'Indiana',\\n    'Iowa',\\n    'Kansas',\\n    'Kentucky',\\n    'Louisiana',\\n    'Maine',\\n    'Maryland',\\n    'Massachusetts',\\n    'Michigan',\\n    'Minnesota',\\n    'Mississippi',\\n    'Missouri',\\n    'Montana',\\n    'Nebraska',\\n    'Nevada',\\n    'New Hampshire',\\n    'New Jersey',\\n    'New Mexico',\\n    'New York',\\n    'North Dakota',\\n    'North Carolina',\\n    'Ohio',\\n    'Oklahoma',\\n    'Oregon',\\n    'Pennsylvania',\\n    'Rhode Island',\\n    'South Carolina',\\n    'South Dakota',\\n    'Tennessee',\\n    'Texas',\\n    'Utah',\\n    'Vermont',\\n    'Virginia',\\n    'Washington',\\n    'West Virginia',\\n    'Wisconsin',\\n    'Wyoming'\\n  ];\\n}\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-show-on-blur',\r\n  templateUrl: './show-on-blur.html'\r\n})\r\nexport class DemoTypeaheadShowOnBlurComponent {\r\n  typeaheadHideResultsOnBlur = false;\r\n  selected: string;\r\n  states = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<button type=\"button\" class=\"btn btn-primary mb-3\"\r\n        (click)=\"typeaheadHideResultsOnBlur = !typeaheadHideResultsOnBlur\">Toggle typeaheadHideResultsOnBlur\r\n</button>\r\n<pre class=\"card card-block card-header mb-3\">\r\n  typeaheadHideResultsOnBlur: {{typeaheadHideResultsOnBlur}}\r\n  Model: {{selected | json}}\r\n</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       [typeaheadHideResultsOnBlur]=\"typeaheadHideResultsOnBlur\"\r\n       class=\"form-control\">\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-scrollable',\r\n  templateUrl: './scrollable.html'\r\n})\r\nexport class DemoTypeaheadScrollableComponent {\r\n  selected: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header mb-3\">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       [typeaheadScrollable]=\"true\"\r\n       [typeaheadOptionsInScrollableView]=\"5\"\r\n       class=\"form-control\">\r\n","import { Component } from '@angular/core';\nimport { TypeaheadConfig } from 'bao-tran-angular/typeahead';\n\n// such override allows to keep some initial values\nexport function getTypeaheadConfig(): TypeaheadConfig {\n  return Object.assign(new TypeaheadConfig(), { hideResultsOnBlur: false });\n}\n\n@Component({\n  selector: 'demo-typeahead-config',\n  templateUrl: './config.html',\n  providers: [{ provide: TypeaheadConfig, useFactory: getTypeaheadConfig }]\n})\nexport class DemoTypeaheadConfigComponent {\n  selected: string;\n  states: string[] = [\n    'Alabama',\n    'Alaska',\n    'Arizona',\n    'Arkansas',\n    'California',\n    'Colorado',\n    'Connecticut',\n    'Delaware',\n    'Florida',\n    'Georgia',\n    'Hawaii',\n    'Idaho',\n    'Illinois',\n    'Indiana',\n    'Iowa',\n    'Kansas',\n    'Kentucky',\n    'Louisiana',\n    'Maine',\n    'Maryland',\n    'Massachusetts',\n    'Michigan',\n    'Minnesota',\n    'Mississippi',\n    'Missouri',\n    'Montana',\n    'Nebraska',\n    'Nevada',\n    'New Hampshire',\n    'New Jersey',\n    'New Mexico',\n    'New York',\n    'North Dakota',\n    'North Carolina',\n    'Ohio',\n    'Oklahoma',\n    'Oregon',\n    'Pennsylvania',\n    'Rhode Island',\n    'South Carolina',\n    'South Dakota',\n    'Tennessee',\n    'Texas',\n    'Utah',\n    'Vermont',\n    'Virginia',\n    'Washington',\n    'West Virginia',\n    'Wisconsin',\n    'Wyoming'\n  ];\n}\n","<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       class=\"form-control\">\r\n","export default \"<pre class=\\\"card card-block card-header mb-3\\\">Model: {{selected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       [typeaheadIsFirstItemActive]=\\\"false\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"import { Component } from '@angular/core';\\nimport { TypeaheadMatch } from 'bao-tran-angular/typeahead/typeahead-match.class';\\n\\n@Component({\\n  selector: 'demo-typeahead-on-select',\\n  templateUrl: './on-select.html'\\n})\\nexport class DemoTypeaheadOnSelectComponent {\\n  selectedValue: string;\\n  selectedOption: any;\\n  previewOption: any = null;\\n  states: any[] = [\\n    { id: 1, name: 'Alabama', region: 'South' },\\n    { id: 2, name: 'Alaska', region: 'West' },\\n    { id: 3, name: 'Arizona', region: 'West' },\\n    { id: 4, name: 'Arkansas', region: 'South' },\\n    { id: 5, name: 'California', region: 'West' },\\n    { id: 6, name: 'Colorado', region: 'West' },\\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\\n    { id: 8, name: 'Delaware', region: 'South' },\\n    { id: 9, name: 'Florida', region: 'South' },\\n    { id: 10, name: 'Georgia', region: 'South' },\\n    { id: 11, name: 'Hawaii', region: 'West' },\\n    { id: 12, name: 'Idaho', region: 'West' },\\n    { id: 13, name: 'Illinois', region: 'Midwest' },\\n    { id: 14, name: 'Indiana', region: 'Midwest' },\\n    { id: 15, name: 'Iowa', region: 'Midwest' },\\n    { id: 16, name: 'Kansas', region: 'Midwest' },\\n    { id: 17, name: 'Kentucky', region: 'South' },\\n    { id: 18, name: 'Louisiana', region: 'South' },\\n    { id: 19, name: 'Maine', region: 'Northeast' },\\n    { id: 21, name: 'Maryland', region: 'South' },\\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\\n    { id: 23, name: 'Michigan', region: 'Midwest' },\\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\\n    { id: 25, name: 'Mississippi', region: 'South' },\\n    { id: 26, name: 'Missouri', region: 'Midwest' },\\n    { id: 27, name: 'Montana', region: 'West' },\\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\\n    { id: 29, name: 'Nevada', region: 'West' },\\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\\n    { id: 32, name: 'New Mexico', region: 'West' },\\n    { id: 33, name: 'New York', region: 'Northeast' },\\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\\n    { id: 35, name: 'North Carolina', region: 'South' },\\n    { id: 36, name: 'Ohio', region: 'Midwest' },\\n    { id: 37, name: 'Oklahoma', region: 'South' },\\n    { id: 38, name: 'Oregon', region: 'West' },\\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\\n    { id: 41, name: 'South Carolina', region: 'South' },\\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\\n    { id: 43, name: 'Tennessee', region: 'South' },\\n    { id: 44, name: 'Texas', region: 'South' },\\n    { id: 45, name: 'Utah', region: 'West' },\\n    { id: 46, name: 'Vermont', region: 'Northeast' },\\n    { id: 47, name: 'Virginia', region: 'South' },\\n    { id: 48, name: 'Washington', region: 'South' },\\n    { id: 49, name: 'West Virginia', region: 'South' },\\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\\n    { id: 51, name: 'Wyoming', region: 'West' }\\n  ];\\n\\n  onSelect(event: TypeaheadMatch): void {\\n    this.selectedOption = event.item;\\n  }\\n\\n  onPreview(event: TypeaheadMatch): void {\\n    if (event) {\\n      this.previewOption = event.item;\\n    } else {\\n      this.previewOption = null;\\n    }\\n  }\\n}\\n\";","export default \"<pre class=\\\"card card-block card-header mb-3\\\">Model: {{selected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       [dropup]=\\\"true\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","import { TypeaheadSectionComponent } from './typeahead-section.component';\r\n\r\nexport const routes = [{ path: '', component: TypeaheadSectionComponent }];\r\n","export default \"<ng-template #customItemTemplate let-model=\\\"item\\\" let-index=\\\"index\\\">\\r\\n  <h5>This is: {{model | json}} Index: {{ index }}</h5>\\r\\n</ng-template>\\r\\n\\r\\n<pre class=\\\"card card-block card-header mb-3\\\">Model: {{selected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       [typeaheadItemTemplate]=\\\"customItemTemplate\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-item-template',\\r\\n  templateUrl: './item-template.html'\\r\\n})\\r\\nexport class DemoTypeaheadItemTemplateComponent {\\r\\n  selected: string;\\r\\n  states: string[] = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-on-blur',\r\n  templateUrl: './on-blur.html'\r\n})\r\nexport class DemoTypeaheadOnBlurComponent {\r\n  selected: string;\r\n  optionOnBlur: any;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n\r\n  typeaheadOnBlur(event: any): void {\r\n    this.optionOnBlur = event.item;\r\n  }\r\n}\r\n","<pre class=\"card card-block card-header\">Model: {{selected | json}}</pre>\r\n<pre class=\"card card-block card-header\">Option on blur: {{optionOnBlur | json}}</pre>\r\n\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       (typeaheadOnBlur)=\"typeaheadOnBlur($event)\"\r\n       class=\"form-control\">\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-min-length',\r\n  templateUrl: './min-length.html'\r\n})\r\nexport class DemoTypeaheadMinLengthComponent {\r\n  selected: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header mb-3\">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       [typeaheadMinLength]=\"0\"\r\n       class=\"form-control\">\r\n","import { Component } from '@angular/core';\nimport { TypeaheadMatch } from 'bao-tran-angular/typeahead/typeahead-match.class';\n\n@Component({\n  selector: 'demo-typeahead-on-select',\n  templateUrl: './on-select.html'\n})\nexport class DemoTypeaheadOnSelectComponent {\n  selectedValue: string;\n  selectedOption: any;\n  previewOption: any = null;\n  states: any[] = [\n    { id: 1, name: 'Alabama', region: 'South' },\n    { id: 2, name: 'Alaska', region: 'West' },\n    { id: 3, name: 'Arizona', region: 'West' },\n    { id: 4, name: 'Arkansas', region: 'South' },\n    { id: 5, name: 'California', region: 'West' },\n    { id: 6, name: 'Colorado', region: 'West' },\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\n    { id: 8, name: 'Delaware', region: 'South' },\n    { id: 9, name: 'Florida', region: 'South' },\n    { id: 10, name: 'Georgia', region: 'South' },\n    { id: 11, name: 'Hawaii', region: 'West' },\n    { id: 12, name: 'Idaho', region: 'West' },\n    { id: 13, name: 'Illinois', region: 'Midwest' },\n    { id: 14, name: 'Indiana', region: 'Midwest' },\n    { id: 15, name: 'Iowa', region: 'Midwest' },\n    { id: 16, name: 'Kansas', region: 'Midwest' },\n    { id: 17, name: 'Kentucky', region: 'South' },\n    { id: 18, name: 'Louisiana', region: 'South' },\n    { id: 19, name: 'Maine', region: 'Northeast' },\n    { id: 21, name: 'Maryland', region: 'South' },\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\n    { id: 23, name: 'Michigan', region: 'Midwest' },\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\n    { id: 25, name: 'Mississippi', region: 'South' },\n    { id: 26, name: 'Missouri', region: 'Midwest' },\n    { id: 27, name: 'Montana', region: 'West' },\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\n    { id: 29, name: 'Nevada', region: 'West' },\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\n    { id: 32, name: 'New Mexico', region: 'West' },\n    { id: 33, name: 'New York', region: 'Northeast' },\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\n    { id: 35, name: 'North Carolina', region: 'South' },\n    { id: 36, name: 'Ohio', region: 'Midwest' },\n    { id: 37, name: 'Oklahoma', region: 'South' },\n    { id: 38, name: 'Oregon', region: 'West' },\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\n    { id: 41, name: 'South Carolina', region: 'South' },\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\n    { id: 43, name: 'Tennessee', region: 'South' },\n    { id: 44, name: 'Texas', region: 'South' },\n    { id: 45, name: 'Utah', region: 'West' },\n    { id: 46, name: 'Vermont', region: 'Northeast' },\n    { id: 47, name: 'Virginia', region: 'South' },\n    { id: 48, name: 'Washington', region: 'South' },\n    { id: 49, name: 'West Virginia', region: 'South' },\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\n    { id: 51, name: 'Wyoming', region: 'West' }\n  ];\n\n  onSelect(event: TypeaheadMatch): void {\n    this.selectedOption = event.item;\n  }\n\n  onPreview(event: TypeaheadMatch): void {\n    if (event) {\n      this.previewOption = event.item;\n    } else {\n      this.previewOption = null;\n    }\n  }\n}\n","<pre class=\"card card-block card-header mb-3\">Model: {{selectedValue | json}}</pre>\r\n<pre class=\"card card-block card-header mb-3\">Selected option: {{selectedOption | json}}</pre>\r\n<div>\r\n    <input [(ngModel)]=\"selectedValue\"\r\n        [typeahead]=\"states\"\r\n        typeaheadOptionField=\"name\"\r\n        (typeaheadOnSelect)=\"onSelect($event)\"\r\n        (typeaheadOnPreview)=\"onPreview($event)\"\r\n        class=\"form-control\">\r\n    <div style=\"float:right;width:160px;\"\r\n         class=\"card card-block card-header mb-3\">\r\n        Preview region: \r\n        <span *ngIf=\"previewOption != null\">{{previewOption?.region}}</span>\r\n        <span *ngIf=\"previewOption == null\">N/A</span>\r\n    </div>\r\n</div>","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\r\\n        (click)=\\\"typeaheadSingleWords = !typeaheadSingleWords\\\">Toggle typeaheadSingleWords\\r\\n</button>\\r\\n<pre class=\\\"card card-block card-header\\\">\\r\\n  typeaheadSingleWords: {{typeaheadSingleWords}}\\r\\n  Model: {{selected | json}}\\r\\n</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       [typeaheadSingleWords]=\\\"typeaheadSingleWords\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-item-template',\r\n  templateUrl: './item-template.html'\r\n})\r\nexport class DemoTypeaheadItemTemplateComponent {\r\n  selected: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<ng-template #customItemTemplate let-model=\"item\" let-index=\"index\">\r\n  <h5>This is: {{model | json}} Index: {{ index }}</h5>\r\n</ng-template>\r\n\r\n<pre class=\"card card-block card-header mb-3\">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       [typeaheadItemTemplate]=\"customItemTemplate\"\r\n       class=\"form-control\">\r\n","export default \"<pre class=\\\"card card-block card-header mb-3\\\">Model: {{groupSelected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"groupSelected\\\"\\r\\n       [typeahead]=\\\"statesComplex\\\"\\r\\n       typeaheadOptionField=\\\"name\\\"\\r\\n       typeaheadGroupField=\\\"region\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"<pre class=\\\"card card-block card-header\\\">Model: {{selected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       [typeaheadSingleWords]=\\\"true\\\"\\r\\n       typeaheadPhraseDelimiters=\\\"&,\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-single-world',\r\n  templateUrl: './single-world.html'\r\n})\r\nexport class DemoTypeaheadSingleWorldComponent {\r\n  typeaheadSingleWords = true;\r\n  selected: string;\r\n  states = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<button type=\"button\" class=\"btn btn-primary\"\r\n        (click)=\"typeaheadSingleWords = !typeaheadSingleWords\">Toggle typeaheadSingleWords\r\n</button>\r\n<pre class=\"card card-block card-header\">\r\n  typeaheadSingleWords: {{typeaheadSingleWords}}\r\n  Model: {{selected | json}}\r\n</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       [typeaheadSingleWords]=\"typeaheadSingleWords\"\r\n       class=\"form-control\">\r\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\nimport { Observable, of, Subscriber } from 'rxjs';\\r\\nimport { mergeMap } from 'rxjs/operators';\\r\\n\\r\\ninterface DataSourceType {\\r\\n  id: number;\\r\\n  name: string;\\r\\n  region: string;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-async',\\r\\n  templateUrl: './async.html'\\r\\n})\\r\\nexport class DemoTypeaheadAsyncComponent {\\r\\n  asyncSelected: string;\\r\\n  dataSource: Observable<DataSourceType[]>;\\r\\n  typeaheadLoading: boolean;\\r\\n  statesComplex: DataSourceType[] = [\\r\\n    { id: 1, name: 'Alabama', region: 'South' },\\r\\n    { id: 2, name: 'Alaska', region: 'West' },\\r\\n    { id: 3, name: 'Arizona', region: 'West' },\\r\\n    { id: 4, name: 'Arkansas', region: 'South' },\\r\\n    { id: 5, name: 'California', region: 'West' },\\r\\n    { id: 6, name: 'Colorado', region: 'West' },\\r\\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\\r\\n    { id: 8, name: 'Delaware', region: 'South' },\\r\\n    { id: 9, name: 'Florida', region: 'South' },\\r\\n    { id: 10, name: 'Georgia', region: 'South' },\\r\\n    { id: 11, name: 'Hawaii', region: 'West' },\\r\\n    { id: 12, name: 'Idaho', region: 'West' },\\r\\n    { id: 13, name: 'Illinois', region: 'Midwest' },\\r\\n    { id: 14, name: 'Indiana', region: 'Midwest' },\\r\\n    { id: 15, name: 'Iowa', region: 'Midwest' },\\r\\n    { id: 16, name: 'Kansas', region: 'Midwest' },\\r\\n    { id: 17, name: 'Kentucky', region: 'South' },\\r\\n    { id: 18, name: 'Louisiana', region: 'South' },\\r\\n    { id: 19, name: 'Maine', region: 'Northeast' },\\r\\n    { id: 21, name: 'Maryland', region: 'South' },\\r\\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\\r\\n    { id: 23, name: 'Michigan', region: 'Midwest' },\\r\\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\\r\\n    { id: 25, name: 'Mississippi', region: 'South' },\\r\\n    { id: 26, name: 'Missouri', region: 'Midwest' },\\r\\n    { id: 27, name: 'Montana', region: 'West' },\\r\\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\\r\\n    { id: 29, name: 'Nevada', region: 'West' },\\r\\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\\r\\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\\r\\n    { id: 32, name: 'New Mexico', region: 'West' },\\r\\n    { id: 33, name: 'New York', region: 'Northeast' },\\r\\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\\r\\n    { id: 35, name: 'North Carolina', region: 'South' },\\r\\n    { id: 36, name: 'Ohio', region: 'Midwest' },\\r\\n    { id: 37, name: 'Oklahoma', region: 'South' },\\r\\n    { id: 38, name: 'Oregon', region: 'West' },\\r\\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\\r\\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\\r\\n    { id: 41, name: 'South Carolina', region: 'South' },\\r\\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\\r\\n    { id: 43, name: 'Tennessee', region: 'South' },\\r\\n    { id: 44, name: 'Texas', region: 'South' },\\r\\n    { id: 45, name: 'Utah', region: 'West' },\\r\\n    { id: 46, name: 'Vermont', region: 'Northeast' },\\r\\n    { id: 47, name: 'Virginia', region: 'South' },\\r\\n    { id: 48, name: 'Washington', region: 'South' },\\r\\n    { id: 49, name: 'West Virginia', region: 'South' },\\r\\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\\r\\n    { id: 51, name: 'Wyoming', region: 'West' }\\r\\n  ];\\r\\n\\r\\n  constructor() {\\r\\n    this.dataSource = new Observable((observer: Subscriber<string>) => {\\r\\n      // Runs on every search\\r\\n      observer.next(this.asyncSelected);\\r\\n    })\\r\\n      .pipe(\\r\\n        mergeMap((token: string) => this.getStatesAsObservable(token))\\r\\n      );\\r\\n  }\\r\\n\\r\\n  getStatesAsObservable(token: string): Observable<DataSourceType[]> {\\r\\n    const query = new RegExp(token, 'i');\\r\\n\\r\\n    return of(\\r\\n      this.statesComplex.filter((state: any) => {\\r\\n        return query.test(state.name);\\r\\n      })\\r\\n    );\\r\\n  }\\r\\n\\r\\n  changeTypeaheadLoading(e: boolean): void {\\r\\n    this.typeaheadLoading = e;\\r\\n  }\\r\\n}\\r\\n\";","export default \"<pre class=\\\"card card-block card-header\\\">Model: {{selected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"frenchWords\\\"\\r\\n       [typeaheadLatinize]=\\\"true\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"<pre class=\\\"card card-block card-header\\\">Model: {{selected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       typeaheadWaitMs=\\\"1000\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-container',\\r\\n  templateUrl: './container.html'\\r\\n})\\r\\nexport class DemoTypeaheadContainerComponent {\\r\\n  selected: string;\\r\\n  states: string[] = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-latinize',\\r\\n  templateUrl: './latinize.html'\\r\\n})\\r\\nexport class DemoTypeaheadLatinizeComponent {\\r\\n  selected: string;\\r\\n  frenchWords: string[] = [\\r\\n    'popularisé',\\r\\n    'français',\\r\\n    'intéressé',\\r\\n    'générateur',\\r\\n    'répandue',\\r\\n    'répétition',\\r\\n    'súper'\\r\\n    ];\\r\\n}\\r\\n\";","export default \"<pre class=\\\"card card-block card-header\\\">Model: {{myForm.value.state | json}}</pre>\\r\\n\\r\\n<form [formGroup]=\\\"myForm\\\">\\r\\n  <input formControlName=\\\"state\\\"\\r\\n         [typeahead]=\\\"states\\\"\\r\\n         [typeaheadOptionsLimit]=\\\"7\\\"\\r\\n         [typeaheadMinLength]=\\\"0\\\"\\r\\n         placeholder=\\\"Typeahead inside a form\\\"\\r\\n         class=\\\"form-control\\\">\\r\\n</form>\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-basic',\r\n  templateUrl: './basic.html'\r\n})\r\nexport class DemoTypeaheadBasicComponent {\r\n  selected: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header mb-3\">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       class=\"form-control\">\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-first-item-active',\r\n  templateUrl: './first-item-active.html'\r\n})\r\nexport class DemoTypeaheadFirstItemActiveComponent {\r\n  selected: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header mb-3\">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       [typeaheadIsFirstItemActive]=\"false\"\r\n       class=\"form-control\">\r\n","export default \"<pre class=\\\"card card-block card-header mb-3\\\">Model: {{selected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       [isAnimated]=\\\"true\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"<pre class=\\\"card card-block card-header\\\">Model: {{ asyncSelected | json }}</pre>\\r\\n\\r\\n<input [(ngModel)]=\\\"asyncSelected\\\"\\r\\n       [typeahead]=\\\"dataSource\\\"\\r\\n       [typeaheadAsync]=\\\"true\\\"\\r\\n       typeaheadOptionField=\\\"name\\\"\\r\\n       (typeaheadLoading)=\\\"changeTypeaheadLoading($event)\\\"\\r\\n       placeholder=\\\"Locations loaded via observable\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"<pre class=\\\"card card-block card-header mb-3\\\">Model: {{selected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"<pre class=\\\"card card-block card-header\\\">Model: {{model | json}}</pre>\\r\\n\\r\\n<form>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"address\\\">Address</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"address\\\" required\\r\\n           [(ngModel)]=\\\"model.address\\\" name=\\\"address\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"state\\\">State</label>\\r\\n    <input id=\\\"state\\\" class=\\\"form-control\\\" name=\\\"state\\\"\\r\\n           [(ngModel)]=\\\"model.state\\\" [typeahead]=\\\"states\\\">\\r\\n  </div>\\r\\n</form>\\r\\n\";","export default \"import { Component } from '@angular/core';\\n\\nimport { isBs3 } from 'bao-tran-angular/utils';\\n\\n@Component({\\n  selector: 'demo-typeahead-templates',\\n  templateUrl: './list-template.html',\\n  styles: [`\\n    .custom-list-group {\\n      display: flex;\\n      flex-direction: column;\\n      width: 300px;\\n      padding-left: 0;\\n      margin: 0;\\n      list-style: none;\\n    }\\n\\n    .custom-list-group-item {\\n      position: relative;\\n      display: block;\\n      padding: .75rem 1.25rem;\\n      background-color: #fff;\\n    }\\n\\n    .custom-list-group-item.active {\\n      z-index: 2;\\n      color: #fff;\\n      background-color: #FF4461;\\n      border-color: #FF4461;\\n    }\\n  `]\\n})\\nexport class DemoTypeaheadListTemplateComponent {\\n  isBs3 = isBs3();\\n  selected: string;\\n  states: string[] = [\\n    'Alabama',\\n    'Alaska',\\n    'Arizona',\\n    'Arkansas',\\n    'California',\\n    'Colorado',\\n    'Connecticut',\\n    'Delaware',\\n    'Florida',\\n    'Georgia',\\n    'Hawaii',\\n    'Idaho',\\n    'Illinois',\\n    'Indiana',\\n    'Iowa',\\n    'Kansas',\\n    'Kentucky',\\n    'Louisiana',\\n    'Maine',\\n    'Maryland',\\n    'Massachusetts',\\n    'Michigan',\\n    'Minnesota',\\n    'Mississippi',\\n    'Missouri',\\n    'Montana',\\n    'Nebraska',\\n    'Nevada',\\n    'New Hampshire',\\n    'New Jersey',\\n    'New Mexico',\\n    'New York',\\n    'North Dakota',\\n    'North Carolina',\\n    'Ohio',\\n    'Oklahoma',\\n    'Oregon',\\n    'Pennsylvania',\\n    'Rhode Island',\\n    'South Carolina',\\n    'South Dakota',\\n    'Tennessee',\\n    'Texas',\\n    'Utah',\\n    'Vermont',\\n    'Virginia',\\n    'Washington',\\n    'West Virginia',\\n    'Wisconsin',\\n    'Wyoming'\\n  ];\\n}\\n\";","export default \"<pre class=\\\"card card-block card-header mb-3\\\">Model: {{selected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       [adaptivePosition]=\\\"true\\\"\\r\\n       class=\\\"form-control\\\">\";","export default \"<pre class=\\\"card card-block card-header mb-3\\\">Model: {{selected | json}}</pre>\\r\\n\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       container=\\\"body\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary mb-3\\\"\\r\\n        (click)=\\\"typeaheadHideResultsOnBlur = !typeaheadHideResultsOnBlur\\\">Toggle typeaheadHideResultsOnBlur\\r\\n</button>\\r\\n<pre class=\\\"card card-block card-header mb-3\\\">\\r\\n  typeaheadHideResultsOnBlur: {{typeaheadHideResultsOnBlur}}\\r\\n  Model: {{selected | json}}\\r\\n</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       [typeaheadHideResultsOnBlur]=\\\"typeaheadHideResultsOnBlur\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-delay',\\r\\n  templateUrl: './delay.html'\\r\\n})\\r\\nexport class DemoTypeaheadDelayComponent {\\r\\n  selected: string;\\r\\n  states: string[] = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-field',\r\n  templateUrl: './field.html'\r\n})\r\nexport class DemoTypeaheadFieldComponent {\r\n  customSelected: string;\r\n  statesComplex: any[] = [\r\n    { id: 1, name: 'Alabama', region: 'South' },\r\n    { id: 2, name: 'Alaska', region: 'West' },\r\n    { id: 3, name: 'Arizona', region: 'West' },\r\n    { id: 4, name: 'Arkansas', region: 'South' },\r\n    { id: 5, name: 'California', region: 'West' },\r\n    { id: 6, name: 'Colorado', region: 'West' },\r\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\r\n    { id: 8, name: 'Delaware', region: 'South' },\r\n    { id: 9, name: 'Florida', region: 'South' },\r\n    { id: 10, name: 'Georgia', region: 'South' },\r\n    { id: 11, name: 'Hawaii', region: 'West' },\r\n    { id: 12, name: 'Idaho', region: 'West' },\r\n    { id: 13, name: 'Illinois', region: 'Midwest' },\r\n    { id: 14, name: 'Indiana', region: 'Midwest' },\r\n    { id: 15, name: 'Iowa', region: 'Midwest' },\r\n    { id: 16, name: 'Kansas', region: 'Midwest' },\r\n    { id: 17, name: 'Kentucky', region: 'South' },\r\n    { id: 18, name: 'Louisiana', region: 'South' },\r\n    { id: 19, name: 'Maine', region: 'Northeast' },\r\n    { id: 21, name: 'Maryland', region: 'South' },\r\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\r\n    { id: 23, name: 'Michigan', region: 'Midwest' },\r\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\r\n    { id: 25, name: 'Mississippi', region: 'South' },\r\n    { id: 26, name: 'Missouri', region: 'Midwest' },\r\n    { id: 27, name: 'Montana', region: 'West' },\r\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\r\n    { id: 29, name: 'Nevada', region: 'West' },\r\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\r\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\r\n    { id: 32, name: 'New Mexico', region: 'West' },\r\n    { id: 33, name: 'New York', region: 'Northeast' },\r\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\r\n    { id: 35, name: 'North Carolina', region: 'South' },\r\n    { id: 36, name: 'Ohio', region: 'Midwest' },\r\n    { id: 37, name: 'Oklahoma', region: 'South' },\r\n    { id: 38, name: 'Oregon', region: 'West' },\r\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\r\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\r\n    { id: 41, name: 'South Carolina', region: 'South' },\r\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\r\n    { id: 43, name: 'Tennessee', region: 'South' },\r\n    { id: 44, name: 'Texas', region: 'South' },\r\n    { id: 45, name: 'Utah', region: 'West' },\r\n    { id: 46, name: 'Vermont', region: 'Northeast' },\r\n    { id: 47, name: 'Virginia', region: 'South' },\r\n    { id: 48, name: 'Washington', region: 'South' },\r\n    { id: 49, name: 'West Virginia', region: 'South' },\r\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\r\n    { id: 51, name: 'Wyoming', region: 'West' }\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header mb-3\">Model: {{customSelected | json}}</pre>\r\n<input [(ngModel)]=\"customSelected\"\r\n       [typeahead]=\"statesComplex\"\r\n       typeaheadOptionField=\"name\"\r\n       class=\"form-control\">\r\n","export default \"<pre class=\\\"card card-block card-header mb-3\\\">Model: {{selected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       [typeaheadScrollable]=\\\"true\\\"\\r\\n       [typeaheadOptionsInScrollableView]=\\\"5\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","import { ApiSectionsComponent } from '../../docs/demo-section-components/demo-api-section';\r\nimport { ContentSection } from '../../docs/models/content-section.model';\r\nimport { DemoTopSectionComponent } from '../../docs/demo-section-components/demo-top-section';\r\nimport { DemoTypeaheadAdaptivePositionComponent } from './demos/adaptive-position/adaptive-position';\r\nimport { DemoTypeaheadAnimatedComponent } from './demos/animated/animated';\r\nimport { DemoTypeaheadBasicComponent } from './demos/basic/basic';\r\nimport { DemoTypeaheadCancelRequestOnFocusLostComponent } from './demos/cancel-on-focus-lost/cancel-on-focus-lost';\r\nimport { DemoTypeaheadConfigComponent } from './demos/config/config';\r\nimport { DemoTypeaheadContainerComponent } from './demos/container/container';\r\nimport { DemoTypeaheadDelayComponent } from './demos/delay/delay';\r\nimport { DemoTypeaheadDropupComponent } from './demos/dropup/dropup';\r\nimport { DemoTypeaheadFieldComponent } from './demos/field/field';\r\nimport { DemoTypeaheadAsyncComponent } from './demos/async/async';\r\nimport { DemoTypeaheadReactiveFormComponent } from './demos/reactive-form/reactive-form';\r\nimport { DemoTypeaheadFormComponent } from './demos/form/form';\r\nimport { DemoTypeaheadGroupingComponent } from './demos/grouping/grouping';\r\nimport { DemoTypeaheadItemTemplateComponent } from './demos/item-template/item-template';\r\nimport { DemoTypeaheadListTemplateComponent } from './demos/list-template/list-template';\r\nimport { DemoTypeaheadLatinizeComponent } from './demos/latinize/latinize';\r\nimport { DemoTypeaheadMinLengthComponent } from './demos/min-length/min-length';\r\nimport { DemoTypeaheadNoResultComponent } from './demos/no-result/no-result';\r\nimport { DemoTypeaheadOnBlurComponent } from './demos/on-blur/on-blur';\r\nimport { DemoTypeaheadOnSelectComponent } from './demos/on-select/on-select';\r\nimport { DemoTypeaheadPhraseDelimitersComponent } from './demos/phrase-delimiters/phrase-delimiters';\r\nimport { DemoTypeaheadScrollableComponent } from './demos/scrollable/scrollable';\r\nimport { DemotypeaheadSelectFirstItemComponent } from './demos/selected-first-item/selected-first-item';\r\nimport { DemoTypeaheadShowOnBlurComponent } from './demos/show-on-blur/show-on-blur';\r\nimport { DemoTypeaheadSingleWorldComponent } from './demos/single-world/single-world';\r\nimport { ExamplesComponent } from '../../docs/demo-section-components/demo-examples-section';\r\n\r\nimport { NgApiDocComponent, NgApiDocConfigComponent } from '../../docs/api-docs';\r\nimport { DemoTypeaheadFirstItemActiveComponent } from './demos/first-item-active/first-item-active';\r\nimport { DemoTypeaheadAsyncHttpRequestComponent } from './demos/async-http-request/async-http-request';\r\nimport { DemoTypeaheadOrderingComponent } from './demos/ordering/ordering';\r\nimport { DemoTypeaheadMultipleSearchComponent } from './demos/multiple-search/multiple-search';\r\n\r\nexport const demoComponentContent: ContentSection[] = [\r\n  {\r\n    name: 'Usage',\r\n    anchor: 'usage',\r\n    outlet: DemoTopSectionComponent,\r\n    content: {\r\n      doc: require('!!raw-loader!./docs/usage.md')\r\n    }\r\n  },\r\n  {\r\n    name: 'Examples',\r\n    anchor: 'examples',\r\n    outlet: ExamplesComponent,\r\n    content: [\r\n      {\r\n        title: 'Basic array',\r\n        anchor: 'Basic-array',\r\n        component: require('!!raw-loader!./demos/basic/basic.ts'),\r\n        html: require('!!raw-loader!./demos/basic/basic.html'),\r\n        outlet: DemoTypeaheadBasicComponent\r\n      },\r\n      {\r\n        title: 'With animation',\r\n        anchor: 'animated',\r\n        component: require('!!raw-loader!./demos/animated/animated'),\r\n        html: require('!!raw-loader!./demos/animated/animated.html'),\r\n        description: `You can enable animation via <code>isAnimated</code> input or config option`,\r\n        outlet: DemoTypeaheadAnimatedComponent\r\n      },\r\n      {\r\n        title: 'Adaptive position',\r\n        anchor: 'adaptive-position',\r\n        description: `\r\n          <p>You can enable adaptive position via <code>adaptivePosition</code> input or config option</p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/adaptive-position/adaptive-position.ts'),\r\n        html: require('!!raw-loader!./demos/adaptive-position/adaptive-position.html'),\r\n        outlet: DemoTypeaheadAdaptivePositionComponent\r\n      },\r\n      {\r\n        title: 'Item template',\r\n        anchor: 'item-template',\r\n        component: require('!!raw-loader!./demos/item-template/item-template.ts'),\r\n        html: require('!!raw-loader!./demos/item-template/item-template.html'),\r\n        outlet: DemoTypeaheadItemTemplateComponent\r\n      },\r\n      {\r\n        title: 'List template',\r\n        anchor: 'list-template',\r\n        component: require('!!raw-loader!./demos/list-template/list-template.ts'),\r\n        html: require('!!raw-loader!./demos/list-template/list-template.html'),\r\n        outlet: DemoTypeaheadListTemplateComponent\r\n      },\r\n      {\r\n        title: 'Option field',\r\n        anchor: 'option-field',\r\n        component: require('!!raw-loader!./demos/field/field.ts'),\r\n        html: require('!!raw-loader!./demos/field/field.html'),\r\n        outlet: DemoTypeaheadFieldComponent\r\n      },\r\n      {\r\n        title: 'Async data',\r\n        anchor: 'async-data',\r\n        component: require('!!raw-loader!./demos/async/async.ts'),\r\n        html: require('!!raw-loader!./demos/async/async.html'),\r\n        outlet: DemoTypeaheadAsyncComponent\r\n      },\r\n      {\r\n        title: 'Async using http request',\r\n        anchor: 'async-http-request',\r\n        description: `\r\n          <p>Use http request to search for data. If you need to handle http error, do this inside <code>tap</code> operator.\r\n          Enter search value several times (10-15), and after a few success responses API should return an error\r\n          (GitHub limit for requests)</p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/async-http-request/async-http-request.ts'),\r\n        html: require('!!raw-loader!./demos/async-http-request/async-http-request.html'),\r\n        outlet: DemoTypeaheadAsyncHttpRequestComponent\r\n      },\r\n      {\r\n        title: 'Cancel on focus lost',\r\n        anchor: 'cancel-on-focus-lost',\r\n        description: `<p>Set config property <code>cancelRequestOnFocusLost</code> to <code>true</code> if you want to cancel async request on focus lost event</p>`,\r\n        component: require('!!raw-loader!./demos/cancel-on-focus-lost/cancel-on-focus-lost.ts'),\r\n        html: require('!!raw-loader!./demos/cancel-on-focus-lost/cancel-on-focus-lost.html'),\r\n        outlet: DemoTypeaheadCancelRequestOnFocusLostComponent\r\n      },\r\n      {\r\n        title: 'With delay',\r\n        anchor: 'delay',\r\n        description: `\r\n          <p>Use <code>typeaheadWaitMs</code> to set minimal waiting time after last character typed\r\n          before typeahead kicks-in. In example a search begins with delay in 1 second</p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/delay/delay.ts'),\r\n        html: require('!!raw-loader!./demos/delay/delay.html'),\r\n        outlet: DemoTypeaheadDelayComponent\r\n      },\r\n      {\r\n        title: 'Template-driven forms',\r\n        anchor: 'forms',\r\n        description: `\r\n          <p>Typeahead can be used in template-driven forms. Keep in mind that value of <code>ngModel</code> is\r\n          <code>string</code></p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/form/form.ts'),\r\n        html: require('!!raw-loader!./demos/form/form.html'),\r\n        outlet: DemoTypeaheadFormComponent\r\n      },\r\n      {\r\n        title: 'Reactive forms',\r\n        anchor: 'reactive-forms',\r\n        description: `\r\n          <p>Typeahead can be used in reactive forms</p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/reactive-form/reactive-form.ts'),\r\n        html: require('!!raw-loader!./demos/reactive-form/reactive-form.html'),\r\n        outlet: DemoTypeaheadReactiveFormComponent\r\n      },\r\n      {\r\n        title: 'Grouping results',\r\n        anchor: 'grouping-results',\r\n        component: require('!!raw-loader!./demos/grouping/grouping.ts'),\r\n        html: require('!!raw-loader!./demos/grouping/grouping.html'),\r\n        outlet: DemoTypeaheadGroupingComponent\r\n      },\r\n      {\r\n        title: 'Ignore spaces and order',\r\n        anchor: 'single-world',\r\n        component: require('!!raw-loader!./demos/single-world/single-world.ts'),\r\n        html: require('!!raw-loader!./demos/single-world/single-world.html'),\r\n        description: `\r\n          <p>After setting <code>typeaheadSingleWords</code> input property to <code>true</code>\r\n          order of typed symbols and spaces between them will be ignored. For example, \"<i>zona ari</i>\"\r\n          will match with \"<i>Arizona</i>\"</p>\r\n        `,\r\n        outlet: DemoTypeaheadSingleWorldComponent\r\n      },\r\n      {\r\n        title: 'Phrase delimiters',\r\n        anchor: 'phrase-delimiters',\r\n        component: require('!!raw-loader!./demos/phrase-delimiters/phrase-delimiters.ts'),\r\n        html: require('!!raw-loader!./demos/phrase-delimiters/phrase-delimiters.html'),\r\n        description: `\r\n          <p>Set the word delimiter by <code>typeaheadPhraseDelimiters</code> to match exact phrase.\r\n          This is demo with delimeters \"<code>&</code>\" and \"<code>,</code>\"</p>\r\n        `,\r\n        outlet: DemoTypeaheadPhraseDelimitersComponent\r\n      },\r\n      {\r\n        title: 'Dropup',\r\n        anchor: 'dropup',\r\n        component: require('!!raw-loader!./demos/dropup/dropup.ts'),\r\n        html: require('!!raw-loader!./demos/dropup/dropup.html'),\r\n        outlet: DemoTypeaheadDropupComponent\r\n      },\r\n      {\r\n        title: 'On blur',\r\n        anchor: 'on-blur',\r\n        description: `\r\n         <p>Returns an option on which user lost a focus. To reproduce start typing the name of the state, then focus\r\n         on one of the options with mouse or arrow keys and click outside of the typeahead</p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/on-blur/on-blur.ts'),\r\n        html: require('!!raw-loader!./demos/on-blur/on-blur.html'),\r\n        outlet: DemoTypeaheadOnBlurComponent\r\n      },\r\n      {\r\n        title: 'Append to body',\r\n        anchor: 'container',\r\n        description: `\r\n        <p><code>container</code> is an input property specifying the element the typeahead should be appended to.</p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/container/container.ts'),\r\n        html: require('!!raw-loader!./demos/container/container.html'),\r\n        outlet: DemoTypeaheadContainerComponent\r\n      },\r\n      {\r\n        title: 'No result',\r\n        anchor: 'no-result',\r\n        description: `\r\n         <p>Used to display the state when no matches were found. To see message\r\n         \"No Results Found\" enter the value that doesn't match anything from the list</p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/no-result/no-result.ts'),\r\n        html: require('!!raw-loader!./demos/no-result/no-result.html'),\r\n        outlet: DemoTypeaheadNoResultComponent\r\n      },\r\n      {\r\n        title: 'Scrollable',\r\n        anchor: 'scrollable',\r\n        component: require('!!raw-loader!./demos/scrollable/scrollable.ts'),\r\n        html: require('!!raw-loader!./demos/scrollable/scrollable.html'),\r\n        outlet: DemoTypeaheadScrollableComponent\r\n      },\r\n      {\r\n        title: 'Latinize',\r\n        anchor: 'latinize',\r\n        description: `\r\n          <p>Use <code>typeaheadLatinize</code> property for matching latin symbols. If it is set\r\n          to <code>true</code> the word <strong>súper</strong> would match <strong>super</strong> and vice versa.</p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/latinize/latinize.ts'),\r\n        html: require('!!raw-loader!./demos/latinize/latinize.html'),\r\n        outlet: DemoTypeaheadLatinizeComponent\r\n      },\r\n      {\r\n        title: 'On select / On preview',\r\n        anchor: 'on-select',\r\n        description: `\r\n          <p><code>typeaheadOnSelect</code> event is fired when an option was selected.\r\n          Returns an object with this option.</p>\r\n          <p><code>typeaheadOnPreview</code> event is fired when an option was highlighted.\r\n          Returns an object with this option.</p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/on-select/on-select.ts'),\r\n        html: require('!!raw-loader!./demos/on-select/on-select.html'),\r\n        outlet: DemoTypeaheadOnSelectComponent\r\n      },\r\n      {\r\n        title: 'Min length',\r\n        anchor: 'min-length',\r\n        description: `\r\n          <p>Minimal number of characters that needs to be entered before typeahead kicks in. When set to 0, typeahead shows on focus with full list of options.</p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/min-length/min-length.ts'),\r\n        html: require('!!raw-loader!./demos/min-length/min-length.html'),\r\n        outlet: DemoTypeaheadMinLengthComponent\r\n      },\r\n      {\r\n        title: 'Show results on blur',\r\n        anchor: 'show-on-blur',\r\n        description: `\r\n          <p>Use input property <code>typeaheadHideResultsOnBlur</code> or config property <code>hideResultsOnBlur</code>\r\n          to prevent hiding typeahead's results until a user doesn't choose an item</p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/show-on-blur/show-on-blur.ts'),\r\n        html: require('!!raw-loader!./demos/show-on-blur/show-on-blur.html'),\r\n        outlet: DemoTypeaheadShowOnBlurComponent\r\n      },\r\n      {\r\n        title: 'Configuring defaults',\r\n        anchor: 'configuration',\r\n        component: require('!!raw-loader!./demos/config/config'),\r\n        html: require('!!raw-loader!./demos/config/config.html'),\r\n        outlet: DemoTypeaheadConfigComponent\r\n      },\r\n      {\r\n        title: 'Is first item active',\r\n        anchor: 'first-item-active',\r\n        description: `\r\n          <p>Use input property <code>typeaheadIsFirstItemActive</code> or config property <code>isFirstItemActive</code> to make the first item active/inactive </p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/first-item-active/first-item-active.ts'),\r\n        html: require('!!raw-loader!./demos/first-item-active/first-item-active.html'),\r\n        outlet: DemoTypeaheadFirstItemActiveComponent\r\n      },\r\n      {\r\n        title: 'Selected first item',\r\n        anchor: 'selected-first-item',\r\n        description: `\r\n          <p>Use <code>typeaheadSelectFirstItem</code> property to make the first item in options list unselectable by tab and enter.</p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/selected-first-item/selected-first-item.ts'),\r\n        html: require('!!raw-loader!./demos/selected-first-item/selected-first-item.html'),\r\n        outlet: DemotypeaheadSelectFirstItemComponent\r\n      },\r\n      {\r\n        title: 'Order results',\r\n        anchor: 'typeahead-ordering',\r\n        description: `\r\n          <p>Use <code>typeaheadOrderBy</code> property to order your result by a certain field and in certain direction</p>\r\n        `,\r\n        component: require('!!raw-loader!./demos/ordering/ordering.ts'),\r\n        html: require('!!raw-loader!./demos/ordering/ordering.html'),\r\n        outlet: DemoTypeaheadOrderingComponent\r\n      },\r\n      {\r\n        title: 'Multiple search',\r\n        anchor: 'multiple-search',\r\n        component: require('!!raw-loader!./demos/multiple-search/multiple-search.ts'),\r\n        html: require('!!raw-loader!./demos/multiple-search/multiple-search.html'),\r\n        description: `\r\n          <p>Set <code>typeaheadMultipleSearch</code> input property to <code>true</code>\r\n          and provide the multiple search delimiter by <code>typeaheadMultipleSearchDelimiters</code>\r\n          to be able to search typeahead again after using one of the provided delimiters. Default delimiter\r\n          is \"<code>,</code>\" if <code>typeaheadMultipleSearchDelimiters</code> is not used.\r\n          After picking a first value from typeahead\r\n          dropdown, type \"<code>,</code>\" or \"<code>|</code>\" and then next value can be searched.\r\n          This is demo with delimeters \"<code>,</code>\" and \"<code>|</code>\"</p>\r\n        `,\r\n        outlet: DemoTypeaheadMultipleSearchComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'API Reference',\r\n    anchor: 'api-reference',\r\n    outlet: ApiSectionsComponent,\r\n    content: [\r\n      {\r\n        title: 'TypeaheadDirective',\r\n        anchor: 'TypeaheadDirective',\r\n        outlet: NgApiDocComponent\r\n      },\r\n      {\r\n        title: 'TypeaheadConfig',\r\n        anchor: 'bs-typeahead-config',\r\n        outlet: NgApiDocConfigComponent\r\n      },\r\n      {\r\n        title: 'TypeaheadOptionListContext',\r\n        anchor: 'typeahead-option-list-context',\r\n        outlet: NgApiDocConfigComponent\r\n      },\r\n      {\r\n        title: 'TypeaheadOptionItemContext',\r\n        anchor: 'typeahead-option-item-context',\r\n        outlet: NgApiDocConfigComponent\r\n      },\r\n      {\r\n        title: 'TypeaheadTemplateMethods',\r\n        anchor: 'typeahead-template method',\r\n        outlet: NgApiDocConfigComponent,\r\n        showMethods: true\r\n      }\r\n    ]\r\n  }\r\n// tslint:disable-next-line:max-file-line-count\r\n];\r\n","export default \"import { Component } from '@angular/core';\\nimport { Observable, of } from 'rxjs';\\nimport { TypeaheadMatch } from 'bao-tran-angular/typeahead';\\nimport { mergeMap, delay } from 'rxjs/operators';\\nimport { TypeaheadConfig } from 'bao-tran-angular/typeahead';\\n\\nexport function getTypeaheadConfig(): TypeaheadConfig {\\n  return Object.assign(new TypeaheadConfig(), { cancelRequestOnFocusLost: true });\\n}\\n\\n@Component({\\n  selector: 'demo-typeahead-cancel-on-focus-lost',\\n  templateUrl: './cancel-on-focus-lost.html',\\n  providers: [{ provide: TypeaheadConfig, useFactory: getTypeaheadConfig }]\\n})\\nexport class DemoTypeaheadCancelRequestOnFocusLostComponent {\\n  asyncSelected: string;\\n  typeaheadLoading: boolean;\\n  typeaheadNoResults: boolean;\\n  dataSource: Observable<any>;\\n  statesComplex: any[] = [\\n    { id: 1, name: 'Alabama', region: 'South' },\\n    { id: 2, name: 'Alaska', region: 'West' },\\n    { id: 3, name: 'Arizona', region: 'West' },\\n    { id: 4, name: 'Arkansas', region: 'South' },\\n    { id: 5, name: 'California', region: 'West' },\\n    { id: 6, name: 'Colorado', region: 'West' },\\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\\n    { id: 8, name: 'Delaware', region: 'South' },\\n    { id: 9, name: 'Florida', region: 'South' },\\n    { id: 10, name: 'Georgia', region: 'South' },\\n    { id: 11, name: 'Hawaii', region: 'West' },\\n    { id: 12, name: 'Idaho', region: 'West' },\\n    { id: 13, name: 'Illinois', region: 'Midwest' },\\n    { id: 14, name: 'Indiana', region: 'Midwest' },\\n    { id: 15, name: 'Iowa', region: 'Midwest' },\\n    { id: 16, name: 'Kansas', region: 'Midwest' },\\n    { id: 17, name: 'Kentucky', region: 'South' },\\n    { id: 18, name: 'Louisiana', region: 'South' },\\n    { id: 19, name: 'Maine', region: 'Northeast' },\\n    { id: 21, name: 'Maryland', region: 'South' },\\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\\n    { id: 23, name: 'Michigan', region: 'Midwest' },\\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\\n    { id: 25, name: 'Mississippi', region: 'South' },\\n    { id: 26, name: 'Missouri', region: 'Midwest' },\\n    { id: 27, name: 'Montana', region: 'West' },\\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\\n    { id: 29, name: 'Nevada', region: 'West' },\\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\\n    { id: 32, name: 'New Mexico', region: 'West' },\\n    { id: 33, name: 'New York', region: 'Northeast' },\\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\\n    { id: 35, name: 'North Carolina', region: 'South' },\\n    { id: 36, name: 'Ohio', region: 'Midwest' },\\n    { id: 37, name: 'Oklahoma', region: 'South' },\\n    { id: 38, name: 'Oregon', region: 'West' },\\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\\n    { id: 41, name: 'South Carolina', region: 'South' },\\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\\n    { id: 43, name: 'Tennessee', region: 'South' },\\n    { id: 44, name: 'Texas', region: 'South' },\\n    { id: 45, name: 'Utah', region: 'West' },\\n    { id: 46, name: 'Vermont', region: 'Northeast' },\\n    { id: 47, name: 'Virginia', region: 'South' },\\n    { id: 48, name: 'Washington', region: 'South' },\\n    { id: 49, name: 'West Virginia', region: 'South' },\\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\\n    { id: 51, name: 'Wyoming', region: 'West' }\\n  ];\\n\\n  constructor() {\\n    this.dataSource = Observable.create((observer: any) => {\\n      // Runs on every search\\n      observer.next(this.asyncSelected);\\n    })\\n      .pipe(\\n        mergeMap((token: string) => this.getStatesAsObservable(token)),\\n        delay(1000)\\n      );\\n  }\\n\\n  getStatesAsObservable(token: string): Observable<any> {\\n    const query = new RegExp(token, 'i');\\n\\n    return of(\\n      this.statesComplex.filter((state: any) => {\\n        return query.test(state.name);\\n      })\\n    );\\n  }\\n\\n  changeTypeaheadLoading(e: boolean): void {\\n    this.typeaheadLoading = e;\\n  }\\n\\n  typeaheadOnSelect(e: TypeaheadMatch): void {\\n    console.log('Selected value: ', e.value);\\n  }\\n}\\n\";","import { DemoTypeaheadAdaptivePositionComponent } from './adaptive-position/adaptive-position';\r\nimport { DemoTypeaheadAsyncComponent } from './async/async';\r\nimport { DemoTypeaheadBasicComponent } from './basic/basic';\r\nimport { DemoTypeaheadConfigComponent } from './config/config';\r\nimport { DemoTypeaheadAnimatedComponent } from './animated/animated';\r\nimport { DemoTypeaheadContainerComponent } from './container/container';\r\nimport { DemoTypeaheadDelayComponent } from './delay/delay';\r\nimport { DemoTypeaheadDropupComponent } from './dropup/dropup';\r\nimport { DemoTypeaheadListTemplateComponent } from './list-template/list-template';\r\nimport { DemoTypeaheadFieldComponent } from './field/field';\r\nimport { DemoTypeaheadCancelRequestOnFocusLostComponent } from './cancel-on-focus-lost/cancel-on-focus-lost';\r\nimport { DemoTypeaheadReactiveFormComponent } from './reactive-form/reactive-form';\r\nimport { DemoTypeaheadFirstItemActiveComponent } from './first-item-active/first-item-active';\r\nimport { DemoTypeaheadFormComponent } from './form/form';\r\nimport { DemoTypeaheadGroupingComponent } from './grouping/grouping';\r\nimport { DemoTypeaheadItemTemplateComponent } from './item-template/item-template';\r\nimport { DemoTypeaheadLatinizeComponent } from './latinize/latinize';\r\nimport { DemoTypeaheadMinLengthComponent } from './min-length/min-length';\r\nimport { DemoTypeaheadNoResultComponent } from './no-result/no-result';\r\nimport { DemoTypeaheadOnBlurComponent } from './on-blur/on-blur';\r\nimport { DemoTypeaheadOnSelectComponent } from './on-select/on-select';\r\nimport { DemoTypeaheadPhraseDelimitersComponent } from './phrase-delimiters/phrase-delimiters';\r\nimport { DemoTypeaheadScrollableComponent } from './scrollable/scrollable';\r\nimport { DemotypeaheadSelectFirstItemComponent } from './selected-first-item/selected-first-item';\r\nimport { DemoTypeaheadShowOnBlurComponent } from './show-on-blur/show-on-blur';\r\nimport { DemoTypeaheadSingleWorldComponent } from './single-world/single-world';\r\nimport { DemoTypeaheadAsyncHttpRequestComponent } from './async-http-request/async-http-request';\r\nimport { DemoTypeaheadOrderingComponent } from './ordering/ordering';\r\nimport { DemoTypeaheadMultipleSearchComponent } from './multiple-search/multiple-search';\r\n\r\nexport const DEMO_COMPONENTS = [\r\n  DemoTypeaheadAdaptivePositionComponent,\r\n  DemoTypeaheadAnimatedComponent,\r\n  DemoTypeaheadAsyncComponent,\r\n  DemoTypeaheadBasicComponent,\r\n  DemoTypeaheadConfigComponent,\r\n  DemoTypeaheadContainerComponent,\r\n  DemoTypeaheadDelayComponent,\r\n  DemoTypeaheadDropupComponent,\r\n  DemoTypeaheadListTemplateComponent,\r\n  DemoTypeaheadFieldComponent,\r\n  DemoTypeaheadAsyncComponent,\r\n  DemoTypeaheadCancelRequestOnFocusLostComponent,\r\n  DemoTypeaheadReactiveFormComponent,\r\n  DemoTypeaheadFirstItemActiveComponent,\r\n  DemoTypeaheadFormComponent,\r\n  DemoTypeaheadGroupingComponent,\r\n  DemoTypeaheadItemTemplateComponent,\r\n  DemoTypeaheadLatinizeComponent,\r\n  DemoTypeaheadMinLengthComponent,\r\n  DemoTypeaheadNoResultComponent,\r\n  DemoTypeaheadOnBlurComponent,\r\n  DemoTypeaheadOnSelectComponent,\r\n  DemoTypeaheadPhraseDelimitersComponent,\r\n  DemoTypeaheadReactiveFormComponent,\r\n  DemoTypeaheadScrollableComponent,\r\n  DemotypeaheadSelectFirstItemComponent,\r\n  DemoTypeaheadShowOnBlurComponent,\r\n  DemoTypeaheadSingleWorldComponent,\r\n  DemoTypeaheadAsyncHttpRequestComponent,\r\n  DemoTypeaheadOrderingComponent,\r\n  DemoTypeaheadMultipleSearchComponent\r\n];\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-animated',\r\n  templateUrl: './animated.html'\r\n})\r\nexport class DemoTypeaheadAnimatedComponent {\r\n  selected: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header mb-3\">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       [isAnimated]=\"true\"\r\n       class=\"form-control\">\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TypeaheadModule } from 'bao-tran-angular/typeahead';\n\nimport { DocsModule } from '../../docs';\nimport { TypeaheadSectionComponent } from './typeahead-section.component';\nimport { DEMO_COMPONENTS } from './demos';\nimport { routes } from './demo-typeahead.routes';\n\n@NgModule({\n  declarations: [\n    TypeaheadSectionComponent,\n    ...DEMO_COMPONENTS\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    DocsModule,\n    TypeaheadModule.forRoot(),\n    RouterModule.forChild(routes)\n  ],\n  exports: [TypeaheadSectionComponent],\n  entryComponents: [...DEMO_COMPONENTS]\n})\nexport class DemoTypeaheadModule {}\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-basic',\\r\\n  templateUrl: './basic.html'\\r\\n})\\r\\nexport class DemoTypeaheadBasicComponent {\\r\\n  selected: string;\\r\\n  states: string[] = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { noop, Observable, Observer, of } from 'rxjs';\r\nimport { map, switchMap, tap } from 'rxjs/operators';\r\n\r\ninterface GitHubUserSearchResponse {\r\n  total_count: number;\r\n  incomplete_results: boolean;\r\n  items: GitHubUser[];\r\n}\r\n\r\ninterface GitHubUser {\r\n  login: string;\r\n  id:  number;\r\n  node_id: string;\r\n  avatar_url: string;\r\n  gravatar_id: string;\r\n  url: string;\r\n  html_url: string;\r\n  followers_url: string;\r\n  subscriptions_url: string;\r\n  organizations_url: string;\r\n  repos_url: string;\r\n  received_events_url: string;\r\n  type: string;\r\n  score: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-async-http',\r\n  templateUrl: './async-http-request.html'\r\n})\r\nexport class DemoTypeaheadAsyncHttpRequestComponent {\r\n  search: string;\r\n  suggestions$: Observable<GitHubUser[]>;\r\n  errorMessage: string;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {\r\n    this.suggestions$ = new Observable((observer: Observer<string>) => {\r\n      observer.next(this.search);\r\n    }).pipe(\r\n      switchMap((query: string) => {\r\n        if (query) {\r\n          // using github public api to get users by name\r\n          return this.http.get<GitHubUserSearchResponse>(\r\n            'https://api.github.com/search/users', {\r\n            params: { q: query }\r\n          }).pipe(\r\n            map((data: GitHubUserSearchResponse) => data && data.items || []),\r\n            tap(() => noop, err => {\r\n              // in case of http error\r\n              this.errorMessage = err && err.message || 'Something goes wrong';\r\n            })\r\n          );\r\n        }\r\n\r\n        return of([]);\r\n      })\r\n    );\r\n  }\r\n}\r\n","<pre class=\"card card-block card-header\">Model: {{ search | json }}</pre>\r\n\r\n<input [(ngModel)]=\"search\"\r\n       typeaheadOptionField=\"login\"\r\n       [typeahead]=\"suggestions$\"\r\n       [typeaheadAsync]=\"true\"\r\n       class=\"form-control\"\r\n       placeholder=\"Enter GitHub username\">\r\n\r\n<div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"errorMessage\">\r\n  {{ errorMessage }}\r\n</div>\r\n\r\n","export default \"import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\\n\\n// RECOMMENDED\\nimport { TypeaheadModule } from 'bao-tran-angular/typeahead';\\n// NOT RECOMMENDED (Angular 9 doesn't support this kind of import)\\nimport { TypeaheadModule } from 'bao-tran-angular';\\n\\n@NgModule({\\n  imports: [\\n    BrowserAnimationsModule,\\n    TypeaheadModule.forRoot(),\\n    ...\\n  ]\\n})\\nexport class AppModule(){}\\n\";","export default \"<pre class=\\\"card card-block card-header\\\">Model: {{selected | json}}</pre>\\r\\n<pre class=\\\"card card-block card-header\\\">Option on blur: {{optionOnBlur | json}}</pre>\\r\\n\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       (typeaheadOnBlur)=\\\"typeaheadOnBlur($event)\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { demoComponentContent } from './typeahead-section.list';\nimport { ContentSection } from '../../docs/models/content-section.model';\n\n@Component({\n  selector: 'typeahead-section',\n  templateUrl: './typeahead-section.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TypeaheadSectionComponent {\n  name = 'Typeahead';\n  src = 'https://github.com/valor-software/bao-tran-angular/tree/development/src/typeahead';\n  componentContent: ContentSection[] = demoComponentContent;\n}\n","<demo-section [name]=\"name\" [src]=\"src\" [componentContent]=\"componentContent\">\n\n\n  <docs-section [content]=\"componentContent\"></docs-section>\n</demo-section>\n","import { Component } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { TypeaheadMatch } from 'bao-tran-angular/typeahead';\nimport { mergeMap, delay } from 'rxjs/operators';\nimport { TypeaheadConfig } from 'bao-tran-angular/typeahead';\n\nexport function getTypeaheadConfig(): TypeaheadConfig {\n  return Object.assign(new TypeaheadConfig(), { cancelRequestOnFocusLost: true });\n}\n\n@Component({\n  selector: 'demo-typeahead-cancel-on-focus-lost',\n  templateUrl: './cancel-on-focus-lost.html',\n  providers: [{ provide: TypeaheadConfig, useFactory: getTypeaheadConfig }]\n})\nexport class DemoTypeaheadCancelRequestOnFocusLostComponent {\n  asyncSelected: string;\n  typeaheadLoading: boolean;\n  typeaheadNoResults: boolean;\n  dataSource: Observable<any>;\n  statesComplex: any[] = [\n    { id: 1, name: 'Alabama', region: 'South' },\n    { id: 2, name: 'Alaska', region: 'West' },\n    { id: 3, name: 'Arizona', region: 'West' },\n    { id: 4, name: 'Arkansas', region: 'South' },\n    { id: 5, name: 'California', region: 'West' },\n    { id: 6, name: 'Colorado', region: 'West' },\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\n    { id: 8, name: 'Delaware', region: 'South' },\n    { id: 9, name: 'Florida', region: 'South' },\n    { id: 10, name: 'Georgia', region: 'South' },\n    { id: 11, name: 'Hawaii', region: 'West' },\n    { id: 12, name: 'Idaho', region: 'West' },\n    { id: 13, name: 'Illinois', region: 'Midwest' },\n    { id: 14, name: 'Indiana', region: 'Midwest' },\n    { id: 15, name: 'Iowa', region: 'Midwest' },\n    { id: 16, name: 'Kansas', region: 'Midwest' },\n    { id: 17, name: 'Kentucky', region: 'South' },\n    { id: 18, name: 'Louisiana', region: 'South' },\n    { id: 19, name: 'Maine', region: 'Northeast' },\n    { id: 21, name: 'Maryland', region: 'South' },\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\n    { id: 23, name: 'Michigan', region: 'Midwest' },\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\n    { id: 25, name: 'Mississippi', region: 'South' },\n    { id: 26, name: 'Missouri', region: 'Midwest' },\n    { id: 27, name: 'Montana', region: 'West' },\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\n    { id: 29, name: 'Nevada', region: 'West' },\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\n    { id: 32, name: 'New Mexico', region: 'West' },\n    { id: 33, name: 'New York', region: 'Northeast' },\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\n    { id: 35, name: 'North Carolina', region: 'South' },\n    { id: 36, name: 'Ohio', region: 'Midwest' },\n    { id: 37, name: 'Oklahoma', region: 'South' },\n    { id: 38, name: 'Oregon', region: 'West' },\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\n    { id: 41, name: 'South Carolina', region: 'South' },\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\n    { id: 43, name: 'Tennessee', region: 'South' },\n    { id: 44, name: 'Texas', region: 'South' },\n    { id: 45, name: 'Utah', region: 'West' },\n    { id: 46, name: 'Vermont', region: 'Northeast' },\n    { id: 47, name: 'Virginia', region: 'South' },\n    { id: 48, name: 'Washington', region: 'South' },\n    { id: 49, name: 'West Virginia', region: 'South' },\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\n    { id: 51, name: 'Wyoming', region: 'West' }\n  ];\n\n  constructor() {\n    this.dataSource = Observable.create((observer: any) => {\n      // Runs on every search\n      observer.next(this.asyncSelected);\n    })\n      .pipe(\n        mergeMap((token: string) => this.getStatesAsObservable(token)),\n        delay(1000)\n      );\n  }\n\n  getStatesAsObservable(token: string): Observable<any> {\n    const query = new RegExp(token, 'i');\n\n    return of(\n      this.statesComplex.filter((state: any) => {\n        return query.test(state.name);\n      })\n    );\n  }\n\n  changeTypeaheadLoading(e: boolean): void {\n    this.typeaheadLoading = e;\n  }\n\n  typeaheadOnSelect(e: TypeaheadMatch): void {\n    console.log('Selected value: ', e.value);\n  }\n}\n","<pre class=\"card card-block card-header\">Model: {{asyncSelected | json}}</pre>\r\n\r\n<input [(ngModel)]=\"asyncSelected\"\r\n       [typeahead]=\"dataSource\"\r\n       (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n       (typeaheadOnSelect)=\"typeaheadOnSelect($event)\"\r\n       [typeaheadOptionsLimit]=\"7\"\r\n       typeaheadOptionField=\"name\"\r\n       placeholder=\"Locations loaded with timeout\"\r\n       class=\"form-control\">\r\n<div *ngIf=\"typeaheadLoading\">Loading</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-latinize',\r\n  templateUrl: './latinize.html'\r\n})\r\nexport class DemoTypeaheadLatinizeComponent {\r\n  selected: string;\r\n  frenchWords: string[] = [\r\n    'popularisé',\r\n    'français',\r\n    'intéressé',\r\n    'générateur',\r\n    'répandue',\r\n    'répétition',\r\n    'súper'\r\n    ];\r\n}\r\n","<pre class=\"card card-block card-header\">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"frenchWords\"\r\n       [typeaheadLatinize]=\"true\"\r\n       class=\"form-control\">\r\n","import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-reactive-form',\r\n  templateUrl: './reactive-form.html'\r\n})\r\nexport class DemoTypeaheadReactiveFormComponent {\r\n  stateCtrl = new FormControl();\r\n\r\n  myForm = new FormGroup({\r\n    state: this.stateCtrl\r\n  });\r\n\r\n  states = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header\">Model: {{myForm.value.state | json}}</pre>\r\n\r\n<form [formGroup]=\"myForm\">\r\n  <input formControlName=\"state\"\r\n         [typeahead]=\"states\"\r\n         [typeaheadOptionsLimit]=\"7\"\r\n         [typeaheadMinLength]=\"0\"\r\n         placeholder=\"Typeahead inside a form\"\r\n         class=\"form-control\">\r\n</form>\r\n","export default \"<pre class=\\\"card card-block card-header\\\">Model: {{ search | json }}</pre>\\r\\n\\r\\n<input [(ngModel)]=\\\"search\\\"\\r\\n       typeaheadOptionField=\\\"login\\\"\\r\\n       [typeahead]=\\\"suggestions$\\\"\\r\\n       [typeaheadAsync]=\\\"true\\\"\\r\\n       class=\\\"form-control\\\"\\r\\n       placeholder=\\\"Enter GitHub username\\\">\\r\\n\\r\\n<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errorMessage\\\">\\r\\n  {{ errorMessage }}\\r\\n</div>\\r\\n\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-container',\r\n  templateUrl: './container.html'\r\n})\r\nexport class DemoTypeaheadContainerComponent {\r\n  selected: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header mb-3\">Model: {{selected | json}}</pre>\r\n\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       container=\"body\"\r\n       class=\"form-control\">\r\n","export default \"<pre class=\\\"card card-block card-header mb-3\\\">Model: {{selected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       [typeaheadSelectFirstItem]=\\\"false\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"<pre class=\\\"card card-block card-header mb-3\\\">Model: {{customSelected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"customSelected\\\"\\r\\n       [typeahead]=\\\"statesComplex\\\"\\r\\n       typeaheadOptionField=\\\"name\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-phrase-delimiters',\\r\\n  templateUrl: './phrase-delimiters.html'\\r\\n})\\r\\nexport class DemoTypeaheadPhraseDelimitersComponent {\\r\\n  selected: string;\\r\\n  states = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","export default \"<pre class=\\\"card card-block card-header mb-3\\\">Model: {{selected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       [optionsListTemplate]=\\\"customListTemplate\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\\r\\n<ng-template #customListTemplate let-matches=\\\"matches\\\" let-query=\\\"query\\\" let-typeaheadTemplateMethods>\\r\\n  <ul class=\\\"custom-list-group\\\" [class.dropdown-menu]=\\\"isBs3\\\">\\r\\n    <li class=\\\"custom-list-group-item\\\"\\r\\n        *ngFor=\\\"let match of matches\\\"\\r\\n        [class.active]=\\\"typeaheadTemplateMethods.isActive(match)\\\"\\r\\n        (click)=\\\"typeaheadTemplateMethods.selectMatch(match, $event)\\\"\\r\\n        (mouseenter)=\\\"typeaheadTemplateMethods.selectActive(match)\\\">\\r\\n      {{ match.item }}\\r\\n    </li>\\r\\n  </ul>\\r\\n</ng-template>\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-min-length',\\r\\n  templateUrl: './min-length.html'\\r\\n})\\r\\nexport class DemoTypeaheadMinLengthComponent {\\r\\n  selected: string;\\r\\n  states: string[] = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-multiple-search',\\r\\n  templateUrl: './multiple-search.html'\\r\\n})\\r\\nexport class DemoTypeaheadMultipleSearchComponent {\\r\\n  selected: string;\\r\\n  states = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","export default \"<pre class=\\\"card card-block card-header mb-3\\\">Model: {{selected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       [typeaheadMinLength]=\\\"0\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-show-on-blur',\\r\\n  templateUrl: './show-on-blur.html'\\r\\n})\\r\\nexport class DemoTypeaheadShowOnBlurComponent {\\r\\n  typeaheadHideResultsOnBlur = false;\\r\\n  selected: string;\\r\\n  states = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","export default \"<pre class=\\\"card card-block card-header\\\">Model: {{asyncSelected | json}}</pre>\\r\\n\\r\\n<input [(ngModel)]=\\\"asyncSelected\\\"\\r\\n       [typeahead]=\\\"dataSource\\\"\\r\\n       (typeaheadLoading)=\\\"changeTypeaheadLoading($event)\\\"\\r\\n       (typeaheadOnSelect)=\\\"typeaheadOnSelect($event)\\\"\\r\\n       [typeaheadOptionsLimit]=\\\"7\\\"\\r\\n       typeaheadOptionField=\\\"name\\\"\\r\\n       placeholder=\\\"Locations loaded with timeout\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n<div *ngIf=\\\"typeaheadLoading\\\">Loading</div>\\r\\n\";","import { Component } from '@angular/core';\n\nimport { isBs3 } from 'bao-tran-angular/utils';\n\n@Component({\n  selector: 'demo-typeahead-templates',\n  templateUrl: './list-template.html',\n  styles: [`\n    .custom-list-group {\n      display: flex;\n      flex-direction: column;\n      width: 300px;\n      padding-left: 0;\n      margin: 0;\n      list-style: none;\n    }\n\n    .custom-list-group-item {\n      position: relative;\n      display: block;\n      padding: .75rem 1.25rem;\n      background-color: #fff;\n    }\n\n    .custom-list-group-item.active {\n      z-index: 2;\n      color: #fff;\n      background-color: #FF4461;\n      border-color: #FF4461;\n    }\n  `]\n})\nexport class DemoTypeaheadListTemplateComponent {\n  isBs3 = isBs3();\n  selected: string;\n  states: string[] = [\n    'Alabama',\n    'Alaska',\n    'Arizona',\n    'Arkansas',\n    'California',\n    'Colorado',\n    'Connecticut',\n    'Delaware',\n    'Florida',\n    'Georgia',\n    'Hawaii',\n    'Idaho',\n    'Illinois',\n    'Indiana',\n    'Iowa',\n    'Kansas',\n    'Kentucky',\n    'Louisiana',\n    'Maine',\n    'Maryland',\n    'Massachusetts',\n    'Michigan',\n    'Minnesota',\n    'Mississippi',\n    'Missouri',\n    'Montana',\n    'Nebraska',\n    'Nevada',\n    'New Hampshire',\n    'New Jersey',\n    'New Mexico',\n    'New York',\n    'North Dakota',\n    'North Carolina',\n    'Ohio',\n    'Oklahoma',\n    'Oregon',\n    'Pennsylvania',\n    'Rhode Island',\n    'South Carolina',\n    'South Dakota',\n    'Tennessee',\n    'Texas',\n    'Utah',\n    'Vermont',\n    'Virginia',\n    'Washington',\n    'West Virginia',\n    'Wisconsin',\n    'Wyoming'\n  ];\n}\n","<pre class=\"card card-block card-header mb-3\">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       [optionsListTemplate]=\"customListTemplate\"\r\n       class=\"form-control\">\r\n\r\n<ng-template #customListTemplate let-matches=\"matches\" let-query=\"query\" let-typeaheadTemplateMethods>\r\n  <ul class=\"custom-list-group\" [class.dropdown-menu]=\"isBs3\">\r\n    <li class=\"custom-list-group-item\"\r\n        *ngFor=\"let match of matches\"\r\n        [class.active]=\"typeaheadTemplateMethods.isActive(match)\"\r\n        (click)=\"typeaheadTemplateMethods.selectMatch(match, $event)\"\r\n        (mouseenter)=\"typeaheadTemplateMethods.selectActive(match)\">\r\n      {{ match.item }}\r\n    </li>\r\n  </ul>\r\n</ng-template>\r\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-field',\\r\\n  templateUrl: './field.html'\\r\\n})\\r\\nexport class DemoTypeaheadFieldComponent {\\r\\n  customSelected: string;\\r\\n  statesComplex: any[] = [\\r\\n    { id: 1, name: 'Alabama', region: 'South' },\\r\\n    { id: 2, name: 'Alaska', region: 'West' },\\r\\n    { id: 3, name: 'Arizona', region: 'West' },\\r\\n    { id: 4, name: 'Arkansas', region: 'South' },\\r\\n    { id: 5, name: 'California', region: 'West' },\\r\\n    { id: 6, name: 'Colorado', region: 'West' },\\r\\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\\r\\n    { id: 8, name: 'Delaware', region: 'South' },\\r\\n    { id: 9, name: 'Florida', region: 'South' },\\r\\n    { id: 10, name: 'Georgia', region: 'South' },\\r\\n    { id: 11, name: 'Hawaii', region: 'West' },\\r\\n    { id: 12, name: 'Idaho', region: 'West' },\\r\\n    { id: 13, name: 'Illinois', region: 'Midwest' },\\r\\n    { id: 14, name: 'Indiana', region: 'Midwest' },\\r\\n    { id: 15, name: 'Iowa', region: 'Midwest' },\\r\\n    { id: 16, name: 'Kansas', region: 'Midwest' },\\r\\n    { id: 17, name: 'Kentucky', region: 'South' },\\r\\n    { id: 18, name: 'Louisiana', region: 'South' },\\r\\n    { id: 19, name: 'Maine', region: 'Northeast' },\\r\\n    { id: 21, name: 'Maryland', region: 'South' },\\r\\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\\r\\n    { id: 23, name: 'Michigan', region: 'Midwest' },\\r\\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\\r\\n    { id: 25, name: 'Mississippi', region: 'South' },\\r\\n    { id: 26, name: 'Missouri', region: 'Midwest' },\\r\\n    { id: 27, name: 'Montana', region: 'West' },\\r\\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\\r\\n    { id: 29, name: 'Nevada', region: 'West' },\\r\\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\\r\\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\\r\\n    { id: 32, name: 'New Mexico', region: 'West' },\\r\\n    { id: 33, name: 'New York', region: 'Northeast' },\\r\\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\\r\\n    { id: 35, name: 'North Carolina', region: 'South' },\\r\\n    { id: 36, name: 'Ohio', region: 'Midwest' },\\r\\n    { id: 37, name: 'Oklahoma', region: 'South' },\\r\\n    { id: 38, name: 'Oregon', region: 'West' },\\r\\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\\r\\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\\r\\n    { id: 41, name: 'South Carolina', region: 'South' },\\r\\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\\r\\n    { id: 43, name: 'Tennessee', region: 'South' },\\r\\n    { id: 44, name: 'Texas', region: 'South' },\\r\\n    { id: 45, name: 'Utah', region: 'West' },\\r\\n    { id: 46, name: 'Vermont', region: 'Northeast' },\\r\\n    { id: 47, name: 'Virginia', region: 'South' },\\r\\n    { id: 48, name: 'Washington', region: 'South' },\\r\\n    { id: 49, name: 'West Virginia', region: 'South' },\\r\\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\\r\\n    { id: 51, name: 'Wyoming', region: 'West' }\\r\\n  ];\\r\\n}\\r\\n\";","export default \"<pre class=\\\"card card-block card-header mb-3\\\">Model: {{selectedValue | json}}</pre>\\r\\n<pre class=\\\"card card-block card-header mb-3\\\">Selected option: {{selectedOption | json}}</pre>\\r\\n<div>\\r\\n    <input [(ngModel)]=\\\"selectedValue\\\"\\r\\n        [typeahead]=\\\"states\\\"\\r\\n        typeaheadOptionField=\\\"name\\\"\\r\\n        (typeaheadOnSelect)=\\\"onSelect($event)\\\"\\r\\n        (typeaheadOnPreview)=\\\"onPreview($event)\\\"\\r\\n        class=\\\"form-control\\\">\\r\\n    <div style=\\\"float:right;width:160px;\\\"\\r\\n         class=\\\"card card-block card-header mb-3\\\">\\r\\n        Preview region: \\r\\n        <span *ngIf=\\\"previewOption != null\\\">{{previewOption?.region}}</span>\\r\\n        <span *ngIf=\\\"previewOption == null\\\">N/A</span>\\r\\n    </div>\\r\\n</div>\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-delay',\r\n  templateUrl: './delay.html'\r\n})\r\nexport class DemoTypeaheadDelayComponent {\r\n  selected: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header\">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       typeaheadWaitMs=\"1000\"\r\n       class=\"form-control\">\r\n","import { Component } from '@angular/core';\r\n\r\nimport { Observable, of, Subscriber } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\ninterface DataSourceType {\r\n  id: number;\r\n  name: string;\r\n  region: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-async',\r\n  templateUrl: './async.html'\r\n})\r\nexport class DemoTypeaheadAsyncComponent {\r\n  asyncSelected: string;\r\n  dataSource: Observable<DataSourceType[]>;\r\n  typeaheadLoading: boolean;\r\n  statesComplex: DataSourceType[] = [\r\n    { id: 1, name: 'Alabama', region: 'South' },\r\n    { id: 2, name: 'Alaska', region: 'West' },\r\n    { id: 3, name: 'Arizona', region: 'West' },\r\n    { id: 4, name: 'Arkansas', region: 'South' },\r\n    { id: 5, name: 'California', region: 'West' },\r\n    { id: 6, name: 'Colorado', region: 'West' },\r\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\r\n    { id: 8, name: 'Delaware', region: 'South' },\r\n    { id: 9, name: 'Florida', region: 'South' },\r\n    { id: 10, name: 'Georgia', region: 'South' },\r\n    { id: 11, name: 'Hawaii', region: 'West' },\r\n    { id: 12, name: 'Idaho', region: 'West' },\r\n    { id: 13, name: 'Illinois', region: 'Midwest' },\r\n    { id: 14, name: 'Indiana', region: 'Midwest' },\r\n    { id: 15, name: 'Iowa', region: 'Midwest' },\r\n    { id: 16, name: 'Kansas', region: 'Midwest' },\r\n    { id: 17, name: 'Kentucky', region: 'South' },\r\n    { id: 18, name: 'Louisiana', region: 'South' },\r\n    { id: 19, name: 'Maine', region: 'Northeast' },\r\n    { id: 21, name: 'Maryland', region: 'South' },\r\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\r\n    { id: 23, name: 'Michigan', region: 'Midwest' },\r\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\r\n    { id: 25, name: 'Mississippi', region: 'South' },\r\n    { id: 26, name: 'Missouri', region: 'Midwest' },\r\n    { id: 27, name: 'Montana', region: 'West' },\r\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\r\n    { id: 29, name: 'Nevada', region: 'West' },\r\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\r\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\r\n    { id: 32, name: 'New Mexico', region: 'West' },\r\n    { id: 33, name: 'New York', region: 'Northeast' },\r\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\r\n    { id: 35, name: 'North Carolina', region: 'South' },\r\n    { id: 36, name: 'Ohio', region: 'Midwest' },\r\n    { id: 37, name: 'Oklahoma', region: 'South' },\r\n    { id: 38, name: 'Oregon', region: 'West' },\r\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\r\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\r\n    { id: 41, name: 'South Carolina', region: 'South' },\r\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\r\n    { id: 43, name: 'Tennessee', region: 'South' },\r\n    { id: 44, name: 'Texas', region: 'South' },\r\n    { id: 45, name: 'Utah', region: 'West' },\r\n    { id: 46, name: 'Vermont', region: 'Northeast' },\r\n    { id: 47, name: 'Virginia', region: 'South' },\r\n    { id: 48, name: 'Washington', region: 'South' },\r\n    { id: 49, name: 'West Virginia', region: 'South' },\r\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\r\n    { id: 51, name: 'Wyoming', region: 'West' }\r\n  ];\r\n\r\n  constructor() {\r\n    this.dataSource = new Observable((observer: Subscriber<string>) => {\r\n      // Runs on every search\r\n      observer.next(this.asyncSelected);\r\n    })\r\n      .pipe(\r\n        mergeMap((token: string) => this.getStatesAsObservable(token))\r\n      );\r\n  }\r\n\r\n  getStatesAsObservable(token: string): Observable<DataSourceType[]> {\r\n    const query = new RegExp(token, 'i');\r\n\r\n    return of(\r\n      this.statesComplex.filter((state: any) => {\r\n        return query.test(state.name);\r\n      })\r\n    );\r\n  }\r\n\r\n  changeTypeaheadLoading(e: boolean): void {\r\n    this.typeaheadLoading = e;\r\n  }\r\n}\r\n","<pre class=\"card card-block card-header\">Model: {{ asyncSelected | json }}</pre>\r\n\r\n<input [(ngModel)]=\"asyncSelected\"\r\n       [typeahead]=\"dataSource\"\r\n       [typeaheadAsync]=\"true\"\r\n       typeaheadOptionField=\"name\"\r\n       (typeaheadLoading)=\"changeTypeaheadLoading($event)\"\r\n       placeholder=\"Locations loaded via observable\"\r\n       class=\"form-control\">\r\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-dropup',\\r\\n  templateUrl: './dropup.html'\\r\\n})\\r\\nexport class DemoTypeaheadDropupComponent {\\r\\n  selected: string;\\r\\n  states: string[] = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-phrase-delimiters',\r\n  templateUrl: './phrase-delimiters.html'\r\n})\r\nexport class DemoTypeaheadPhraseDelimitersComponent {\r\n  selected: string;\r\n  states = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header\">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       [typeaheadSingleWords]=\"true\"\r\n       typeaheadPhraseDelimiters=\"&,\"\r\n       class=\"form-control\">\r\n","export default \"<pre class=\\\"card card-block card-header\\\">Model: {{selected | json}}</pre>\\r\\n<input [(ngModel)]=\\\"selected\\\"\\r\\n       [typeahead]=\\\"states\\\"\\r\\n       [typeaheadMultipleSearch]=\\\"true\\\"\\r\\n       typeaheadMultipleSearchDelimiters=\\\",|\\\"\\r\\n       class=\\\"form-control\\\">\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-single-world',\\r\\n  templateUrl: './single-world.html'\\r\\n})\\r\\nexport class DemoTypeaheadSingleWorldComponent {\\r\\n  typeaheadSingleWords = true;\\r\\n  selected: string;\\r\\n  states = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-grouping',\\r\\n  templateUrl: './grouping.html'\\r\\n})\\r\\nexport class DemoTypeaheadGroupingComponent {\\r\\n  groupSelected: string;\\r\\n  statesComplex: any[] = [\\r\\n    { id: 1, name: 'Alabama', region: 'South' },\\r\\n    { id: 2, name: 'Alaska', region: 'West' },\\r\\n    { id: 3, name: 'Arizona', region: 'West' },\\r\\n    { id: 4, name: 'Arkansas', region: 'South' },\\r\\n    { id: 5, name: 'California', region: 'West' },\\r\\n    { id: 6, name: 'Colorado', region: 'West' },\\r\\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\\r\\n    { id: 8, name: 'Delaware', region: 'South' },\\r\\n    { id: 9, name: 'Florida', region: 'South' },\\r\\n    { id: 10, name: 'Georgia', region: 'South' },\\r\\n    { id: 11, name: 'Hawaii', region: 'West' },\\r\\n    { id: 12, name: 'Idaho', region: 'West' },\\r\\n    { id: 13, name: 'Illinois', region: 'Midwest' },\\r\\n    { id: 14, name: 'Indiana', region: 'Midwest' },\\r\\n    { id: 15, name: 'Iowa', region: 'Midwest' },\\r\\n    { id: 16, name: 'Kansas', region: 'Midwest' },\\r\\n    { id: 17, name: 'Kentucky', region: 'South' },\\r\\n    { id: 18, name: 'Louisiana', region: 'South' },\\r\\n    { id: 19, name: 'Maine', region: 'Northeast' },\\r\\n    { id: 21, name: 'Maryland', region: 'South' },\\r\\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\\r\\n    { id: 23, name: 'Michigan', region: 'Midwest' },\\r\\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\\r\\n    { id: 25, name: 'Mississippi', region: 'South' },\\r\\n    { id: 26, name: 'Missouri', region: 'Midwest' },\\r\\n    { id: 27, name: 'Montana', region: 'West' },\\r\\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\\r\\n    { id: 29, name: 'Nevada', region: 'West' },\\r\\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\\r\\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\\r\\n    { id: 32, name: 'New Mexico', region: 'West' },\\r\\n    { id: 33, name: 'New York', region: 'Northeast' },\\r\\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\\r\\n    { id: 35, name: 'North Carolina', region: 'South' },\\r\\n    { id: 36, name: 'Ohio', region: 'Midwest' },\\r\\n    { id: 37, name: 'Oklahoma', region: 'South' },\\r\\n    { id: 38, name: 'Oregon', region: 'West' },\\r\\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\\r\\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\\r\\n    { id: 41, name: 'South Carolina', region: 'South' },\\r\\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\\r\\n    { id: 43, name: 'Tennessee', region: 'South' },\\r\\n    { id: 44, name: 'Texas', region: 'South' },\\r\\n    { id: 45, name: 'Utah', region: 'West' },\\r\\n    { id: 46, name: 'Vermont', region: 'Northeast' },\\r\\n    { id: 47, name: 'Virginia', region: 'South' },\\r\\n    { id: 48, name: 'Washington', region: 'South' },\\r\\n    { id: 49, name: 'West Virginia', region: 'South' },\\r\\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\\r\\n    { id: 51, name: 'Wyoming', region: 'West' }\\r\\n  ];\\r\\n}\\r\\n\";","export default \"<div class=\\\"mb-3\\\">\\r\\n  <h6>Source - <strong>array of string</strong>. Order direction - <strong>descending</strong></h6>\\r\\n  <input [(ngModel)]=\\\"selected1\\\"\\r\\n         [typeahead]=\\\"states\\\"\\r\\n         [typeaheadOrderBy]=\\\"sortConfig1\\\"\\r\\n         class=\\\"form-control\\\">\\r\\n</div>\\r\\n  <div class=\\\"mb-3\\\">\\r\\n  <h6>Source - <strong>array of string</strong>. Order direction - <strong>ascending</strong></h6>\\r\\n  <input [(ngModel)]=\\\"selected2\\\"\\r\\n         [typeahead]=\\\"states\\\"\\r\\n         [typeaheadOrderBy]=\\\"sortConfig2\\\"\\r\\n         class=\\\"form-control\\\">\\r\\n</div>\\r\\n<div class=\\\"mb-3\\\">\\r\\n  <h6>\\r\\n    Source - <strong>array of objects</strong>. Order direction - <strong>ascending</strong>,\\r\\n    sort by <strong>city</strong>, group by <strong>state</strong>\\r\\n  </h6>\\r\\n  <input [(ngModel)]=\\\"selected3\\\"\\r\\n         [typeahead]=\\\"cities\\\"\\r\\n         typeaheadOptionField=\\\"city\\\"\\r\\n         typeaheadGroupField=\\\"state\\\"\\r\\n         [typeaheadItemTemplate]=\\\"customItemTemplate\\\"\\r\\n         [typeaheadOrderBy]=\\\"sortConfig3\\\"\\r\\n         class=\\\"form-control\\\">\\r\\n\\r\\n  <ng-template #customItemTemplate let-model=\\\"item\\\">\\r\\n    <span><strong>{{model.city}}</strong> - {{model.code}}</span>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-3\\\">\\r\\n  <h6>Source - <strong>Observable of array of string</strong>. Order direction - <strong>descending</strong></h6>\\r\\n  <input [(ngModel)]=\\\"selected4\\\"\\r\\n         [typeahead]=\\\"states$\\\"\\r\\n         [typeaheadAsync]=\\\"true\\\"\\r\\n         [typeaheadOrderBy]=\\\"sortConfig1\\\"\\r\\n         class=\\\"form-control\\\">\\r\\n</div>\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-form',\r\n  templateUrl: './form.html'\r\n})\r\nexport class DemoTypeaheadFormComponent {\r\n  model = {\r\n    address: '312 Sundown Lane',\r\n    state: null\r\n  };\r\n  states = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header\">Model: {{model | json}}</pre>\r\n\r\n<form>\r\n  <div class=\"form-group\">\r\n    <label for=\"address\">Address</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"address\" required\r\n           [(ngModel)]=\"model.address\" name=\"address\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"state\">State</label>\r\n    <input id=\"state\" class=\"form-control\" name=\"state\"\r\n           [(ngModel)]=\"model.state\" [typeahead]=\"states\">\r\n  </div>\r\n</form>\r\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-no-result',\\r\\n  templateUrl: './no-result.html'\\r\\n})\\r\\nexport class DemoTypeaheadNoResultComponent {\\r\\n  selected: string;\\r\\n  noResult = false;\\r\\n  states: string[] = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n\\r\\n  typeaheadNoResults(event: boolean): void {\\r\\n    this.noResult = event;\\r\\n  }\\r\\n}\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-form',\\r\\n  templateUrl: './form.html'\\r\\n})\\r\\nexport class DemoTypeaheadFormComponent {\\r\\n  model = {\\r\\n    address: '312 Sundown Lane',\\r\\n    state: null\\r\\n  };\\r\\n  states = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-on-blur',\\r\\n  templateUrl: './on-blur.html'\\r\\n})\\r\\nexport class DemoTypeaheadOnBlurComponent {\\r\\n  selected: string;\\r\\n  optionOnBlur: any;\\r\\n  states: string[] = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n\\r\\n  typeaheadOnBlur(event: any): void {\\r\\n    this.optionOnBlur = event.item;\\r\\n  }\\r\\n}\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\nimport { FormControl, FormGroup } from '@angular/forms';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-reactive-form',\\r\\n  templateUrl: './reactive-form.html'\\r\\n})\\r\\nexport class DemoTypeaheadReactiveFormComponent {\\r\\n  stateCtrl = new FormControl();\\r\\n\\r\\n  myForm = new FormGroup({\\r\\n    state: this.stateCtrl\\r\\n  });\\r\\n\\r\\n  states = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\nimport { HttpClient } from '@angular/common/http';\\r\\n\\r\\nimport { noop, Observable, Observer, of } from 'rxjs';\\r\\nimport { map, switchMap, tap } from 'rxjs/operators';\\r\\n\\r\\ninterface GitHubUserSearchResponse {\\r\\n  total_count: number;\\r\\n  incomplete_results: boolean;\\r\\n  items: GitHubUser[];\\r\\n}\\r\\n\\r\\ninterface GitHubUser {\\r\\n  login: string;\\r\\n  id:  number;\\r\\n  node_id: string;\\r\\n  avatar_url: string;\\r\\n  gravatar_id: string;\\r\\n  url: string;\\r\\n  html_url: string;\\r\\n  followers_url: string;\\r\\n  subscriptions_url: string;\\r\\n  organizations_url: string;\\r\\n  repos_url: string;\\r\\n  received_events_url: string;\\r\\n  type: string;\\r\\n  score: number;\\r\\n}\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-async-http',\\r\\n  templateUrl: './async-http-request.html'\\r\\n})\\r\\nexport class DemoTypeaheadAsyncHttpRequestComponent {\\r\\n  search: string;\\r\\n  suggestions$: Observable<GitHubUser[]>;\\r\\n  errorMessage: string;\\r\\n\\r\\n  constructor(private http: HttpClient) {}\\r\\n\\r\\n  ngOnInit(): void {\\r\\n    this.suggestions$ = new Observable((observer: Observer<string>) => {\\r\\n      observer.next(this.search);\\r\\n    }).pipe(\\r\\n      switchMap((query: string) => {\\r\\n        if (query) {\\r\\n          // using github public api to get users by name\\r\\n          return this.http.get<GitHubUserSearchResponse>(\\r\\n            'https://api.github.com/search/users', {\\r\\n            params: { q: query }\\r\\n          }).pipe(\\r\\n            map((data: GitHubUserSearchResponse) => data && data.items || []),\\r\\n            tap(() => noop, err => {\\r\\n              // in case of http error\\r\\n              this.errorMessage = err && err.message || 'Something goes wrong';\\r\\n            })\\r\\n          );\\r\\n        }\\r\\n\\r\\n        return of([]);\\r\\n      })\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-grouping',\r\n  templateUrl: './grouping.html'\r\n})\r\nexport class DemoTypeaheadGroupingComponent {\r\n  groupSelected: string;\r\n  statesComplex: any[] = [\r\n    { id: 1, name: 'Alabama', region: 'South' },\r\n    { id: 2, name: 'Alaska', region: 'West' },\r\n    { id: 3, name: 'Arizona', region: 'West' },\r\n    { id: 4, name: 'Arkansas', region: 'South' },\r\n    { id: 5, name: 'California', region: 'West' },\r\n    { id: 6, name: 'Colorado', region: 'West' },\r\n    { id: 7, name: 'Connecticut', region: 'Northeast' },\r\n    { id: 8, name: 'Delaware', region: 'South' },\r\n    { id: 9, name: 'Florida', region: 'South' },\r\n    { id: 10, name: 'Georgia', region: 'South' },\r\n    { id: 11, name: 'Hawaii', region: 'West' },\r\n    { id: 12, name: 'Idaho', region: 'West' },\r\n    { id: 13, name: 'Illinois', region: 'Midwest' },\r\n    { id: 14, name: 'Indiana', region: 'Midwest' },\r\n    { id: 15, name: 'Iowa', region: 'Midwest' },\r\n    { id: 16, name: 'Kansas', region: 'Midwest' },\r\n    { id: 17, name: 'Kentucky', region: 'South' },\r\n    { id: 18, name: 'Louisiana', region: 'South' },\r\n    { id: 19, name: 'Maine', region: 'Northeast' },\r\n    { id: 21, name: 'Maryland', region: 'South' },\r\n    { id: 22, name: 'Massachusetts', region: 'Northeast' },\r\n    { id: 23, name: 'Michigan', region: 'Midwest' },\r\n    { id: 24, name: 'Minnesota', region: 'Midwest' },\r\n    { id: 25, name: 'Mississippi', region: 'South' },\r\n    { id: 26, name: 'Missouri', region: 'Midwest' },\r\n    { id: 27, name: 'Montana', region: 'West' },\r\n    { id: 28, name: 'Nebraska', region: 'Midwest' },\r\n    { id: 29, name: 'Nevada', region: 'West' },\r\n    { id: 30, name: 'New Hampshire', region: 'Northeast' },\r\n    { id: 31, name: 'New Jersey', region: 'Northeast' },\r\n    { id: 32, name: 'New Mexico', region: 'West' },\r\n    { id: 33, name: 'New York', region: 'Northeast' },\r\n    { id: 34, name: 'North Dakota', region: 'Midwest' },\r\n    { id: 35, name: 'North Carolina', region: 'South' },\r\n    { id: 36, name: 'Ohio', region: 'Midwest' },\r\n    { id: 37, name: 'Oklahoma', region: 'South' },\r\n    { id: 38, name: 'Oregon', region: 'West' },\r\n    { id: 39, name: 'Pennsylvania', region: 'Northeast' },\r\n    { id: 40, name: 'Rhode Island', region: 'Northeast' },\r\n    { id: 41, name: 'South Carolina', region: 'South' },\r\n    { id: 42, name: 'South Dakota', region: 'Midwest' },\r\n    { id: 43, name: 'Tennessee', region: 'South' },\r\n    { id: 44, name: 'Texas', region: 'South' },\r\n    { id: 45, name: 'Utah', region: 'West' },\r\n    { id: 46, name: 'Vermont', region: 'Northeast' },\r\n    { id: 47, name: 'Virginia', region: 'South' },\r\n    { id: 48, name: 'Washington', region: 'South' },\r\n    { id: 49, name: 'West Virginia', region: 'South' },\r\n    { id: 50, name: 'Wisconsin', region: 'Midwest' },\r\n    { id: 51, name: 'Wyoming', region: 'West' }\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header mb-3\">Model: {{groupSelected | json}}</pre>\r\n<input [(ngModel)]=\"groupSelected\"\r\n       [typeahead]=\"statesComplex\"\r\n       typeaheadOptionField=\"name\"\r\n       typeaheadGroupField=\"region\"\r\n       class=\"form-control\">\r\n","import { Component, OnInit } from '@angular/core';\n\nimport { TypeaheadOrder } from 'bao-tran-angular/typeahead';\nimport { Observable, of, Subscriber } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'demo-typeahead-ordering',\n  templateUrl: './ordering.html'\n})\nexport class DemoTypeaheadOrderingComponent implements OnInit {\n  selected1: string;\n  selected2: string;\n  selected3: string;\n  selected4: string;\n  sortConfig1: TypeaheadOrder = {\n    direction: 'desc'\n  };\n  sortConfig2: TypeaheadOrder = {\n    direction: 'asc'\n  };\n  sortConfig3: TypeaheadOrder = {\n    direction: 'asc',\n    field: 'city'\n  };\n  states$: Observable<string[]>;\n  states: string[] = [\n    'New Mexico',\n    'New York',\n    'North Dakota',\n    'North Carolina',\n    'Ohio',\n    'Oklahoma',\n    'Oregon',\n    'Pennsylvania',\n    'Rhode Island',\n    'South Carolina',\n    'South Dakota',\n    'Tennessee',\n    'Texas',\n    'Utah',\n    'Alaska',\n    'Alabama',\n    'Iowa',\n    'Kansas',\n    'Kentucky',\n    'Louisiana',\n    'Maine',\n    'Maryland',\n    'Massachusetts',\n    'Michigan',\n    'Minnesota',\n    'Mississippi',\n    'Missouri',\n    'Montana',\n    'Nebraska',\n    'Nevada',\n    'New Hampshire',\n    'New Jersey',\n    'Arizona',\n    'Arkansas',\n    'California',\n    'Colorado',\n    'Connecticut',\n    'Delaware',\n    'Florida',\n    'Georgia',\n    'Hawaii',\n    'Idaho',\n    'Illinois',\n    'Indiana',\n    'Vermont',\n    'Virginia',\n    'Washington',\n    'West Virginia',\n    'Wisconsin',\n    'Wyoming'\n  ];\n  cities = [{\n    city: 'Norton',\n    state: 'Virginia',\n    code: '61523'\n  }, {\n    city: 'Grundy',\n    state: 'Virginia',\n    code: '77054'\n  }, {\n    city: 'Coeburn',\n    state: 'Virginia',\n    code: '01665'\n  }, {\n    city: 'Phoenix',\n    state: 'Arizona',\n    code: '29128'\n  }, {\n    city: 'Tucson',\n    state: 'Arizona',\n    code: '32084'\n  }, {\n    city: 'Mesa',\n    state: 'Arizona',\n    code: '21465'\n  }, {\n    city: 'Independence',\n    state: 'Missouri',\n    code: '26887'\n  }, {\n    city: 'Kansas City',\n    state: 'Missouri',\n    code: '79286'\n  }, {\n    city: 'Springfield',\n    state: 'Missouri',\n    code: '92325'\n  }, {\n    city: 'St. Louis',\n    state: 'Missouri',\n    code: '64891'\n  }];\n\n  ngOnInit(): void {\n    this.states$ = new Observable((observer: Subscriber<string>) => {\n      // Runs on every search\n      observer.next(this.selected4);\n    })\n      .pipe(\n        switchMap((token: string) => {\n          const query = new RegExp(token, 'i');\n\n          return of(\n            this.states.filter((state: string) => query.test(state))\n          );\n        })\n      );\n  }\n}\n","<div class=\"mb-3\">\r\n  <h6>Source - <strong>array of string</strong>. Order direction - <strong>descending</strong></h6>\r\n  <input [(ngModel)]=\"selected1\"\r\n         [typeahead]=\"states\"\r\n         [typeaheadOrderBy]=\"sortConfig1\"\r\n         class=\"form-control\">\r\n</div>\r\n  <div class=\"mb-3\">\r\n  <h6>Source - <strong>array of string</strong>. Order direction - <strong>ascending</strong></h6>\r\n  <input [(ngModel)]=\"selected2\"\r\n         [typeahead]=\"states\"\r\n         [typeaheadOrderBy]=\"sortConfig2\"\r\n         class=\"form-control\">\r\n</div>\r\n<div class=\"mb-3\">\r\n  <h6>\r\n    Source - <strong>array of objects</strong>. Order direction - <strong>ascending</strong>,\r\n    sort by <strong>city</strong>, group by <strong>state</strong>\r\n  </h6>\r\n  <input [(ngModel)]=\"selected3\"\r\n         [typeahead]=\"cities\"\r\n         typeaheadOptionField=\"city\"\r\n         typeaheadGroupField=\"state\"\r\n         [typeaheadItemTemplate]=\"customItemTemplate\"\r\n         [typeaheadOrderBy]=\"sortConfig3\"\r\n         class=\"form-control\">\r\n\r\n  <ng-template #customItemTemplate let-model=\"item\">\r\n    <span><strong>{{model.city}}</strong> - {{model.code}}</span>\r\n  </ng-template>\r\n</div>\r\n\r\n<div class=\"mb-3\">\r\n  <h6>Source - <strong>Observable of array of string</strong>. Order direction - <strong>descending</strong></h6>\r\n  <input [(ngModel)]=\"selected4\"\r\n         [typeahead]=\"states$\"\r\n         [typeaheadAsync]=\"true\"\r\n         [typeaheadOrderBy]=\"sortConfig1\"\r\n         class=\"form-control\">\r\n</div>\r\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-scrollable',\\r\\n  templateUrl: './scrollable.html'\\r\\n})\\r\\nexport class DemoTypeaheadScrollableComponent {\\r\\n  selected: string;\\r\\n  states: string[] = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-typeahead-dropup',\r\n  templateUrl: './dropup.html'\r\n})\r\nexport class DemoTypeaheadDropupComponent {\r\n  selected: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header mb-3\">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       [dropup]=\"true\"\r\n       class=\"form-control\">\r\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-typeahead-adaptive-position',\\r\\n  templateUrl: './adaptive-position.html'\\r\\n})\\r\\nexport class DemoTypeaheadAdaptivePositionComponent {\\r\\n  selected: string;\\r\\n  states: string[] = [\\r\\n    'Alabama',\\r\\n    'Alaska',\\r\\n    'Arizona',\\r\\n    'Arkansas',\\r\\n    'California',\\r\\n    'Colorado',\\r\\n    'Connecticut',\\r\\n    'Delaware',\\r\\n    'Florida',\\r\\n    'Georgia',\\r\\n    'Hawaii',\\r\\n    'Idaho',\\r\\n    'Illinois',\\r\\n    'Indiana',\\r\\n    'Iowa',\\r\\n    'Kansas',\\r\\n    'Kentucky',\\r\\n    'Louisiana',\\r\\n    'Maine',\\r\\n    'Maryland',\\r\\n    'Massachusetts',\\r\\n    'Michigan',\\r\\n    'Minnesota',\\r\\n    'Mississippi',\\r\\n    'Missouri',\\r\\n    'Montana',\\r\\n    'Nebraska',\\r\\n    'Nevada',\\r\\n    'New Hampshire',\\r\\n    'New Jersey',\\r\\n    'New Mexico',\\r\\n    'New York',\\r\\n    'North Dakota',\\r\\n    'North Carolina',\\r\\n    'Ohio',\\r\\n    'Oklahoma',\\r\\n    'Oregon',\\r\\n    'Pennsylvania',\\r\\n    'Rhode Island',\\r\\n    'South Carolina',\\r\\n    'South Dakota',\\r\\n    'Tennessee',\\r\\n    'Texas',\\r\\n    'Utah',\\r\\n    'Vermont',\\r\\n    'Virginia',\\r\\n    'Washington',\\r\\n    'West Virginia',\\r\\n    'Wisconsin',\\r\\n    'Wyoming'\\r\\n  ];\\r\\n}\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-selected-first-item',\r\n  templateUrl: './selected-first-item.html'\r\n})\r\nexport class DemotypeaheadSelectFirstItemComponent {\r\n  selected: string;\r\n  states: string[] = [\r\n    'Alabama',\r\n    'Alaska',\r\n    'Arizona',\r\n    'Arkansas',\r\n    'California',\r\n    'Colorado',\r\n    'Connecticut',\r\n    'Delaware',\r\n    'Florida',\r\n    'Georgia',\r\n    'Hawaii',\r\n    'Idaho',\r\n    'Illinois',\r\n    'Indiana',\r\n    'Iowa',\r\n    'Kansas',\r\n    'Kentucky',\r\n    'Louisiana',\r\n    'Maine',\r\n    'Maryland',\r\n    'Massachusetts',\r\n    'Michigan',\r\n    'Minnesota',\r\n    'Mississippi',\r\n    'Missouri',\r\n    'Montana',\r\n    'Nebraska',\r\n    'Nevada',\r\n    'New Hampshire',\r\n    'New Jersey',\r\n    'New Mexico',\r\n    'New York',\r\n    'North Dakota',\r\n    'North Carolina',\r\n    'Ohio',\r\n    'Oklahoma',\r\n    'Oregon',\r\n    'Pennsylvania',\r\n    'Rhode Island',\r\n    'South Carolina',\r\n    'South Dakota',\r\n    'Tennessee',\r\n    'Texas',\r\n    'Utah',\r\n    'Vermont',\r\n    'Virginia',\r\n    'Washington',\r\n    'West Virginia',\r\n    'Wisconsin',\r\n    'Wyoming'\r\n  ];\r\n}\r\n","<pre class=\"card card-block card-header mb-3\">Model: {{selected | json}}</pre>\r\n<input [(ngModel)]=\"selected\"\r\n       [typeahead]=\"states\"\r\n       [typeaheadSelectFirstItem]=\"false\"\r\n       class=\"form-control\">\r\n"],"sourceRoot":"webpack:///"}