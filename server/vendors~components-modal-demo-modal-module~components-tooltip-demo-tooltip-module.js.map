{"version":3,"sources":["bao-tran-angular/tooltip/tooltip.config.ts","bao-tran-angular/tooltip/tooltip-container.component.ts","bao-tran-angular/tooltip/tooltip.directive.ts","bao-tran-angular/tooltip/tooltip.module.ts"],"names":[],"mappings":"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","file":"vendors~components-modal-demo-modal-module~components-tooltip-demo-tooltip-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n/** Default values provider for tooltip */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TooltipConfig {\r\n  /** sets disable adaptive position */\r\n  adaptivePosition = true;\r\n  /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\r\n  placement = 'top';\r\n  /** array of event names which triggers tooltip opening */\r\n  triggers = 'hover focus';\r\n  /** a selector specifying the element the tooltip should be appended to. */\r\n  container: string;\r\n  /** delay before showing the tooltip */\r\n  delay = 0;\r\n}\r\n","import {\n  AfterViewInit,\n  Component,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { TooltipConfig } from './tooltip.config';\nimport { isBs3 } from 'bao-tran-angular/utils';\n\n@Component({\n  selector: 'bs-tooltip-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[class]':\n      '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    '[class.bs3]': 'isBs3',\n    '[attr.id]': 'this.id',\n    role: 'tooltip'\n  },\n  styles: [\n    `\n    :host.tooltip {\n      display: block;\n      pointer-events: none;\n    }\n    :host.bs3.tooltip.top>.arrow {\n      margin-left: -2px;\n    }\n    :host.bs3.tooltip.bottom {\n      margin-top: 0px;\n    }\n    :host.bs3.bs-tooltip-left, :host.bs3.bs-tooltip-right{\n      margin: 0px;\n    }\n    :host.bs3.bs-tooltip-right .arrow, :host.bs3.bs-tooltip-left .arrow {\n      margin: .3rem 0;\n    }\n  `\n  ],\n  template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `\n})\nexport class TooltipContainerComponent implements AfterViewInit {\n  classMap: { [key: string]: boolean };\n  placement: string;\n  containerClass: string;\n  animation: boolean;\n  id: string;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: TooltipConfig) {\n    Object.assign(this, config);\n  }\n\n  ngAfterViewInit(): void {\n    this.classMap = { in: false, fade: false };\n    this.classMap[this.placement] = true;\n    this.classMap[`tooltip-${this.placement}`] = true;\n\n    this.classMap.in = true;\n    if (this.animation) {\n      this.classMap.fade = true;\n    }\n\n    if (this.containerClass) {\n      this.classMap[this.containerClass] = true;\n    }\n  }\n}\n","/* tslint:disable: max-file-line-count deprecation */\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipConfig } from './tooltip.config';\n\nimport { ComponentLoader, ComponentLoaderFactory } from 'bao-tran-angular/component-loader';\nimport { OnChange, warnOnce, parseTriggers, Trigger } from 'bao-tran-angular/utils';\nimport { PositioningService } from 'bao-tran-angular/positioning';\n\nimport { timer, Subscription } from 'rxjs';\n\nlet id = 0;\n\n@Directive({\n  selector: '[tooltip], [tooltipHtml]',\n  exportAs: 'bs-tooltip'\n})\nexport class TooltipDirective implements OnInit, OnDestroy {\n  tooltipId = id++;\n  /** sets disable adaptive position */\n  @Input() adaptivePosition: boolean;\n  /**\n   * Content to be displayed as tooltip.\n   */\n  @OnChange()\n  @Input()\n  /* tslint:disable-next-line:no-any */\n  tooltip: string | TemplateRef<any>;\n  /** Fired when tooltip content changes */\n  @Output()\n  /* tslint:disable-next-line:no-any */\n  tooltipChange: EventEmitter<string | TemplateRef<any>> = new EventEmitter();\n\n  /**\n   * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the tooltip should be appended to.\n   */\n  @Input() container: string;\n  /**\n   * Css class for tooltip container\n   */\n  @Input() containerClass = '';\n  @Input() boundariesElement: ('viewport' | 'scrollParent' | 'window');\n  /**\n   * Returns whether or not the tooltip is currently being shown\n   */\n  @Input()\n  get isOpen(): boolean {\n    return this._tooltip.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Allows to disable tooltip\n   */\n  @Input() isDisabled: boolean;\n\n  /**\n   * Delay before showing the tooltip\n   */\n  @Input() delay: number;\n\n  /**\n   * Emits an event when the tooltip is shown\n   */\n  /* tslint:disable-next-line:no-any */\n  @Output() onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the tooltip is hidden\n   */\n  /* tslint:disable-next-line:no-any */\n  @Output() onHidden: EventEmitter<any>;\n\n  /** @deprecated - please use `tooltip` instead */\n  @Input('tooltipHtml')\n  /* tslint:disable-next-line:no-any */\n  set htmlContent(value: string | TemplateRef<any>) {\n    warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n    this.tooltip = value;\n  }\n\n  /** @deprecated - please use `placement` instead */\n  @Input('tooltipPlacement')\n  set _placement(value: string) {\n    warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n    this.placement = value;\n  }\n\n  /** @deprecated - please use `isOpen` instead */\n  @Input('tooltipIsOpen')\n  set _isOpen(value: boolean) {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n    this.isOpen = value;\n  }\n\n  get _isOpen(): boolean {\n    warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n\n    return this.isOpen;\n  }\n\n  /** @deprecated - please use `isDisabled` instead */\n  @Input('tooltipEnable')\n  set _enable(value: boolean) {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n    this.isDisabled = !value;\n  }\n\n  get _enable(): boolean {\n    warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n\n    return this.isDisabled;\n  }\n\n  /** @deprecated - please use `container=\"body\"` instead */\n  @Input('tooltipAppendToBody')\n  set _appendToBody(value: boolean) {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n    this.container = value ? 'body' : this.container;\n  }\n\n  get _appendToBody(): boolean {\n    warnOnce(\n      'tooltipAppendToBody was deprecated, please use `container=\"body\"` instead'\n    );\n\n    return this.container === 'body';\n  }\n\n  /** @deprecated - removed, will be added to configuration */\n  @Input() tooltipAnimation = true;\n\n  /** @deprecated - will replaced with customClass */\n  @Input('tooltipClass')\n  set _popupClass(value: string) {\n    warnOnce('tooltipClass deprecated');\n  }\n\n  /** @deprecated - removed */\n  @Input('tooltipContext')\n  /* tslint:disable-next-line:no-any */\n  set _tooltipContext(value: any) {\n    warnOnce('tooltipContext deprecated');\n  }\n\n  /** @deprecated */\n  @Input('tooltipPopupDelay')\n  set _tooltipPopupDelay(value: number) {\n    warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n    this.delay = value;\n  }\n\n  /** @deprecated */\n  @Input() tooltipFadeDuration = 150;\n\n  /** @deprecated -  please use `triggers` instead */\n  @Input('tooltipTrigger')\n  get _tooltipTrigger(): string | string[] {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n\n    return this.triggers;\n  }\n\n  set _tooltipTrigger(value: string | string[]) {\n    warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n    this.triggers = (value || '').toString();\n  }\n\n  /** @deprecated */\n  @Output()\n  tooltipStateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /* tslint:disable-next-line:no-any */\n  protected _delayTimeoutId: number | any;\n  protected _tooltipCancelShowFn: Function;\n\n  private _tooltip: ComponentLoader<TooltipContainerComponent>;\n  private _delaySubscription: Subscription;\n  private _ariaDescribedby: string;\n  constructor(\n    _viewContainerRef: ViewContainerRef,\n    cis: ComponentLoaderFactory,\n    config: TooltipConfig,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    private _positionService: PositioningService\n  ) {\n\n    this._tooltip = cis\n      .createLoader<TooltipContainerComponent>(\n        this._elementRef,\n        _viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: TooltipConfig, useValue: config});\n\n    Object.assign(this, config);\n    this.onShown = this._tooltip.onShown;\n    this.onHidden = this._tooltip.onHidden;\n  }\n\n  ngOnInit(): void {\n    this._tooltip.listen({\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n    /* tslint:disable-next-line:no-any */\n    this.tooltipChange.subscribe((value: any) => {\n      if (!value) {\n        this._tooltip.hide();\n      }\n    });\n\n    this.onShown.subscribe(() => {\n      this.setAriaDescribedBy();\n    });\n\n    this.onHidden.subscribe(() => {\n      this.setAriaDescribedBy();\n    });\n  }\n\n  setAriaDescribedBy(): void {\n    this._ariaDescribedby = this.isOpen ? `tooltip-${this.tooltipId}` : null;\n\n    if (this._ariaDescribedby) {\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\n    } else {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n    }\n  }\n\n  /**\n   * Toggles an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  /**\n   * Opens an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  show(): void {\n    this._positionService.setOptions({\n      modifiers: {\n        flip: {\n          enabled: this.adaptivePosition\n        },\n        preventOverflow: {\n          enabled: this.adaptivePosition,\n          boundariesElement: this.boundariesElement || 'scrollParent'\n        }\n      }\n    });\n\n    if (\n      this.isOpen ||\n      this.isDisabled ||\n      this._delayTimeoutId ||\n      !this.tooltip\n    ) {\n      return;\n    }\n\n    const showTooltip = () => {\n      if (this._delayTimeoutId) {\n        this._delayTimeoutId = undefined;\n      }\n\n      this._tooltip\n        .attach(TooltipContainerComponent)\n        .to(this.container)\n        .position({attachment: this.placement})\n        .show({\n          content: this.tooltip,\n          placement: this.placement,\n          containerClass: this.containerClass,\n          id: `tooltip-${this.tooltipId}`\n        });\n    };\n    const cancelDelayedTooltipShowing = () => {\n      if (this._tooltipCancelShowFn) {\n        this._tooltipCancelShowFn();\n      }\n    };\n\n    if (this.delay) {\n      if (this._delaySubscription) {\n        this._delaySubscription.unsubscribe();\n      }\n\n      this._delaySubscription = timer(this.delay).subscribe(() => {\n        showTooltip();\n        cancelDelayedTooltipShowing();\n      });\n\n      if (this.triggers) {\n        parseTriggers(this.triggers)\n          .forEach((trigger: Trigger) => {\n            this._tooltipCancelShowFn = this._renderer.listen(\n              this._elementRef.nativeElement,\n              trigger.close,\n              () => {\n                this._delaySubscription.unsubscribe();\n                cancelDelayedTooltipShowing();\n              }\n            );\n          });\n      }\n    } else {\n      showTooltip();\n    }\n  }\n\n  /**\n   * Closes an element’s tooltip. This is considered a “manual” triggering of\n   * the tooltip.\n   */\n  hide(): void {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n\n    if (!this._tooltip.isShown) {\n      return;\n    }\n\n    this._tooltip.instance.classMap.in = false;\n    setTimeout(() => {\n      this._tooltip.hide();\n    }, this.tooltipFadeDuration);\n  }\n\n  ngOnDestroy(): void {\n    this._tooltip.dispose();\n    this.tooltipChange.unsubscribe();\n    if (this._delaySubscription) {\n      this._delaySubscription.unsubscribe();\n    }\n    this.onShown.unsubscribe();\n    this.onHidden.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { TooltipContainerComponent } from './tooltip-container.component';\nimport { TooltipDirective } from './tooltip.directive';\nimport { ComponentLoaderFactory } from 'bao-tran-angular/component-loader';\nimport { PositioningService } from 'bao-tran-angular/positioning';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TooltipDirective, TooltipContainerComponent],\n  exports: [TooltipDirective],\n  entryComponents: [TooltipContainerComponent]\n})\nexport class TooltipModule {\n  static forRoot(): ModuleWithProviders<TooltipModule> {\n    return {\n      ngModule: TooltipModule,\n      providers: [ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\n"],"sourceRoot":"webpack:///"}