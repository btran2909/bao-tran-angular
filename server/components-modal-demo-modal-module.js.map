{"version":3,"sources":["webpack:///./demo/src/app/components/+modal/demos/service-component/service-component.html?f92a","webpack:///./demo/src/app/components/+modal/demos/service-options/disable-backdrop/disable-backdrop.html?fa08","webpack:///./demo/src/app/components/+modal/demos/service-interceptor/service-interceptor.ts?fc0e","webpack:///./demo/src/app/components/+modal/demos/service-nested/service-nested.html?fc81","./demo/src/app/components/+modal/modal-section.component.ts","./demo/src/app/components/+modal/modal-section.component.html","./demo/src/app/components/+modal/demos/service-template/service-template.ts","./demo/src/app/components/+modal/demos/service-template/service-template.html","./demo/src/app/components/+modal/demos/index.ts","./demo/src/app/components/+modal/demos/service-options/custom-css-class/custom-css-class.ts","./demo/src/app/components/+modal/demos/service-options/custom-css-class/custom-css-class.html","webpack:///./demo/src/app/components/+modal/demos/auto-shown/auto-shown.ts?d68d","webpack:///./demo/src/app/components/+modal/demos/service-component/service-component.ts?e159","webpack:///./demo/src/app/components/+modal/demos/auto-shown/auto-shown.html?e2f6","./demo/src/app/components/+modal/demos/service-options/disable-animation/disable-animation.ts","./demo/src/app/components/+modal/demos/service-options/disable-animation/disable-animation.html","./demo/src/app/components/+modal/demos/events/events.ts","./demo/src/app/components/+modal/demos/events/events.html","./demo/src/app/components/+modal/modal-section.list.ts","./demo/src/app/components/+modal/demos/service-options/change-class/change-class.ts","./demo/src/app/components/+modal/demos/service-options/change-class/change-class.html","./demo/src/app/components/+modal/demo-modal.routes.ts","webpack:///./demo/src/app/components/+modal/demos/scrolling-long-content/scrolling-long-content.html?00ac","./demo/src/app/components/+modal/demos/service-component/service-component.ts","./demo/src/app/components/+modal/demos/service-component/service-component.html","./demo/src/app/components/+modal/demos/modal-ref-events/modal-ref-events.ts","./demo/src/app/components/+modal/demos/modal-ref-events/modal-ref-events.html","webpack:///./demo/src/app/components/+modal/demos/static/static.html?1092","webpack:///./demo/src/app/components/+modal/demos/modal-with-popups/modal-with-popups.html?1130","./demo/src/app/components/+modal/demos/service-interceptor/service-interceptor.ts","./demo/src/app/components/+modal/demos/service-interceptor/service-interceptor.html","./demo/src/app/components/+modal/demo-modal.module.ts","./demo/src/app/components/+modal/demos/accessibility/accessibility.ts","./demo/src/app/components/+modal/demos/accessibility/accessibility.html","webpack:///./demo/src/app/components/+modal/demos/accessibility/accessibility.ts?19a8","webpack:///./demo/src/app/components/+modal/demos/service-interceptor/service-interceptor.html?1f80","webpack:///./demo/src/app/components/+modal/demos/sizes/sizes.html?1cf7","./demo/src/app/components/+modal/demos/nested/nested.ts","./demo/src/app/components/+modal/demos/nested/nested.html","webpack:///./demo/src/app/components/+modal/demos/service-options/change-class/change-class.ts?246e","webpack:///./demo/src/app/components/+modal/demos/child/child.ts?263e","webpack:///./demo/src/app/components/+modal/demos/static/static.ts?2721","webpack:///./demo/src/app/components/+modal/demos/modal-ref-events/modal-ref-events.ts?2bfb","./demo/src/app/components/+modal/demos/auto-shown/auto-shown.ts","./demo/src/app/components/+modal/demos/auto-shown/auto-shown.html","webpack:///./demo/src/app/components/+modal/demos/nested/nested.ts?2924","webpack:///./demo/src/app/components/+modal/demos/service-options/disable-animation/disable-animation.ts?3031","webpack:///./demo/src/app/components/+modal/demos/service-options/change-class/change-class.html?30b9","webpack:///./demo/src/app/components/+modal/demos/child/child.html?469b","./demo/src/app/components/+modal/demos/service-events/service-events.ts","./demo/src/app/components/+modal/demos/service-events/service-events.html","webpack:///./demo/src/app/components/+modal/demos/events/events.html?50f1","webpack:///./demo/src/app/components/+modal/demos/service-options/disable-backdrop/disable-backdrop.ts?55f0","./demo/src/app/components/+modal/demos/sizes/sizes.ts","./demo/src/app/components/+modal/demos/sizes/sizes.html","webpack:///./demo/src/app/components/+modal/demos/service-options/disable-esc-closing/disable-esc-closing.ts?5bf7","webpack:///./demo/src/app/components/+modal/demos/modal-with-popups/modal-with-popups.ts?5cea","webpack:///./demo/src/app/components/+modal/demos/service-options/disable-animation/disable-animation.html?62ef","webpack:///./demo/src/app/components/+modal/demos/events/events.ts?6780","webpack:///./demo/src/app/components/+modal/demos/nested/nested.html?64d9","./demo/src/app/components/+modal/demos/service-options/disable-backdrop/disable-backdrop.ts","./demo/src/app/components/+modal/demos/service-options/disable-backdrop/disable-backdrop.html","webpack:///./demo/src/app/components/+modal/demos/service-options/custom-css-class/custom-css-class.html?76f2","./demo/src/app/components/+modal/demos/child/child.ts","./demo/src/app/components/+modal/demos/child/child.html","webpack:///./demo/src/app/components/+modal/demos/service-template/service-template.ts?8efd","./demo/src/app/components/+modal/demos/static/static.ts","./demo/src/app/components/+modal/demos/static/static.html","webpack:///./demo/src/app/components/+modal/demos/service-nested/service-nested.ts?942b","webpack:///./demo/src/app/components/+modal/demos/modal-ref-events/modal-ref-events.html?9467","webpack:///./demo/src/app/components/+modal/demos/service-events/service-events.ts?9490","./demo/src/app/components/+modal/demos/modal-with-popups/modal-with-popups.ts","./demo/src/app/components/+modal/demos/modal-with-popups/modal-with-popups.html","webpack:///./demo/src/app/components/+modal/demos/scrolling-long-content/scrolling-long-content.ts?9bd0","./demo/src/app/components/+modal/demos/service-confirm-window/service-confirm-window.ts","./demo/src/app/components/+modal/demos/service-confirm-window/service-confirm-window.html","webpack:///./demo/src/app/components/+modal/demos/service-confirm-window/service-confirm-window.ts?a62f","webpack:///./demo/src/app/components/+modal/demos/service-confirm-window/service-confirm-window.html?a83f","webpack:///./demo/src/app/components/+modal/demos/service-options/disable-esc-closing/disable-esc-closing.html?aab9","./demo/src/app/components/+modal/demos/service-nested/service-nested.ts","./demo/src/app/components/+modal/demos/service-nested/service-nested.html","webpack:///./demo/src/app/components/+modal/demos/service-template/service-template.html?ad45","./demo/src/app/components/+modal/demos/service-options/disable-esc-closing/disable-esc-closing.ts","./demo/src/app/components/+modal/demos/service-options/disable-esc-closing/disable-esc-closing.html","webpack:///./demo/src/app/components/+modal/demos/service-events/service-events.html?b3ad","webpack:///./demo/src/app/components/+modal/demos/sizes/sizes.ts?b05d","./demo/src/app/components/+modal/demos/scrolling-long-content/scrolling-long-content.ts","./demo/src/app/components/+modal/demos/scrolling-long-content/scrolling-long-content.html","webpack:///./demo/src/app/components/+modal/demos/service-options/custom-css-class/custom-css-class.ts?cb96","./demo/src/app/components/+modal/docs/usage.md","webpack:///./demo/src/app/components/+modal/demos/accessibility/accessibility.html?cf13"],"names":[],"mappings":"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","file":"components-modal-demo-modal-module.js","sourcesContent":["export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModalWithComponent()\\\">Create modal with component</button>\\r\\n\";","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\">Open modal</button>\\r\\n<br>\\r\\n<br>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"config.backdrop = !config.backdrop\\\">{{config.backdrop ? 'Disable' : 'Enable'}} backdrop</button>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"config.ignoreBackdropClick = !config.ignoreBackdropClick\\\">{{!config.ignoreBackdropClick ? 'Disable' : 'Enable'}} backdrop click</button>\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Modal</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    Just a modal with a bunch of words inside, nothing serious.\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","export default \"import { Component, TemplateRef } from '@angular/core';\\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-service-interceptor',\\n  templateUrl: './service-interceptor.html'\\n})\\nexport class DemoModalServiceWithInterceptorComponent {\\n  bsModalRef: BsModalRef;\\n\\n  confirmModalRef: BsModalRef;\\n  confirmResolve: Function;\\n  confirmReject: Function;\\n  confirmPromise: Promise<void>;\\n\\n  constructor(private modalService: BsModalService) {}\\n\\n  openModalWithInterceptor(confirmTemplate: TemplateRef<any>) {\\n    const closeInterceptor = () => {\\n      this.confirmPromise = new Promise((resolve, reject) => {\\n        this.confirmResolve = resolve;\\n        this.confirmReject = reject;\\n      });\\n      this.confirmModalRef = this.modalService.show(confirmTemplate, {class: 'modal-sm'});\\n\\n      return this.confirmPromise;\\n    };\\n    this.bsModalRef = this.modalService.show(ModalContentWithInterceptorComponent, { closeInterceptor });\\n    this.bsModalRef.content.closeBtnName = 'Close';\\n  }\\n\\n  confirm(): void {\\n    this.confirmResolve();\\n    this.confirmModalRef.hide();\\n  }\\n\\n  decline(): void {\\n    this.confirmReject();\\n    this.confirmModalRef.hide();\\n  }\\n}\\n\\n@Component({\\n  selector: 'modal-content-with-interceptor',\\n  template: `\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">Modal with interceptor</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">This modal has closing interceptor</div>\\n    <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"bsModalRef.hide()\\\">Close</button>\\n    </div>\\n  `\\n})\\n\\nexport class ModalContentWithInterceptorComponent {\\n  constructor(public bsModalRef: BsModalRef) { }\\n}\\n\";","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\">Open first modal</button>\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">First modal</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    This is a first modal<br />\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal2(templateNested)\\\">Open second modal</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"closeModal(1)\\\">Close self</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"closeModal()\\\">Close all modal</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #templateNested>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Second modal</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef2.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    This is nested modal.<br />\\r\\n    <button *ngIf=\\\"modalRef\\\" type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"closeFirstModal()\\\">Close first modal</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"closeModal(2)\\\">Close self</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"closeModal()\\\">Close all modal</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { demoComponentContent } from './modal-section.list';\nimport { ContentSection } from '../../docs/models/content-section.model';\n\n@Component({\n  selector: 'modal-section',\n  templateUrl: './modal-section.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ModalSectionComponent {\n  name = 'Modals';\n  src = 'https://github.com/valor-software/bao-tran-angular/tree/development/src/modal';\n  componentContent: ContentSection[] = demoComponentContent;\n}\n","<demo-section [name]=\"name\" [src]=\"src\" [componentContent]=\"componentContent\">\n  <p>Modals are streamlined, but flexible, dialog prompts with the minimum required functionality\n  and smart defaults.</p>\n\n\n  <docs-section [content]=\"componentContent\"></docs-section>\n</demo-section>\n","import { Component, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-service-static',\n  templateUrl: './service-template.html'\n})\nexport class DemoModalServiceStaticComponent {\n  modalRef: BsModalRef;\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">Create template modal</button>\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Modal</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    This is a modal.\r\n  </div>\r\n</ng-template>\r\n","import { DemoModalSizesComponent } from './sizes/sizes';\r\nimport { DemoModalStaticComponent } from './static/static';\r\nimport { DemoModalChildComponent } from './child/child';\r\nimport { DemoAutoShownModalComponent } from './auto-shown/auto-shown';\r\nimport { DemoModalNestedComponent } from './nested/nested';\r\nimport { DemoModalEventsComponent } from './events/events';\r\n\r\nimport { DemoModalServiceStaticComponent } from './service-template/service-template';\r\nimport { DemoModalServiceFromComponent } from './service-component/service-component';\r\nimport { DemoModalServiceWithInterceptorComponent } from './service-interceptor/service-interceptor';\r\nimport { DemoModalServiceNestedComponent } from './service-nested/service-nested';\r\nimport { DemoModalServiceDisableAnimationComponent } from './service-options/disable-animation/disable-animation';\r\nimport { DemoModalServiceCustomCSSClassComponent } from './service-options/custom-css-class/custom-css-class';\r\nimport { DemoModalServiceDisableEscClosingComponent } from './service-options/disable-esc-closing/disable-esc-closing';\r\nimport { DemoModalServiceDisableBackdropComponent } from './service-options/disable-backdrop/disable-backdrop';\r\nimport { DemoModalServiceEventsComponent } from './service-events/service-events';\r\nimport { DemoModalServiceConfirmWindowComponent } from './service-confirm-window/service-confirm-window';\r\nimport { DemoModalScrollingLongContentComponent } from './scrolling-long-content/scrolling-long-content';\r\nimport { DemoAccessibilityComponent } from './accessibility/accessibility';\r\nimport { DemoModalWithPopupsComponent } from './modal-with-popups/modal-with-popups';\r\nimport { DemoModalServiceChangeClassComponent } from './service-options/change-class/change-class';\r\nimport { DemoModalRefEventsComponent } from './modal-ref-events/modal-ref-events';\r\n\r\nexport const DEMO_COMPONENTS = [\r\n  DemoModalSizesComponent,\r\n  DemoModalChildComponent,\r\n  DemoModalStaticComponent,\r\n  DemoAutoShownModalComponent,\r\n  DemoModalNestedComponent,\r\n  DemoModalServiceStaticComponent,\r\n  DemoModalServiceFromComponent,\r\n  DemoModalServiceWithInterceptorComponent,\r\n  DemoModalServiceNestedComponent,\r\n  DemoModalServiceCustomCSSClassComponent,\r\n  DemoModalServiceDisableAnimationComponent,\r\n  DemoModalServiceDisableEscClosingComponent,\r\n  DemoModalServiceDisableBackdropComponent,\r\n  DemoModalEventsComponent,\r\n  DemoModalServiceEventsComponent,\r\n  DemoModalServiceConfirmWindowComponent,\r\n  DemoModalScrollingLongContentComponent,\r\n  DemoAccessibilityComponent,\r\n  DemoModalServiceChangeClassComponent,\r\n  DemoModalWithPopupsComponent,\r\n  DemoModalRefEventsComponent\r\n];\r\n","import { Component, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-service-custom-css-class',\n  templateUrl: './custom-css-class.html'\n})\nexport class DemoModalServiceCustomCSSClassComponent {\n  modalRef: BsModalRef;\n  constructor(private modalService: BsModalService) {}\n\n  openModalWithClass(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(\n      template,\n      Object.assign({}, { class: 'gray modal-lg' })\n    );\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModalWithClass(template)\">Open modal with custom css class</button>\r\n<br>\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Modal</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    Just a modal with a bunch of words inside, nothing serious.\r\n  </div>\r\n</ng-template>\r\n","export default \"import { Component, ViewChild } from '@angular/core';\\nimport { ModalDirective } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-auto-shown',\\n  templateUrl: './auto-shown.html'\\n})\\nexport class DemoAutoShownModalComponent {\\n  @ViewChild('autoShownModal', { static: false }) autoShownModal: ModalDirective;\\n  isModalShown = false;\\n\\n  showModal(): void {\\n    this.isModalShown = true;\\n  }\\n\\n  hideModal(): void {\\n    this.autoShownModal.hide();\\n  }\\n\\n  onHidden(): void {\\n    this.isModalShown = false;\\n  }\\n}\\n\";","export default \"import { Component, OnInit } from '@angular/core';\\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-service-component',\\n  templateUrl: './service-component.html'\\n})\\nexport class DemoModalServiceFromComponent {\\n  bsModalRef: BsModalRef;\\n  constructor(private modalService: BsModalService) {}\\n\\n  openModalWithComponent() {\\n    const initialState = {\\n      list: [\\n        'Open a modal with component',\\n        'Pass your data',\\n        'Do something else',\\n        '...'\\n      ],\\n      title: 'Modal with component'\\n    };\\n    this.bsModalRef = this.modalService.show(ModalContentComponent, {initialState});\\n    this.bsModalRef.content.closeBtnName = 'Close';\\n  }\\n}\\n\\n/* This is a component which we pass in modal*/\\n\\n@Component({\\n  selector: 'modal-content',\\n  template: `\\n    <div class=\\\"modal-header\\\">\\n      <h4 class=\\\"modal-title pull-left\\\">{{title}}</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"bsModalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <ul *ngIf=\\\"list.length\\\">\\n        <li *ngFor=\\\"let item of list\\\">{{item}}</li>\\n      </ul>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"bsModalRef.hide()\\\">{{closeBtnName}}</button>\\n    </div>\\n  `\\n})\\n\\nexport class ModalContentComponent implements OnInit {\\n  title: string;\\n  closeBtnName: string;\\n  list: any[] = [];\\n\\n  constructor(public bsModalRef: BsModalRef) {}\\n\\n  ngOnInit() {\\n    this.list.push('PROFIT!!!');\\n  }\\n}\\n\";","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"showModal()\\\">Render auto-shown modal</button>\\r\\n<div *ngIf=\\\"isModalShown\\\" [config]=\\\"{ show: true }\\\" (onHidden)=\\\"onHidden()\\\" bsModal #autoShownModal=\\\"bs-modal\\\"\\r\\n     class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-auto-name\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 id=\\\"dialog-auto-name\\\" class=\\\"modal-title pull-left\\\">Auto shown modal</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <p>I am a modal that is shown right after initialization!</p>\\r\\n        <p>I wasn't present in DOM until you clicked the button</p>\\r\\n        <p>When you close me, I'll be removed from the DOM</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-service-disable-animation',\n  templateUrl: './disable-animation.html'\n})\nexport class DemoModalServiceDisableAnimationComponent {\n  modalRef: BsModalRef;\n  config = {\n    animated: true\n  };\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template, this.config);\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">Open modal</button>\r\n<br>\r\n<br>\r\n<button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"config.animated = !config.animated\">{{config.animated ? 'Disable' : 'Enable'}} animation</button>\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Modal</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    Just a modal with a bunch of words inside, nothing serious.\r\n  </div>\r\n</ng-template>\r\n","import { Component, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-events',\n  templateUrl: './events.html',\n  styles: [`\n    .card {\n      margin-bottom: 0.75rem;\n      padding: 8px;\n    }\n  `]\n})\nexport class DemoModalEventsComponent {\n  @ViewChild(ModalDirective, { static: false }) modal: ModalDirective;\n  messages: string[];\n\n  showModal() {\n    this.messages = [];\n    this.modal.show();\n  }\n  handler(type: string, $event: ModalDirective) {\n    this.messages.push(\n      `event ${type} is fired${$event.dismissReason\n        ? ', dismissed by ' + $event.dismissReason\n        : ''}`\n    );\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"showModal()\">Open a modal</button>\r\n<br><br>\r\n<pre class=\"card card-block card-header\" *ngFor=\"let message of messages\">{{message}}</pre>\r\n\r\n<div class=\"modal fade\" bsModal #modal=\"bs-modal\"\r\n     tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-events-name\"\r\n     (onShow)=\"handler('onShow', $event)\"\r\n     (onShown)=\"handler('onShown', $event)\"\r\n     (onHide)=\"handler('onHide', $event)\"\r\n     (onHidden)=\"handler('onHidden', $event)\">\r\n  <div class=\"modal-dialog modal-sm\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 id=\"dialog-events-name\" class=\"modal-title pull-left\">Modal</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modal.hide()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        Just another modal <br>\r\n        Click <b>&times;</b>, press <code>Esc</code> or click on backdrop to close modal.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { DemoModalServiceStaticComponent } from './demos/service-template/service-template';\r\nimport { DemoModalServiceFromComponent } from './demos/service-component/service-component';\r\nimport { DemoModalServiceNestedComponent } from './demos/service-nested/service-nested';\r\nimport { DemoModalServiceEventsComponent } from './demos/service-events/service-events';\r\nimport { DemoModalServiceDisableAnimationComponent } from './demos/service-options/disable-animation/disable-animation';\r\nimport { DemoModalServiceCustomCSSClassComponent } from './demos/service-options/custom-css-class/custom-css-class';\r\nimport { DemoModalServiceDisableEscClosingComponent } from './demos/service-options/disable-esc-closing/disable-esc-closing';\r\nimport { DemoModalServiceDisableBackdropComponent } from './demos/service-options/disable-backdrop/disable-backdrop';\r\nimport { DemoModalServiceConfirmWindowComponent } from './demos/service-confirm-window/service-confirm-window';\r\nimport { DemoModalServiceChangeClassComponent } from './demos/service-options/change-class/change-class';\r\n\r\nimport { DemoModalStaticComponent } from './demos/static/static';\r\nimport { DemoModalSizesComponent } from './demos/sizes/sizes';\r\nimport { DemoModalChildComponent } from './demos/child/child';\r\nimport { DemoModalNestedComponent } from './demos/nested/nested';\r\nimport { DemoModalEventsComponent } from './demos/events/events';\r\nimport { DemoAutoShownModalComponent } from './demos/auto-shown/auto-shown';\r\nimport { DemoAccessibilityComponent } from './demos/accessibility/accessibility';\r\nimport { DemoModalWithPopupsComponent } from './demos/modal-with-popups/modal-with-popups';\r\n\r\nimport { ContentSection } from '../../docs/models/content-section.model';\r\nimport { DemoTopSectionComponent } from '../../docs/demo-section-components/demo-top-section';\r\nimport { ExamplesComponent } from '../../docs/demo-section-components/demo-examples-section';\r\nimport { ApiSectionsComponent } from '../../docs/demo-section-components/demo-api-section';\r\n\r\nimport {\r\n  NgApiDocComponent,\r\n  NgApiDocClassComponent,\r\n  NgApiDocConfigComponent\r\n} from '../../docs/api-docs';\r\nimport { DemoModalScrollingLongContentComponent } from './demos/scrolling-long-content/scrolling-long-content';\r\nimport { DemoModalRefEventsComponent } from './demos/modal-ref-events/modal-ref-events';\r\nimport { DemoModalServiceWithInterceptorComponent } from './demos/service-interceptor/service-interceptor';\r\n\r\nexport const demoComponentContent: ContentSection[] = [\r\n  {\r\n    name: 'Usage',\r\n    anchor: 'usage',\r\n    outlet: DemoTopSectionComponent,\r\n    content: {\r\n      doc: require('!!raw-loader!./docs/usage.md')\r\n    }\r\n  },\r\n  {\r\n    name: 'Service examples',\r\n    anchor: 'service-section',\r\n    outlet: ExamplesComponent,\r\n    description: `\r\n      <p>Open a modal from service.</p>\r\n      <p>To be able to open modals from service, inject <code>BsModalService</code> to your constructor.<br>Then, call\r\n      <code>.show()</code> method of modal service. Pass a <code>TemplateRef</code> or a component as a first argument and\r\n      config as a second (optionally). <br> <code>.show()</code> method returns an instance of <code>BsModalRef</code>\r\n      class with <code>.hide()</code> method and <code>content</code> property where you'll find a component\r\n      which you've passed to service.</p>`,\r\n    content: [\r\n      {\r\n        title: 'Template',\r\n        anchor: 'service-template',\r\n        component: require('!!raw-loader!./demos/service-template/service-template.ts'),\r\n        html: require('!!raw-loader!./demos/service-template/service-template.html'),\r\n        outlet: DemoModalServiceStaticComponent\r\n      },\r\n      {\r\n        title: 'Component',\r\n        anchor: 'service-component',\r\n        component: require('!!raw-loader!./demos/service-component/service-component.ts'),\r\n        html: require('!!raw-loader!./demos/service-component/service-component.html'),\r\n        description: `<p>Creating a modal with component just as easy as it is with template. Just pass your component\r\n          in <code>.show()</code> method as in example, and don't forget to include your component to\r\n          <code>entryComponents</code> of your <code>NgModule</code><br> If you passed a component\r\n          to <code>.show()</code> you can get access to opened modal by injecting <code>BsModalRef</code>. Also you can pass data\r\n          in your modal by adding <code>initialState</code> field in config. See example for more info</p>`,\r\n        outlet: DemoModalServiceFromComponent\r\n      },\r\n      {\r\n        title: 'Nested',\r\n        anchor: 'service-nested',\r\n        component: require('!!raw-loader!./demos/service-nested/service-nested.ts'),\r\n        html: require('!!raw-loader!./demos/service-nested/service-nested.html'),\r\n        description: `<p>Nested modals are supported</p>`,\r\n        outlet: DemoModalServiceNestedComponent\r\n      },\r\n      {\r\n        title: 'Scrolling long content',\r\n        anchor: 'scrolling-long-content',\r\n        component: require('!!raw-loader!./demos/scrolling-long-content/scrolling-long-content.ts'),\r\n        html: require('!!raw-loader!./demos/scrolling-long-content/scrolling-long-content.html'),\r\n        outlet: DemoModalScrollingLongContentComponent\r\n      },\r\n      {\r\n        title: 'Events',\r\n        anchor: 'service-events',\r\n        component: require('!!raw-loader!./demos/service-events/service-events.ts'),\r\n        html: require('!!raw-loader!./demos/service-events/service-events.html'),\r\n        description: `\r\n          <p>Modal service events. Modal service exposes 4 events: <code>onShow</code>, <code>onShown</code>,\r\n          <code>onHide</code>, <code>onHidden</code>.\r\n          See usage example below.</p>\r\n          <p><code>onHide</code> and <code>onHidden</code> events emit dismiss reason. Possible values are\r\n          <code>backdrop-click</code>, <code>esc</code> or <code>{id: number}</code> if modal was closed by direct call of\r\n          <code>hide()</code> method</p>`,\r\n        outlet: DemoModalServiceEventsComponent\r\n      },\r\n      {\r\n        title: 'ModalRef Events',\r\n        anchor: 'modal-ref-events',\r\n        component: require('!!raw-loader!./demos/modal-ref-events/modal-ref-events.ts'),\r\n        html: require('!!raw-loader!./demos/modal-ref-events/modal-ref-events.html'),\r\n        description: `\r\n          <p>Modal ref events. ModalRef exposes 2 events: <code>onHide</code> and <code>onHidden</code>. Note,\r\n          <code>onShow</code> and <code>onShown</code> are not options because they have already fired by the time\r\n          the ModalRef is created.\r\n          See usage example below.</p>\r\n          <p><code>onHide</code> and <code>onHidden</code> events emit dismiss reason. Possible values are\r\n          <code>backdrop-click</code>, <code>esc</code> or <code>{id: number}</code> if modal was closed by direct call of\r\n          <code>hide()</code> method</p>`,\r\n        outlet: DemoModalRefEventsComponent\r\n      },\r\n      {\r\n        title: 'Confirm Window',\r\n        anchor: 'confirm-window',\r\n        component: require('!!raw-loader!./demos/service-confirm-window/service-confirm-window.ts'),\r\n        html: require('!!raw-loader!./demos/service-confirm-window/service-confirm-window.html'),\r\n        description: `<p>Modal with opportunity to <code>confirm</code> or <code>decline</code>.</p>`,\r\n        outlet: DemoModalServiceConfirmWindowComponent\r\n      },\r\n      {\r\n        title: 'Сustom css class',\r\n        anchor: 'service-custom-css-class',\r\n        component: require('!!raw-loader!./demos/service-options/custom-css-class/custom-css-class.ts'),\r\n        html: require('!!raw-loader!./demos/service-options/custom-css-class/custom-css-class.html'),\r\n        description: `<p>There is possibility to add custom css class to a modal.\r\n          See the demo below to learn how to use it</p>`,\r\n        outlet: DemoModalServiceCustomCSSClassComponent\r\n      },\r\n      {\r\n        title: 'Animation option',\r\n        anchor: 'service-disable-animation',\r\n        component: require('!!raw-loader!./demos/service-options/disable-animation/disable-animation.ts'),\r\n        html: require('!!raw-loader!./demos/service-options/disable-animation/disable-animation.html'),\r\n        description: `<p>There is animation option that you can configure.</p>`,\r\n        outlet: DemoModalServiceDisableAnimationComponent\r\n      },\r\n      {\r\n        title: 'Esc closing option',\r\n        anchor: 'service-disable-esc-closing',\r\n        component: require('!!raw-loader!./demos/service-options/disable-esc-closing/disable-esc-closing.ts'),\r\n        html: require('!!raw-loader!./demos/service-options/disable-esc-closing/disable-esc-closing.html'),\r\n        description: `<p>There is closing by Esc button option that you can configure.</p>`,\r\n        outlet: DemoModalServiceDisableEscClosingComponent\r\n      },\r\n      {\r\n        title: 'Modal window with tooltip and popover',\r\n        anchor: 'modal-with-popups',\r\n        component: require('!!raw-loader!./demos/modal-with-popups/modal-with-popups.ts'),\r\n        html: require('!!raw-loader!./demos/modal-with-popups/modal-with-popups.html'),\r\n        description: `<p><code>Tooltips</code> and <code>popovers</code> can be placed within modals as needed. When modals are closed, any <code>tooltips</code> and <code>popovers</code> within are also automatically dismissed.</p>`,\r\n        outlet: DemoModalWithPopupsComponent\r\n      },\r\n      {\r\n        title: 'Backdrop options',\r\n        anchor: 'service-disable-backdrop',\r\n        component: require('!!raw-loader!./demos/service-options/disable-backdrop/disable-backdrop.ts'),\r\n        html: require('!!raw-loader!./demos/service-options/disable-backdrop/disable-backdrop.html'),\r\n        description: `<p>There is backdrop options that you can configure.</p>`,\r\n        outlet: DemoModalServiceDisableBackdropComponent\r\n      },\r\n      {\r\n        title: 'Change class',\r\n        anchor: 'change-class',\r\n        component: require('!!raw-loader!./demos/service-options/change-class/change-class.ts'),\r\n        html: require('!!raw-loader!./demos/service-options/change-class/change-class.html'),\r\n        description: `<p>Calling setClass method to change modal's window class</p>`,\r\n        outlet: DemoModalServiceChangeClassComponent\r\n      },\r\n      {\r\n        title: 'Close interceptor',\r\n        anchor: 'service-with-interceptor',\r\n        component: require('!!raw-loader!./demos/service-interceptor/service-interceptor.ts'),\r\n        html: require('!!raw-loader!./demos/service-interceptor/service-interceptor.html'),\r\n        description: `<p>When opening a modal with a component, you can provide an interceptor which will be triggered\r\n          whenever the modal try to close, allowing you to block the disappearance of a modal.</p>`,\r\n        outlet: DemoModalServiceWithInterceptorComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'Directive examples',\r\n    anchor: 'directive-section',\r\n    outlet: ExamplesComponent,\r\n    description: `<p>Also you can use directive instead of service. See the demos below </p>`,\r\n    content: [\r\n      {\r\n        title: 'Static modal',\r\n        anchor: 'directive-static',\r\n        component: require('!!raw-loader!./demos/static/static.ts'),\r\n        html: require('!!raw-loader!./demos/static/static.html'),\r\n        outlet: DemoModalStaticComponent\r\n      },\r\n      {\r\n        title: 'Optional sizes',\r\n        anchor: 'directive-sizes',\r\n        component: require('!!raw-loader!./demos/sizes/sizes.ts'),\r\n        html: require('!!raw-loader!./demos/sizes/sizes.html'),\r\n        outlet: DemoModalSizesComponent\r\n      },\r\n      {\r\n        title: 'Child modal',\r\n        anchor: 'directive-child',\r\n        component: require('!!raw-loader!./demos/child/child.ts'),\r\n        html: require('!!raw-loader!./demos/child/child.html'),\r\n        description: `<p>Control modal from parent component</p>`,\r\n        outlet: DemoModalChildComponent\r\n      },\r\n      {\r\n        title: 'Nested modals',\r\n        anchor: 'directive-nested',\r\n        component: require('!!raw-loader!./demos/nested/nested.ts'),\r\n        html: require('!!raw-loader!./demos/nested/nested.html'),\r\n        description: `<p>Open a modal from another modal</p>`,\r\n        outlet: DemoModalNestedComponent\r\n      },\r\n      {\r\n        title: 'Modal events',\r\n        anchor: 'directive-events',\r\n        component: require('!!raw-loader!./demos/events/events.ts'),\r\n        html: require('!!raw-loader!./demos/events/events.html'),\r\n        description: `<p><code>ModalDirective</code> exposes 4 events: <code>onShow</code>, <code>onShown</code>,\r\n          <code>onHide</code>, <code>onHidden</code>. See usage example below.<br>\r\n          <code>$event</code> is an instance of <code>ModalDirective</code>. There you may\r\n          find some useful properties like <code>isShown</code>, <code>dismissReason</code>, etc.\r\n          <br>For example, you may want to know which one of user's actions caused closing of a modal.\r\n          Just get the value of <code>dismissReason</code>,<br> possible values are <code>backdrop-click</code>,\r\n          <code>esc</code> or <code>null</code> if modal was closed by direct call of <code>hide()</code> method</p>`,\r\n        outlet: DemoModalEventsComponent\r\n      },\r\n      {\r\n        title: 'Auto shown modal',\r\n        anchor: 'directive-auto-shown',\r\n        component: require('!!raw-loader!./demos/auto-shown/auto-shown.ts'),\r\n        html: require('!!raw-loader!./demos/auto-shown/auto-shown.html'),\r\n        description: `\r\n          <p>Show modal right after it has been initialized. This allows you to keep DOM clean by only\r\n          appending visible modals to the DOM using <code>*ngIf</code> directive.</p>\r\n          <p>It can also be useful if you want your modal component to perform some initialization operations, but\r\n          want to defer that until user actually sees modal content. I.e. for a \"Select e-mail recipient\" modal\r\n          you might want to defer recipient list loading until the modal is shown.</p>`,\r\n        outlet: DemoAutoShownModalComponent\r\n      },\r\n      {\r\n        title: 'Accessibility',\r\n        anchor: 'accessibility',\r\n        component: require('!!raw-loader!./demos/accessibility/accessibility.ts'),\r\n        html: require('!!raw-loader!./demos/accessibility/accessibility.html'),\r\n        description: `\r\n        <p>\r\n          Be sure to add <code class=\"highlighter-rouge\">id=\"\"</code> attribute to your title and description\r\n          in the template to make your modal works according to accessibility. The <code class=\"highlighter-rouge\">aria-labelledby</code>\r\n          attribute establishes relationships between the modal and its title (only if the title has id attribute). The element\r\n          containing the modal's description is referenced by <code class=\"highlighter-rouge\">aria-describedby</code> attribute.\r\n          The dialog does not need <code class=\"highlighter-rouge\">aria-describedby</code> since there is no static\r\n          text that describes it.\r\n        </p>\r\n        <p>\r\n        Use modal options to set <code class=\"highlighter-rouge\">aria-labelledby</code> and\r\n        <code class=\"highlighter-rouge\">aria-describedby</code> attributes.\r\n        </p>\r\n        `,\r\n        outlet: DemoAccessibilityComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'API Reference',\r\n    anchor: 'api-reference',\r\n    outlet: ApiSectionsComponent,\r\n    content: [\r\n      {\r\n        title: 'ModalDirective',\r\n        anchor: 'modal-directive',\r\n        outlet: NgApiDocComponent\r\n      },\r\n      {\r\n        title: 'ModalBackdropComponent',\r\n        anchor: 'modal-backdrop-component',\r\n        outlet: NgApiDocComponent\r\n      },\r\n      {\r\n        title: 'BsModalService',\r\n        anchor: 'bs-modal-service',\r\n        outlet: NgApiDocClassComponent\r\n      },\r\n      {\r\n        title: 'BsModalRef',\r\n        anchor: 'bs-modal-ref',\r\n        outlet: NgApiDocClassComponent\r\n      },\r\n      {\r\n        title: 'ModalOptions',\r\n        anchor: 'modal-options',\r\n        outlet: NgApiDocConfigComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import { Component, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-change-class',\n  templateUrl: './change-class.html'\n})\nexport class DemoModalServiceChangeClassComponent {\n  modalRef: BsModalRef;\n  valueWidth = false;\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(\n      template,\n      Object.assign({}, { class: 'modal-sm' })\n    );\n  }\n\n  setModalClass() {\n    this.valueWidth = !this.valueWidth;\n    const modalWidth = this.valueWidth ? 'modal-lg' : 'modal-sm';\n    this.modalRef.setClass(modalWidth);\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">Create template modal</button>\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Modal</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    This is a modal.\r\n  </div>\r\n  <button type=\"button\" class=\"btn\" (click)=\"setModalClass()\">Change width</button>\r\n</ng-template>\r\n","import { ModalSectionComponent } from './modal-section.component';\r\n\r\nexport const routes = [{ path: '', component: ModalSectionComponent }];\r\n","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\">Open modal</button>\\r\\n<br>\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Modal</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p *ngFor=\\\"let item of items\\\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cumque delectus enim esse excepturi, impedit,\\r\\n      iste magnam officia optio, quam quis quisquam saepe sint unde velit vitae! Animi in iusto ut?</p>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { Component, OnInit } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-service-component',\n  templateUrl: './service-component.html'\n})\nexport class DemoModalServiceFromComponent {\n  bsModalRef: BsModalRef;\n  constructor(private modalService: BsModalService) {}\n\n  openModalWithComponent() {\n    const initialState = {\n      list: [\n        'Open a modal with component',\n        'Pass your data',\n        'Do something else',\n        '...'\n      ],\n      title: 'Modal with component'\n    };\n    this.bsModalRef = this.modalService.show(ModalContentComponent, {initialState});\n    this.bsModalRef.content.closeBtnName = 'Close';\n  }\n}\n\n/* This is a component which we pass in modal*/\n\n@Component({\n  selector: 'modal-content',\n  template: `\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title pull-left\">{{title}}</h4>\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <ul *ngIf=\"list.length\">\n        <li *ngFor=\"let item of list\">{{item}}</li>\n      </ul>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">{{closeBtnName}}</button>\n    </div>\n  `\n})\n\nexport class ModalContentComponent implements OnInit {\n  title: string;\n  closeBtnName: string;\n  list: any[] = [];\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit() {\n    this.list.push('PROFIT!!!');\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModalWithComponent()\">Create modal with component</button>\r\n","import { ChangeDetectorRef, Component, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'bao-tran-angular/modal';\nimport { combineLatest, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'demo-modal-ref-events',\n  templateUrl: './modal-ref-events.html',\n  styles: [`\n    .card {\n      margin-bottom: 0.75rem;\n      padding: 8px;\n    }\n  `]\n})\nexport class DemoModalRefEventsComponent {\n  modalRef: BsModalRef;\n  subscriptions: Subscription[] = [];\n  messages: string[] = [];\n\n  constructor(private modalService: BsModalService, private changeDetection: ChangeDetectorRef) {\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.messages = [];\n\n    this.modalRef = this.modalService.show(template);\n\n    const _combine = combineLatest(\n      this.modalRef.onHide,\n      this.modalRef.onHidden\n    ).subscribe(() => this.changeDetection.markForCheck());\n\n    this.subscriptions.push(\n      this.modalRef.onHide.subscribe((reason: string | any) => {\n        if (typeof reason !== 'string') {\n          reason = `onHide(), modalId is : ${reason.id}`;\n        }\n        const _reason = reason ? `, dismissed by ${reason}` : '';\n        this.messages.push(`onHide event has been fired${_reason}`);\n      })\n    );\n    this.subscriptions.push(\n      this.modalRef.onHidden.subscribe((reason: string | any) => {\n        if (typeof reason !== 'string') {\n          reason = `onHide(), modalId is : ${reason.id}`;\n        }\n        const _reason = reason ? `, dismissed by ${reason}` : '';\n        this.messages.push(`onHidden event has been fired${_reason}`);\n        this.unsubscribe();\n      })\n    );\n\n    this.subscriptions.push(_combine);\n  }\n\n  unsubscribe() {\n    this.subscriptions.forEach((subscription: Subscription) => {\n      subscription.unsubscribe();\n    });\n    this.subscriptions = [];\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">Open modal</button>\r\n<br><br>\r\n<pre class=\"card card-block card-header\" *ngFor=\"let message of messages\">{{message}}</pre>\r\n<ng-template #template>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Modal</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    This is a modal\r\n  </div>\r\n</ng-template>\r\n","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"staticModal.show()\\\">Static modal</button>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #staticModal=\\\"bs-modal\\\" [config]=\\\"{backdrop: 'static'}\\\"\\r\\n     tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-static-name\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 id=\\\"dialog-static-name\\\" class=\\\"modal-title pull-left\\\">Static modal</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"staticModal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        This is static modal, backdrop click will not close it.\\r\\n        Click <b>&times;</b> to close modal.\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\">Open modal</button>\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Modal</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cumque delectus enim esse excepturi, impedit,\\r\\n      iste magnam officia optio, quam quis quisquam saepe sint unde velit vitae! Animi in iusto ut?</p>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" popover=\\\"Vivamus sagittis\\\">popover</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" tooltip=\\\"Vivamus sagittis\\\">tooltip</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { Component, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-service-interceptor',\n  templateUrl: './service-interceptor.html'\n})\nexport class DemoModalServiceWithInterceptorComponent {\n  bsModalRef: BsModalRef;\n\n  confirmModalRef: BsModalRef;\n  confirmResolve: Function;\n  confirmReject: Function;\n  confirmPromise: Promise<void>;\n\n  constructor(private modalService: BsModalService) {}\n\n  openModalWithInterceptor(confirmTemplate: TemplateRef<any>) {\n    const closeInterceptor = () => {\n      this.confirmPromise = new Promise((resolve, reject) => {\n        this.confirmResolve = resolve;\n        this.confirmReject = reject;\n      });\n      this.confirmModalRef = this.modalService.show(confirmTemplate, {class: 'modal-sm'});\n\n      return this.confirmPromise;\n    };\n    this.bsModalRef = this.modalService.show(ModalContentWithInterceptorComponent, { closeInterceptor });\n    this.bsModalRef.content.closeBtnName = 'Close';\n  }\n\n  confirm(): void {\n    this.confirmResolve();\n    this.confirmModalRef.hide();\n  }\n\n  decline(): void {\n    this.confirmReject();\n    this.confirmModalRef.hide();\n  }\n}\n\n@Component({\n  selector: 'modal-content-with-interceptor',\n  template: `\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title pull-left\">Modal with interceptor</h4>\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">This modal has closing interceptor</div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Close</button>\n    </div>\n  `\n})\n\nexport class ModalContentWithInterceptorComponent {\n  constructor(public bsModalRef: BsModalRef) { }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModalWithInterceptor(template)\">Create modal with close interceptor</button>\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-body text-center\">\r\n    <p>Do you really want to close?</p>\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\" >Yes</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"decline()\" >No</button>\r\n  </div>\r\n</ng-template>\r\n\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ModalModule } from 'bao-tran-angular/modal';\n\nimport { DocsModule } from '../../docs';\nimport { ModalSectionComponent } from './modal-section.component';\nimport { DEMO_COMPONENTS } from './demos';\nimport { routes } from './demo-modal.routes';\nimport { ModalContentComponent } from './demos/service-component/service-component';\nimport { ModalContentWithInterceptorComponent } from './demos/service-interceptor/service-interceptor';\nimport { PopoverModule } from 'bao-tran-angular/popover';\nimport { TooltipModule } from 'bao-tran-angular/tooltip';\n\n@NgModule({\n  declarations: [\n    ModalSectionComponent,\n    ModalContentComponent,\n    ModalContentWithInterceptorComponent,\n    ...DEMO_COMPONENTS\n  ],\n  imports: [\n    ModalModule.forRoot(),\n    PopoverModule.forRoot(),\n    TooltipModule.forRoot(),\n    CommonModule,\n    FormsModule,\n    DocsModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [ModalSectionComponent],\n  entryComponents: [ModalContentComponent, ModalContentWithInterceptorComponent, ...DEMO_COMPONENTS]\n})\nexport class DemoModalModule {}\n","import { Component, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-accessibility',\n  templateUrl: './accessibility.html'\n})\nexport class DemoAccessibilityComponent {\n  modalRef: BsModalRef;\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template, {\n      ariaDescribedby: 'my-modal-description',\n      ariaLabelledBy: 'my-modal-title'\n    });\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">Create template modal</button>\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\" id=\"my-modal-title\">Modal title</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <div id=\"my-modal-description\">\r\n      This is a modal.\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","export default \"import { Component, TemplateRef } from '@angular/core';\\nimport { BsModalRef, BsModalService } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-accessibility',\\n  templateUrl: './accessibility.html'\\n})\\nexport class DemoAccessibilityComponent {\\n  modalRef: BsModalRef;\\n  constructor(private modalService: BsModalService) {}\\n\\n  openModal(template: TemplateRef<any>) {\\n    this.modalRef = this.modalService.show(template, {\\n      ariaDescribedby: 'my-modal-description',\\n      ariaLabelledBy: 'my-modal-title'\\n    });\\n  }\\n}\\n\";","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModalWithInterceptor(template)\\\">Create modal with close interceptor</button>\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-body text-center\\\">\\r\\n    <p>Do you really want to close?</p>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"confirm()\\\" >Yes</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"decline()\\\" >No</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\";","export default \"<!--Large modal-->\\r\\n<p>Small modal window have small width on screens only above 768px(boostrap3) and 576px(bootstrap4)</p>\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"lgModal.show()\\\">Large modal</button>\\r\\n\\r\\n<div bsModal #lgModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\"\\r\\n     role=\\\"dialog\\\" aria-labelledby=\\\"dialog-sizes-name1\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 id=\\\"dialog-sizes-name1\\\" class=\\\"modal-title pull-left\\\">Large modal</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" (click)=\\\"lgModal.hide()\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        ...\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--Small modal-->\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"smModal.show()\\\">Small modal</button>\\r\\n\\r\\n<div bsModal #smModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-sizes-name2\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 id=\\\"dialog-sizes-name2\\\" class=\\\"modal-title pull-left\\\">Small modal</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"smModal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        ...\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-modal-nested',\r\n  templateUrl: './nested.html'\r\n})\r\nexport class DemoModalNestedComponent {}\r\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"parentModal.show()\">Open parent modal</button>\r\n<div class=\"modal fade\" bsModal #parentModal=\"bs-modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-nested-name1\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 id=\"dialog-nested-name1\" class=\"modal-title pull-left\">First modal</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"parentModal.hide()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"childModal.show()\">Open second modal</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" bsModal #childModal=\"bs-modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-nested-name2\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 id=\"dialog-nested-name2\" class=\"modal-title pull-left\">Second modal</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"childModal.hide()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        This is second modal <br>\r\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"thirdModal.show()\">Open third modal</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" bsModal #thirdModal=\"bs-modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-nested-name3\">\r\n  <div class=\"modal-dialog modal-sm\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 id=\"dialog-nested-name3\" class=\"modal-title pull-left\">Third modal</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"thirdModal.hide()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        This is third modal <br>\r\n        Click <b>&times;</b> to close modal.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export default \"import { Component, TemplateRef } from '@angular/core';\\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-change-class',\\n  templateUrl: './change-class.html'\\n})\\nexport class DemoModalServiceChangeClassComponent {\\n  modalRef: BsModalRef;\\n  valueWidth = false;\\n  constructor(private modalService: BsModalService) {}\\n\\n  openModal(template: TemplateRef<any>) {\\n    this.modalRef = this.modalService.show(\\n      template,\\n      Object.assign({}, { class: 'modal-sm' })\\n    );\\n  }\\n\\n  setModalClass() {\\n    this.valueWidth = !this.valueWidth;\\n    const modalWidth = this.valueWidth ? 'modal-lg' : 'modal-sm';\\n    this.modalRef.setClass(modalWidth);\\n  }\\n}\\n\";","export default \"import { Component, ViewChild } from '@angular/core';\\nimport { ModalDirective } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-child',\\n  templateUrl: './child.html'\\n})\\nexport class DemoModalChildComponent {\\n  @ViewChild('childModal', { static: false }) childModal: ModalDirective;\\n\\n  showChildModal(): void {\\n    this.childModal.show();\\n  }\\n\\n  hideChildModal(): void {\\n    this.childModal.hide();\\n  }\\n}\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-modal-static',\\r\\n  templateUrl: './static.html'\\r\\n})\\r\\nexport class DemoModalStaticComponent {}\\r\\n\";","export default \"import { ChangeDetectorRef, Component, TemplateRef } from '@angular/core';\\nimport { BsModalRef, BsModalService } from 'bao-tran-angular/modal';\\nimport { combineLatest, Subscription } from 'rxjs';\\n\\n@Component({\\n  selector: 'demo-modal-ref-events',\\n  templateUrl: './modal-ref-events.html',\\n  styles: [`\\n    .card {\\n      margin-bottom: 0.75rem;\\n      padding: 8px;\\n    }\\n  `]\\n})\\nexport class DemoModalRefEventsComponent {\\n  modalRef: BsModalRef;\\n  subscriptions: Subscription[] = [];\\n  messages: string[] = [];\\n\\n  constructor(private modalService: BsModalService, private changeDetection: ChangeDetectorRef) {\\n  }\\n\\n  openModal(template: TemplateRef<any>) {\\n    this.messages = [];\\n\\n    this.modalRef = this.modalService.show(template);\\n\\n    const _combine = combineLatest(\\n      this.modalRef.onHide,\\n      this.modalRef.onHidden\\n    ).subscribe(() => this.changeDetection.markForCheck());\\n\\n    this.subscriptions.push(\\n      this.modalRef.onHide.subscribe((reason: string | any) => {\\n        if (typeof reason !== 'string') {\\n          reason = `onHide(), modalId is : ${reason.id}`;\\n        }\\n        const _reason = reason ? `, dismissed by ${reason}` : '';\\n        this.messages.push(`onHide event has been fired${_reason}`);\\n      })\\n    );\\n    this.subscriptions.push(\\n      this.modalRef.onHidden.subscribe((reason: string | any) => {\\n        if (typeof reason !== 'string') {\\n          reason = `onHide(), modalId is : ${reason.id}`;\\n        }\\n        const _reason = reason ? `, dismissed by ${reason}` : '';\\n        this.messages.push(`onHidden event has been fired${_reason}`);\\n        this.unsubscribe();\\n      })\\n    );\\n\\n    this.subscriptions.push(_combine);\\n  }\\n\\n  unsubscribe() {\\n    this.subscriptions.forEach((subscription: Subscription) => {\\n      subscription.unsubscribe();\\n    });\\n    this.subscriptions = [];\\n  }\\n}\\n\";","import { Component, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-auto-shown',\n  templateUrl: './auto-shown.html'\n})\nexport class DemoAutoShownModalComponent {\n  @ViewChild('autoShownModal', { static: false }) autoShownModal: ModalDirective;\n  isModalShown = false;\n\n  showModal(): void {\n    this.isModalShown = true;\n  }\n\n  hideModal(): void {\n    this.autoShownModal.hide();\n  }\n\n  onHidden(): void {\n    this.isModalShown = false;\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"showModal()\">Render auto-shown modal</button>\r\n<div *ngIf=\"isModalShown\" [config]=\"{ show: true }\" (onHidden)=\"onHidden()\" bsModal #autoShownModal=\"bs-modal\"\r\n     class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-auto-name\">\r\n  <div class=\"modal-dialog modal-sm\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 id=\"dialog-auto-name\" class=\"modal-title pull-left\">Auto shown modal</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"hideModal()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p>I am a modal that is shown right after initialization!</p>\r\n        <p>I wasn't present in DOM until you clicked the button</p>\r\n        <p>When you close me, I'll be removed from the DOM</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-modal-nested',\\r\\n  templateUrl: './nested.html'\\r\\n})\\r\\nexport class DemoModalNestedComponent {}\\r\\n\";","export default \"import { Component, TemplateRef } from '@angular/core';\\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-service-disable-animation',\\n  templateUrl: './disable-animation.html'\\n})\\nexport class DemoModalServiceDisableAnimationComponent {\\n  modalRef: BsModalRef;\\n  config = {\\n    animated: true\\n  };\\n  constructor(private modalService: BsModalService) {}\\n\\n  openModal(template: TemplateRef<any>) {\\n    this.modalRef = this.modalService.show(template, this.config);\\n  }\\n}\\n\";","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\">Create template modal</button>\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Modal</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    This is a modal.\\r\\n  </div>\\r\\n  <button type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"setModalClass()\\\">Change width</button>\\r\\n</ng-template>\\r\\n\";","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"showChildModal()\\\">Open child modal</button>\\r\\n<div bsModal #childModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\"\\r\\n     role=\\\"dialog\\\" aria-labelledby=\\\"dialog-child-name\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 id=\\\"dialog-child-name\\\" class=\\\"modal-title pull-left\\\">Child modal</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideChildModal()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        I am a child modal, opened from parent component!\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { ChangeDetectorRef, Component, TemplateRef } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'bao-tran-angular/modal';\nimport { combineLatest, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'demo-modal-service-events',\n  templateUrl: './service-events.html',\n  styles: [`\n    .card {\n      margin-bottom: 0.75rem;\n      padding: 8px;\n    }\n  `]\n})\nexport class DemoModalServiceEventsComponent {\n  modalRef: BsModalRef;\n  subscriptions: Subscription[] = [];\n  messages: string[] = [];\n\n  constructor(private modalService: BsModalService, private changeDetection: ChangeDetectorRef) {\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.messages = [];\n\n    const _combine = combineLatest(\n      this.modalService.onShow,\n      this.modalService.onShown,\n      this.modalService.onHide,\n      this.modalService.onHidden\n    ).subscribe(() => this.changeDetection.markForCheck());\n\n    this.subscriptions.push(\n      this.modalService.onShow.subscribe(() => {\n        this.messages.push(`onShow event has been fired`);\n      })\n    );\n    this.subscriptions.push(\n      this.modalService.onShown.subscribe(() => {\n        this.messages.push(`onShown event has been fired`);\n      })\n    );\n    this.subscriptions.push(\n      this.modalService.onHide.subscribe((reason: string | any) => {\n        if (typeof reason !== 'string') {\n          reason = `onHide(), modalId is : ${reason.id}`;\n        }\n        const _reason = reason ? `, dismissed by ${reason}` : '';\n        this.messages.push(`onHide event has been fired${_reason}`);\n      })\n    );\n    this.subscriptions.push(\n      this.modalService.onHidden.subscribe((reason: string | any) => {\n        if (typeof reason !== 'string') {\n          reason = `onHide(), modalId is : ${reason.id}`;\n        }\n        const _reason = reason ? `, dismissed by ${reason}` : '';\n        this.messages.push(`onHidden event has been fired${_reason}`);\n        this.unsubscribe();\n      })\n    );\n\n    this.subscriptions.push(_combine);\n\n    this.modalRef = this.modalService.show(template);\n  }\n\n  unsubscribe() {\n    this.subscriptions.forEach((subscription: Subscription) => {\n      subscription.unsubscribe();\n    });\n    this.subscriptions = [];\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">Open modal</button>\r\n<br><br>\r\n<pre class=\"card card-block card-header\" *ngFor=\"let message of messages\">{{message}}</pre>\r\n<ng-template #template>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Modal</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    This is a modal\r\n  </div>\r\n</ng-template>\r\n","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"showModal()\\\">Open a modal</button>\\r\\n<br><br>\\r\\n<pre class=\\\"card card-block card-header\\\" *ngFor=\\\"let message of messages\\\">{{message}}</pre>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #modal=\\\"bs-modal\\\"\\r\\n     tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-events-name\\\"\\r\\n     (onShow)=\\\"handler('onShow', $event)\\\"\\r\\n     (onShown)=\\\"handler('onShown', $event)\\\"\\r\\n     (onHide)=\\\"handler('onHide', $event)\\\"\\r\\n     (onHidden)=\\\"handler('onHidden', $event)\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 id=\\\"dialog-events-name\\\" class=\\\"modal-title pull-left\\\">Modal</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        Just another modal <br>\\r\\n        Click <b>&times;</b>, press <code>Esc</code> or click on backdrop to close modal.\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"import { Component, TemplateRef } from '@angular/core';\\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-service-disable-backdrop',\\n  templateUrl: './disable-backdrop.html'\\n})\\nexport class DemoModalServiceDisableBackdropComponent {\\n  modalRef: BsModalRef;\\n  config = {\\n    backdrop: true,\\n    ignoreBackdropClick: false\\n  };\\n  constructor(private modalService: BsModalService) {}\\n\\n  openModal(template: TemplateRef<any>) {\\n    this.modalRef = this.modalService.show(template, this.config);\\n  }\\n}\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-modal-sizes',\r\n  templateUrl: './sizes.html'\r\n})\r\nexport class DemoModalSizesComponent {}\r\n","<!--Large modal-->\r\n<p>Small modal window have small width on screens only above 768px(boostrap3) and 576px(bootstrap4)</p>\r\n<button class=\"btn btn-primary\" (click)=\"lgModal.show()\">Large modal</button>\r\n\r\n<div bsModal #lgModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\"\r\n     role=\"dialog\" aria-labelledby=\"dialog-sizes-name1\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 id=\"dialog-sizes-name1\" class=\"modal-title pull-left\">Large modal</h4>\r\n        <button type=\"button\" class=\"close pull-right\" (click)=\"lgModal.hide()\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        ...\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!--Small modal-->\r\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"smModal.show()\">Small modal</button>\r\n\r\n<div bsModal #smModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-sizes-name2\">\r\n  <div class=\"modal-dialog modal-sm\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 id=\"dialog-sizes-name2\" class=\"modal-title pull-left\">Small modal</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"smModal.hide()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        ...\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export default \"import { Component, TemplateRef } from '@angular/core';\\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-service-disable-esc-closing',\\n  templateUrl: './disable-esc-closing.html'\\n})\\nexport class DemoModalServiceDisableEscClosingComponent {\\n  modalRef: BsModalRef;\\n  config = {\\n    keyboard: true\\n  };\\n  constructor(private modalService: BsModalService) {}\\n\\n  openModal(template: TemplateRef<any>) {\\n    this.modalRef = this.modalService.show(template, this.config);\\n  }\\n}\\n\";","export default \"import { Component, TemplateRef } from '@angular/core';\\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-with-popups',\\n  templateUrl: './modal-with-popups.html'\\n})\\nexport class DemoModalWithPopupsComponent {\\n  modalRef: BsModalRef;\\n\\n  constructor(private modalService: BsModalService) {}\\n\\n  openModal(template: TemplateRef<any>) {\\n    this.modalRef = this.modalService.show(template);\\n  }\\n}\\n\";","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\">Open modal</button>\\r\\n<br>\\r\\n<br>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"config.animated = !config.animated\\\">{{config.animated ? 'Disable' : 'Enable'}} animation</button>\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Modal</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    Just a modal with a bunch of words inside, nothing serious.\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","export default \"import { Component, ViewChild } from '@angular/core';\\nimport { ModalDirective } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-events',\\n  templateUrl: './events.html',\\n  styles: [`\\n    .card {\\n      margin-bottom: 0.75rem;\\n      padding: 8px;\\n    }\\n  `]\\n})\\nexport class DemoModalEventsComponent {\\n  @ViewChild(ModalDirective, { static: false }) modal: ModalDirective;\\n  messages: string[];\\n\\n  showModal() {\\n    this.messages = [];\\n    this.modal.show();\\n  }\\n  handler(type: string, $event: ModalDirective) {\\n    this.messages.push(\\n      `event ${type} is fired${$event.dismissReason\\n        ? ', dismissed by ' + $event.dismissReason\\n        : ''}`\\n    );\\n  }\\n}\\n\";","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"parentModal.show()\\\">Open parent modal</button>\\r\\n<div class=\\\"modal fade\\\" bsModal #parentModal=\\\"bs-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-nested-name1\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 id=\\\"dialog-nested-name1\\\" class=\\\"modal-title pull-left\\\">First modal</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"parentModal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"childModal.show()\\\">Open second modal</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #childModal=\\\"bs-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-nested-name2\\\">\\r\\n  <div class=\\\"modal-dialog\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 id=\\\"dialog-nested-name2\\\" class=\\\"modal-title pull-left\\\">Second modal</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"childModal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        This is second modal <br>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"thirdModal.show()\\\">Open third modal</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal fade\\\" bsModal #thirdModal=\\\"bs-modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"dialog-nested-name3\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h4 id=\\\"dialog-nested-name3\\\" class=\\\"modal-title pull-left\\\">Third modal</h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"thirdModal.hide()\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        This is third modal <br>\\r\\n        Click <b>&times;</b> to close modal.\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-service-disable-backdrop',\n  templateUrl: './disable-backdrop.html'\n})\nexport class DemoModalServiceDisableBackdropComponent {\n  modalRef: BsModalRef;\n  config = {\n    backdrop: true,\n    ignoreBackdropClick: false\n  };\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template, this.config);\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">Open modal</button>\r\n<br>\r\n<br>\r\n<button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"config.backdrop = !config.backdrop\">{{config.backdrop ? 'Disable' : 'Enable'}} backdrop</button>\r\n<button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"config.ignoreBackdropClick = !config.ignoreBackdropClick\">{{!config.ignoreBackdropClick ? 'Disable' : 'Enable'}} backdrop click</button>\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Modal</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    Just a modal with a bunch of words inside, nothing serious.\r\n  </div>\r\n</ng-template>\r\n","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModalWithClass(template)\\\">Open modal with custom css class</button>\\r\\n<br>\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Modal</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    Just a modal with a bunch of words inside, nothing serious.\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { Component, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-child',\n  templateUrl: './child.html'\n})\nexport class DemoModalChildComponent {\n  @ViewChild('childModal', { static: false }) childModal: ModalDirective;\n\n  showChildModal(): void {\n    this.childModal.show();\n  }\n\n  hideChildModal(): void {\n    this.childModal.hide();\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"showChildModal()\">Open child modal</button>\r\n<div bsModal #childModal=\"bs-modal\" class=\"modal fade\" tabindex=\"-1\"\r\n     role=\"dialog\" aria-labelledby=\"dialog-child-name\">\r\n  <div class=\"modal-dialog modal-sm\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 id=\"dialog-child-name\" class=\"modal-title pull-left\">Child modal</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"hideChildModal()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        I am a child modal, opened from parent component!\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export default \"import { Component, TemplateRef } from '@angular/core';\\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-service-static',\\n  templateUrl: './service-template.html'\\n})\\nexport class DemoModalServiceStaticComponent {\\n  modalRef: BsModalRef;\\n  constructor(private modalService: BsModalService) {}\\n\\n  openModal(template: TemplateRef<any>) {\\n    this.modalRef = this.modalService.show(template);\\n  }\\n}\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-modal-static',\r\n  templateUrl: './static.html'\r\n})\r\nexport class DemoModalStaticComponent {}\r\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"staticModal.show()\">Static modal</button>\r\n\r\n<div class=\"modal fade\" bsModal #staticModal=\"bs-modal\" [config]=\"{backdrop: 'static'}\"\r\n     tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-static-name\">\r\n  <div class=\"modal-dialog modal-sm\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h4 id=\"dialog-static-name\" class=\"modal-title pull-left\">Static modal</h4>\r\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"staticModal.hide()\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        This is static modal, backdrop click will not close it.\r\n        Click <b>&times;</b> to close modal.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export default \"import { Component, TemplateRef } from '@angular/core';\\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-service-nested',\\n  templateUrl: './service-nested.html'\\n})\\nexport class DemoModalServiceNestedComponent {\\n  modalRef: BsModalRef | null;\\n  modalRef2: BsModalRef;\\n  constructor(private modalService: BsModalService) {}\\n\\n  openModal(template: TemplateRef<any>) {\\n    this.modalRef = this.modalService.show(template, { id: 1, class: 'modal-lg' });\\n  }\\n  openModal2(template: TemplateRef<any>) {\\n    this.modalRef2 = this.modalService.show(template, {id: 2, class: 'second' });\\n  }\\n  closeFirstModal() {\\n    if (!this.modalRef) {\\n      return;\\n    }\\n\\n    this.modalRef.hide();\\n    this.modalRef = null;\\n  }\\n  closeModal(modalId?: number){\\n    this.modalService.hide(modalId);\\n  }\\n}\\n\";","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\">Open modal</button>\\r\\n<br><br>\\r\\n<pre class=\\\"card card-block card-header\\\" *ngFor=\\\"let message of messages\\\">{{message}}</pre>\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Modal</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    This is a modal\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","export default \"import { ChangeDetectorRef, Component, TemplateRef } from '@angular/core';\\nimport { BsModalRef, BsModalService } from 'bao-tran-angular/modal';\\nimport { combineLatest, Subscription } from 'rxjs';\\n\\n@Component({\\n  selector: 'demo-modal-service-events',\\n  templateUrl: './service-events.html',\\n  styles: [`\\n    .card {\\n      margin-bottom: 0.75rem;\\n      padding: 8px;\\n    }\\n  `]\\n})\\nexport class DemoModalServiceEventsComponent {\\n  modalRef: BsModalRef;\\n  subscriptions: Subscription[] = [];\\n  messages: string[] = [];\\n\\n  constructor(private modalService: BsModalService, private changeDetection: ChangeDetectorRef) {\\n  }\\n\\n  openModal(template: TemplateRef<any>) {\\n    this.messages = [];\\n\\n    const _combine = combineLatest(\\n      this.modalService.onShow,\\n      this.modalService.onShown,\\n      this.modalService.onHide,\\n      this.modalService.onHidden\\n    ).subscribe(() => this.changeDetection.markForCheck());\\n\\n    this.subscriptions.push(\\n      this.modalService.onShow.subscribe(() => {\\n        this.messages.push(`onShow event has been fired`);\\n      })\\n    );\\n    this.subscriptions.push(\\n      this.modalService.onShown.subscribe(() => {\\n        this.messages.push(`onShown event has been fired`);\\n      })\\n    );\\n    this.subscriptions.push(\\n      this.modalService.onHide.subscribe((reason: string | any) => {\\n        if (typeof reason !== 'string') {\\n          reason = `onHide(), modalId is : ${reason.id}`;\\n        }\\n        const _reason = reason ? `, dismissed by ${reason}` : '';\\n        this.messages.push(`onHide event has been fired${_reason}`);\\n      })\\n    );\\n    this.subscriptions.push(\\n      this.modalService.onHidden.subscribe((reason: string | any) => {\\n        if (typeof reason !== 'string') {\\n          reason = `onHide(), modalId is : ${reason.id}`;\\n        }\\n        const _reason = reason ? `, dismissed by ${reason}` : '';\\n        this.messages.push(`onHidden event has been fired${_reason}`);\\n        this.unsubscribe();\\n      })\\n    );\\n\\n    this.subscriptions.push(_combine);\\n\\n    this.modalRef = this.modalService.show(template);\\n  }\\n\\n  unsubscribe() {\\n    this.subscriptions.forEach((subscription: Subscription) => {\\n      subscription.unsubscribe();\\n    });\\n    this.subscriptions = [];\\n  }\\n}\\n\";","import { Component, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-with-popups',\n  templateUrl: './modal-with-popups.html'\n})\nexport class DemoModalWithPopupsComponent {\n  modalRef: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">Open modal</button>\r\n<ng-template #template>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Modal</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cumque delectus enim esse excepturi, impedit,\r\n      iste magnam officia optio, quam quis quisquam saepe sint unde velit vitae! Animi in iusto ut?</p>\r\n      <button type=\"button\" class=\"btn btn-primary\" popover=\"Vivamus sagittis\">popover</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" tooltip=\"Vivamus sagittis\">tooltip</button>\r\n  </div>\r\n</ng-template>\r\n","export default \"import { Component, TemplateRef } from '@angular/core';\\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-scrolling-long-content',\\n  templateUrl: './scrolling-long-content.html'\\n})\\nexport class DemoModalScrollingLongContentComponent {\\n  modalRef: BsModalRef;\\n  items: any[];\\n\\n  constructor(private modalService: BsModalService) {\\n    this.items = Array(15).fill(0);\\n  }\\n\\n  openModal(template: TemplateRef<any>) {\\n    this.modalRef = this.modalService.show(template);\\n  }\\n}\\n\";","import { Component, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-service-confirm-window',\n  templateUrl: './service-confirm-window.html'\n})\nexport class DemoModalServiceConfirmWindowComponent {\n  modalRef: BsModalRef;\n  message: string;\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\n  }\n\n  confirm(): void {\n    this.message = 'Confirmed!';\n    this.modalRef.hide();\n  }\n\n  decline(): void {\n    this.message = 'Declined!';\n    this.modalRef.hide();\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">Open modal</button>\r\n<br><br>\r\n<pre class=\"card card-block card-header\">{{message}}</pre>\r\n<ng-template #template>\r\n  <div class=\"modal-body text-center\">\r\n    <p>Do you want to confirm?</p>\r\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"confirm()\" >Yes</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"decline()\" >No</button>\r\n  </div>\r\n</ng-template>\r\n","export default \"import { Component, TemplateRef } from '@angular/core';\\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-service-confirm-window',\\n  templateUrl: './service-confirm-window.html'\\n})\\nexport class DemoModalServiceConfirmWindowComponent {\\n  modalRef: BsModalRef;\\n  message: string;\\n  constructor(private modalService: BsModalService) {}\\n\\n  openModal(template: TemplateRef<any>) {\\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\\n  }\\n\\n  confirm(): void {\\n    this.message = 'Confirmed!';\\n    this.modalRef.hide();\\n  }\\n\\n  decline(): void {\\n    this.message = 'Declined!';\\n    this.modalRef.hide();\\n  }\\n}\\n\";","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\">Open modal</button>\\r\\n<br><br>\\r\\n<pre class=\\\"card card-block card-header\\\">{{message}}</pre>\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-body text-center\\\">\\r\\n    <p>Do you want to confirm?</p>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"confirm()\\\" >Yes</button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"decline()\\\" >No</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\">Open modal</button>\\r\\n<br>\\r\\n<br>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"config.keyboard = !config.keyboard\\\">{{config.keyboard ? 'Disable' : 'Enable'}} Esc</button>\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Modal</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    Just a modal with a bunch of words inside, nothing serious.\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { Component, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-service-nested',\n  templateUrl: './service-nested.html'\n})\nexport class DemoModalServiceNestedComponent {\n  modalRef: BsModalRef | null;\n  modalRef2: BsModalRef;\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template, { id: 1, class: 'modal-lg' });\n  }\n  openModal2(template: TemplateRef<any>) {\n    this.modalRef2 = this.modalService.show(template, {id: 2, class: 'second' });\n  }\n  closeFirstModal() {\n    if (!this.modalRef) {\n      return;\n    }\n\n    this.modalRef.hide();\n    this.modalRef = null;\n  }\n  closeModal(modalId?: number){\n    this.modalService.hide(modalId);\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">Open first modal</button>\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">First modal</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    This is a first modal<br />\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal2(templateNested)\">Open second modal</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"closeModal(1)\">Close self</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"closeModal()\">Close all modal</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #templateNested>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Second modal</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef2.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    This is nested modal.<br />\r\n    <button *ngIf=\"modalRef\" type=\"button\" class=\"btn btn-danger\" (click)=\"closeFirstModal()\">Close first modal</button>\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"closeModal(2)\">Close self</button>\r\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"closeModal()\">Close all modal</button>\r\n  </div>\r\n</ng-template>\r\n","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\">Create template modal</button>\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Modal</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    This is a modal.\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","import { Component, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-service-disable-esc-closing',\n  templateUrl: './disable-esc-closing.html'\n})\nexport class DemoModalServiceDisableEscClosingComponent {\n  modalRef: BsModalRef;\n  config = {\n    keyboard: true\n  };\n  constructor(private modalService: BsModalService) {}\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template, this.config);\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">Open modal</button>\r\n<br>\r\n<br>\r\n<button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"config.keyboard = !config.keyboard\">{{config.keyboard ? 'Disable' : 'Enable'}} Esc</button>\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Modal</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    Just a modal with a bunch of words inside, nothing serious.\r\n  </div>\r\n</ng-template>\r\n","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\">Open modal</button>\\r\\n<br><br>\\r\\n<pre class=\\\"card card-block card-header\\\" *ngFor=\\\"let message of messages\\\">{{message}}</pre>\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\">Modal</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    This is a modal\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-modal-sizes',\\r\\n  templateUrl: './sizes.html'\\r\\n})\\r\\nexport class DemoModalSizesComponent {}\\r\\n\";","import { Component, TemplateRef } from '@angular/core';\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\n\n@Component({\n  selector: 'demo-modal-scrolling-long-content',\n  templateUrl: './scrolling-long-content.html'\n})\nexport class DemoModalScrollingLongContentComponent {\n  modalRef: BsModalRef;\n  items: any[];\n\n  constructor(private modalService: BsModalService) {\n    this.items = Array(15).fill(0);\n  }\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template);\n  }\n}\n","<button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal(template)\">Open modal</button>\r\n<br>\r\n\r\n<ng-template #template>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title pull-left\">Modal</h4>\r\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p *ngFor=\"let item of items\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cumque delectus enim esse excepturi, impedit,\r\n      iste magnam officia optio, quam quis quisquam saepe sint unde velit vitae! Animi in iusto ut?</p>\r\n  </div>\r\n</ng-template>\r\n","export default \"import { Component, TemplateRef } from '@angular/core';\\nimport { BsModalService, BsModalRef } from 'bao-tran-angular/modal';\\n\\n@Component({\\n  selector: 'demo-modal-service-custom-css-class',\\n  templateUrl: './custom-css-class.html'\\n})\\nexport class DemoModalServiceCustomCSSClassComponent {\\n  modalRef: BsModalRef;\\n  constructor(private modalService: BsModalService) {}\\n\\n  openModalWithClass(template: TemplateRef<any>) {\\n    this.modalRef = this.modalService.show(\\n      template,\\n      Object.assign({}, { class: 'gray modal-lg' })\\n    );\\n  }\\n}\\n\";","export default \"// RECOMMENDED\\nimport { ModalModule } from 'bao-tran-angular/modal';\\n// NOT RECOMMENDED (Angular 9 doesn't support this kind of import)\\nimport { ModalModule } from 'bao-tran-angular';\\n\\n@NgModule({\\n  imports: [ModalModule.forRoot(),...]\\n})\\nexport class AppModule(){}\\n\";","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\">Create template modal</button>\\r\\n\\r\\n<ng-template #template>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title pull-left\\\" id=\\\"my-modal-title\\\">Modal title</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div id=\\\"my-modal-description\\\">\\r\\n      This is a modal.\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\";"],"sourceRoot":"webpack:///"}