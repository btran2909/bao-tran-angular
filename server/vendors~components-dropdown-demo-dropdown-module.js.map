{"version":3,"sources":["bao-tran-angular/dropdown/bs-dropdown.config.ts","bao-tran-angular/dropdown/bs-dropdown.state.ts","bao-tran-angular/dropdown/dropdown-animations.ts","bao-tran-angular/dropdown/bs-dropdown-container.component.ts","bao-tran-angular/dropdown/bs-dropdown.directive.ts","bao-tran-angular/dropdown/bs-dropdown-menu.directive.ts","bao-tran-angular/dropdown/bs-dropdown-toggle.directive.ts","bao-tran-angular/dropdown/bs-dropdown.module.ts"],"names":[],"mappings":"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","file":"vendors~components-dropdown-demo-dropdown-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n/** Default dropdown configuration */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BsDropdownConfig {\r\n  /** default dropdown auto closing behavior */\r\n  autoClose = true;\r\n  /** default dropdown auto closing behavior */\r\n  insideClick = false;\r\n  /** turn on/off animation */\r\n  isAnimated = false;\r\n}\r\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { BsComponentRef } from 'bao-tran-angular/component-loader';\n\n@Injectable()\nexport class BsDropdownState {\n  direction: 'down' | 'up' = 'down';\n  autoClose: boolean;\n  insideClick: boolean;\n  isAnimated: boolean;\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  /**\n   * Content to be displayed as popover.\n   */\n  // tslint:disable:no-any\n  dropdownMenu: Promise<BsComponentRef<any>>;\n  resolveDropdownMenu: (componentRef: BsComponentRef<any>) => void;\n\n  constructor() {\n    this.dropdownMenu = new Promise(resolve => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\n}\n","import {\r\n  animate,\r\n  style,\r\n  AnimationMetadata\r\n} from '@angular/animations';\r\n\r\nexport const DROPDOWN_ANIMATION_TIMING = '220ms cubic-bezier(0, 0, 0.2, 1)';\r\n\r\nexport const dropdownAnimation: AnimationMetadata[] = [\r\n  style({ height: 0, overflow: 'hidden' }),\r\n  animate(\r\n    DROPDOWN_ANIMATION_TIMING,\r\n    style({ height: '*', overflow: 'hidden' })\r\n  )\r\n];\r\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\n\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { isBs3 } from 'bao-tran-angular/utils';\n\nimport { dropdownAnimation } from './dropdown-animations';\nimport { AnimationBuilder, AnimationFactory } from '@angular/animations';\n\n@Component({\n  selector: 'bs-dropdown-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    style: 'display:block;position: absolute;z-index: 1040'\n  },\n  template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [class.dropdown]=\"direction === 'down'\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content>\n    </div>\n  `\n})\nexport class BsDropdownContainerComponent implements OnDestroy {\n  isOpen = false;\n\n  private _factoryDropDownAnimation: AnimationFactory;\n\n  get direction(): 'down' | 'up' {\n    return this._state.direction;\n  }\n\n// tslint:disable-next-line:no-any\n  private _subscription: any;\n\n  constructor(\n    private _state: BsDropdownState,\n    private cd: ChangeDetectorRef,\n    private _renderer: Renderer2,\n    private _element: ElementRef,\n    _builder: AnimationBuilder\n  ) {\n    this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n\n    this._subscription = _state.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n      const dropdown = this._element.nativeElement.querySelector('.dropdown-menu');\n\n      this._renderer.addClass(this._element.nativeElement.querySelector('div'), 'open');\n\n      if (dropdown && !isBs3()) {\n        this._renderer.addClass(dropdown, 'show');\n\n        if (dropdown.classList.contains('dropdown-menu-right')) {\n          this._renderer.setStyle(dropdown, 'left', 'auto');\n          this._renderer.setStyle(dropdown, 'right', '0');\n        }\n        if (this.direction === 'up') {\n          this._renderer.setStyle(dropdown, 'top', 'auto');\n          this._renderer.setStyle(\n            dropdown,\n            'transform',\n            'translateY(-101%)'\n          );\n        }\n      }\n\n      if (dropdown && this._state.isAnimated) {\n        this._factoryDropDownAnimation.create(dropdown)\n          .play();\n      }\n\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    });\n  }\n\n  /** @internal */\n  _contains(el: Element): boolean {\n    return this._element.nativeElement.contains(el);\n  }\n\n  ngOnDestroy(): void {\n    this._subscription.unsubscribe();\n  }\n}\n","// tslint:disable:max-file-line-count\nimport {\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewContainerRef\n} from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { ComponentLoader, ComponentLoaderFactory, BsComponentRef } from 'bao-tran-angular/component-loader';\n\nimport { BsDropdownConfig } from './bs-dropdown.config';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownState } from './bs-dropdown.state';\nimport { BsDropdownMenuDirective } from './index';\nimport { isBs3 } from 'bao-tran-angular/utils';\nimport { AnimationBuilder, AnimationFactory } from '@angular/animations';\nimport { dropdownAnimation } from './dropdown-animations';\n\n@Directive({\n  selector: '[bsDropdown],[dropdown]',\n  exportAs: 'bs-dropdown',\n  providers: [BsDropdownState],\n  host: {\n    '[class.dropup]': 'dropup',\n    '[class.open]': 'isOpen',\n    '[class.show]': 'isOpen && isBs4'\n  }\n})\nexport class BsDropdownDirective implements OnInit, OnDestroy {\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() placement: string;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   */\n  @Input() container: string;\n\n  /**\n   * This attribute indicates that the dropdown should be opened upwards\n   */\n  @Input() dropup: boolean;\n\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n  @Input()\n  set autoClose(value: boolean) {\n    this._state.autoClose = value;\n  }\n\n  get autoClose(): boolean {\n    return this._state.autoClose;\n  }\n\n  /**\n   * Indicates that dropdown will be animated\n   */\n  @Input()\n  set isAnimated(value: boolean) {\n    this._state.isAnimated = value;\n  }\n\n  get isAnimated(): boolean {\n    return this._state.isAnimated;\n  }\n\n  /**\n   * This attribute indicates that the dropdown shouldn't close on inside click when autoClose is set to true\n   */\n  @Input()\n  set insideClick(value: boolean) {\n    this._state.insideClick = value;\n  }\n\n  get insideClick(): boolean {\n    return this._state.insideClick;\n  }\n\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n  @Input()\n  set isDisabled(value: boolean) {\n    this._isDisabled = value;\n    this._state.isDisabledChange.emit(value);\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled(): boolean {\n    return this._isDisabled;\n  }\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  @Input()\n  get isOpen(): boolean {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Emits an event when isOpen change\n   */\n  @Output() isOpenChange: EventEmitter<boolean>;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n  @Output() onShown: EventEmitter<boolean>;\n\n  /**\n   * Emits an event when the popover is hidden\n   */\n  @Output() onHidden: EventEmitter<boolean>;\n\n  get isBs4(): boolean {\n    return !isBs3();\n  }\n\n  private _dropdown: ComponentLoader<BsDropdownContainerComponent>;\n\n  private get _showInline(): boolean {\n    return !this.container;\n  }\n\n  // todo: move to component loader\n  private _isInlineOpen = false;\n\n  private _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\n  private _isDisabled: boolean;\n  private _subscriptions: Subscription[] = [];\n  private _isInited = false;\n  private _factoryDropDownAnimation: AnimationFactory;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    private _viewContainerRef: ViewContainerRef,\n    private _cis: ComponentLoaderFactory,\n    private _state: BsDropdownState,\n    private _config: BsDropdownConfig,\n    _builder: AnimationBuilder\n  ) {\n    // set initial dropdown state from config\n    this._state.autoClose = this._config.autoClose;\n    this._state.insideClick = this._config.insideClick;\n    this._state.isAnimated = this._config.isAnimated;\n\n    this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n\n    // create dropdown component loader\n    this._dropdown = this._cis\n      .createLoader<BsDropdownContainerComponent>(\n        this._elementRef,\n        this._viewContainerRef,\n        this._renderer\n      )\n      .provide({provide: BsDropdownState, useValue: this._state});\n\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    // attach DOM listeners\n    this._dropdown.listen({\n      // because of dropdown inline mode\n      outsideClick: false,\n      triggers: this.triggers,\n      show: () => this.show()\n    });\n\n    // toggle visibility on toggle element click\n    this._subscriptions.push(\n      this._state.toggleClick.subscribe((value: boolean) => this.toggle(value))\n    );\n\n    // hide dropdown if set disabled while opened\n    this._subscriptions.push(\n      this._state.isDisabledChange\n        .pipe(\n          filter((value: boolean) => value)\n        )\n        .subscribe((value: boolean) => this.hide())\n    );\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    if (this._showInline) {\n      if (!this._inlinedMenu) {\n        this._state.dropdownMenu.then(\n          (dropdownMenu: BsComponentRef<BsDropdownMenuDirective>) => {\n            this._dropdown.attachInline(\n              dropdownMenu.viewContainer,\n              dropdownMenu.templateRef\n            );\n            this._inlinedMenu = this._dropdown._inlineViewRef;\n\n            this.addBs4Polyfills();\n            this._renderer.addClass(this._inlinedMenu.rootNodes[0].parentNode, 'open');\n\n            this.playAnimation();\n          }\n        )\n        // swallow errors\n          .catch();\n      }\n      this.addBs4Polyfills();\n\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n      this._state.isOpenChange.emit(true);\n\n      this.playAnimation();\n\n      return;\n    }\n    this._state.dropdownMenu.then(dropdownMenu => {\n      // check direction in which dropdown should be opened\n      const _dropup =\n        this.dropup ||\n        (typeof this.dropup !== 'undefined' && this.dropup);\n      this._state.direction = _dropup ? 'up' : 'down';\n      const _placement = this.placement || (_dropup ? 'top start' : 'bottom start');\n\n      // show dropdown\n      this._dropdown\n        .attach(BsDropdownContainerComponent)\n        .to(this.container)\n        .position({attachment: _placement})\n        .show({\n          content: dropdownMenu.templateRef,\n          placement: _placement\n        });\n\n      this._state.isOpenChange.emit(true);\n    })\n    // swallow error\n      .catch();\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (this._showInline) {\n      this.removeShowClass();\n      this.removeDropupStyles();\n      this._isInlineOpen = false;\n      this.onHidden.emit(true);\n    } else {\n      this._dropdown.hide();\n    }\n\n    this._state.isOpenChange.emit(false);\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\n   */\n  toggle(value?: boolean): void {\n    if (this.isOpen || !value) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n\n  /** @internal */\n  _contains(event: any): boolean {\n    return this._elementRef.nativeElement.contains(event.target) ||\n      (this._dropdown.instance && this._dropdown.instance._contains(event.target));\n  }\n\n  ngOnDestroy(): void {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n    this._dropdown.dispose();\n  }\n\n  private addBs4Polyfills(): void {\n    if (!isBs3()) {\n      this.addShowClass();\n      this.checkRightAlignment();\n      this.addDropupStyles();\n    }\n  }\n\n  private playAnimation(): void {\n    if (this._state.isAnimated && this._inlinedMenu) {\n      setTimeout(() => {\n        this._factoryDropDownAnimation.create(this._inlinedMenu.rootNodes[0])\n          .play();\n      });\n    }\n  }\n\n  private addShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private removeShowClass(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  private checkRightAlignment(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains(\n        'dropdown-menu-right'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'left',\n        isRightAligned ? 'auto' : '0'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'right',\n        isRightAligned ? '0' : 'auto'\n      );\n    }\n  }\n\n  private addDropupStyles(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      // a little hack to not break support of bootstrap 4 beta\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'top',\n        this.dropup ? 'auto' : '100%'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'transform',\n        this.dropup ? 'translateY(-101%)' : 'translateY(0)'\n      );\n      this._renderer.setStyle(\n        this._inlinedMenu.rootNodes[0],\n        'bottom',\n        'auto'\n      );\n    }\n  }\n\n  private removeDropupStyles(): void {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'bottom');\n    }\n  }\n}\n","import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { BsDropdownState } from './bs-dropdown.state';\r\n\r\n@Directive({\r\n  selector: '[bsDropdownMenu],[dropdownMenu]',\r\n  exportAs: 'bs-dropdown-menu'\r\n})\r\nexport class BsDropdownMenuDirective {\r\n  // tslint:disable:no-any\r\n  constructor(\r\n    _state: BsDropdownState,\r\n    _viewContainer: ViewContainerRef,\r\n    _templateRef: TemplateRef<any>\r\n  ) {\r\n    _state.resolveDropdownMenu({\r\n      templateRef: _templateRef,\r\n      viewContainer: _viewContainer\r\n    });\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  ElementRef,\r\n  HostBinding,\r\n  HostListener,\r\n  OnDestroy,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { BsDropdownState } from './bs-dropdown.state';\r\nimport { BsDropdownDirective } from './bs-dropdown.directive';\r\n\r\n@Directive({\r\n  selector: '[bsDropdownToggle],[dropdownToggle]',\r\n  exportAs: 'bs-dropdown-toggle',\r\n  host: {\r\n    '[attr.aria-haspopup]': 'true'\r\n  }\r\n})\r\nexport class BsDropdownToggleDirective implements OnDestroy {\r\n  @HostBinding('attr.disabled') isDisabled: boolean = null;\r\n  @HostBinding('attr.aria-expanded') isOpen: boolean;\r\n\r\n  private _subscriptions: Subscription[] = [];\r\n  private _documentClickListener: Function;\r\n  private _escKeyUpListener: Function;\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    private _dropdown: BsDropdownDirective,\r\n    private _element: ElementRef,\r\n    private _renderer: Renderer2,\r\n    private _state: BsDropdownState\r\n  ) {\r\n    // sync is open value with state\r\n    this._subscriptions.push(\r\n      this._state.isOpenChange.subscribe(\r\n        (value: boolean) => {\r\n          this.isOpen = value;\r\n\r\n          if (value) {\r\n            this._documentClickListener = this._renderer.listen('document', 'click', (event: any) => {\r\n              if (this._state.autoClose && event.button !== 2 &&\r\n                !this._element.nativeElement.contains(event.target) &&\r\n                !(this._state.insideClick && this._dropdown._contains(event))\r\n              ) {\r\n                this._state.toggleClick.emit(false);\r\n                this._changeDetectorRef.detectChanges();\r\n              }\r\n            });\r\n\r\n            this._escKeyUpListener = this._renderer.listen(this._element.nativeElement, 'keyup.esc', () => {\r\n              if (this._state.autoClose) {\r\n                this._state.toggleClick.emit(false);\r\n                this._changeDetectorRef.detectChanges();\r\n              }\r\n            });\r\n          } else {\r\n            this._documentClickListener();\r\n            this._escKeyUpListener();\r\n          }\r\n        }\r\n      )\r\n    );\r\n\r\n    // populate disabled state\r\n    this._subscriptions.push(\r\n      this._state.isDisabledChange.subscribe(\r\n        (value: boolean) => (this.isDisabled = value || null)\r\n      )\r\n    );\r\n  }\r\n\r\n  @HostListener('click', [])\r\n  onClick(): void {\r\n    if (this.isDisabled) {\r\n      return;\r\n    }\r\n    this._state.toggleClick.emit(true);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this._documentClickListener) {\r\n      this._documentClickListener();\r\n    }\r\n\r\n    if (this._escKeyUpListener) {\r\n      this._escKeyUpListener();\r\n    }\r\n\r\n    for (const sub of this._subscriptions) {\r\n      sub.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentLoaderFactory } from 'bao-tran-angular/component-loader';\n\nimport { PositioningService } from 'bao-tran-angular/positioning';\nimport { BsDropdownContainerComponent } from './bs-dropdown-container.component';\nimport { BsDropdownMenuDirective } from './bs-dropdown-menu.directive';\nimport { BsDropdownToggleDirective } from './bs-dropdown-toggle.directive';\n\nimport { BsDropdownDirective } from './bs-dropdown.directive';\nimport { BsDropdownState } from './bs-dropdown.state';\n\n@NgModule({\n  declarations: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownContainerComponent,\n    BsDropdownDirective\n  ],\n  exports: [\n    BsDropdownMenuDirective,\n    BsDropdownToggleDirective,\n    BsDropdownDirective\n  ],\n  entryComponents: [BsDropdownContainerComponent]\n})\nexport class BsDropdownModule {\n  // tslint:disable-next-line:no-any\n  static forRoot(config?: any): ModuleWithProviders<BsDropdownModule> {\n    return {\n      ngModule: BsDropdownModule,\n      providers: [\n        ComponentLoaderFactory,\n        PositioningService,\n        BsDropdownState\n      ]\n    };\n  }\n}\n"],"sourceRoot":"webpack:///"}