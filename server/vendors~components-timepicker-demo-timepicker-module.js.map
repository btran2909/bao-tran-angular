{"version":3,"sources":["ngx-bootstrap/mini-ngrx/state.class.ts","ngx-bootstrap/mini-ngrx/store.class.ts","ngx-bootstrap/mini-ngrx/public_api.ts","ngx-bootstrap/timepicker/reducer/timepicker.actions.ts","ngx-bootstrap/timepicker/timepicker.utils.ts","ngx-bootstrap/timepicker/timepicker-controls.util.ts","ngx-bootstrap/timepicker/timepicker.config.ts","ngx-bootstrap/timepicker/reducer/timepicker.reducer.ts","ngx-bootstrap/timepicker/reducer/timepicker.store.ts","ngx-bootstrap/timepicker/timepicker.component.ts","ngx-bootstrap/timepicker/timepicker.module.ts"],"names":[],"mappings":"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","file":"vendors~components-timepicker-demo-timepicker-module.js","sourcesContent":["/**\n * @copyright ngrx\n */\nimport { Action, ActionReducer } from './index';\nimport { BehaviorSubject, Observable, queueScheduler } from 'rxjs';\nimport { observeOn, scan } from 'rxjs/operators';\n\n\nexport class MiniState<T> extends BehaviorSubject<T> {\n  constructor(\n    _initialState: T,\n    actionsDispatcher$: Observable<Action>,\n    reducer: ActionReducer<T>\n  ) {\n    super(_initialState);\n\n    const actionInQueue$ = actionsDispatcher$.pipe(\n      observeOn(queueScheduler)\n    );\n    const state$ = actionInQueue$.pipe(\n      scan((state: T, action: Action) => {\n        if (!action) {\n          return state;\n        }\n\n        return reducer(state, action);\n      },\n      _initialState\n    ));\n\n    state$.subscribe((value: T) => this.next(value));\n  }\n}\n","/**\n * @copyright ngrx\n */\nimport { Observable, Observer, Operator } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport { Action, ActionReducer } from './index';\n\nexport class MiniStore<T> extends Observable<T> implements Observer<Action> {\n  constructor(\n    private _dispatcher: Observer<Action>,\n    /* tslint:disable-next-line: no-any */\n    private _reducer: ActionReducer<any>,\n    /* tslint:disable-next-line: no-any */\n    state$: Observable<any>\n  ) {\n    super();\n\n    /* tslint:disable-next-line: deprecation */\n    this.source = state$;\n  }\n\n  select<R>(pathOrMapFn: (state: T) => R): Observable<R> {\n    /* tslint:disable-next-line: deprecation */\n    const mapped$: Observable<R> = this.source.pipe(map(pathOrMapFn));\n\n    return mapped$.pipe(distinctUntilChanged());\n  }\n\n  lift<R>(operator: Operator<T, R>): MiniStore<R> {\n    const store = new MiniStore<R>(this._dispatcher, this._reducer, this);\n    /* tslint:disable-next-line: deprecation */\n    store.operator = operator;\n\n    return store;\n  }\n\n  dispatch(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  next(action: Action) {\n    this._dispatcher.next(action);\n  }\n\n  /* tslint:disable-next-line: no-any */\n  error(err: any) {\n    this._dispatcher.error(err);\n  }\n\n  complete() {\n    /*noop*/\n  }\n}\n","export interface Action {\n  type: string;\n  /* tslint:disable-next-line: no-any */\n  payload?: any;\n}\n\nexport type ActionReducer<T> = (state: T, action: Action) => T;\n\nexport { MiniState } from './state.class';\nexport { MiniStore } from './store.class';\n","import { Injectable } from '@angular/core';\nimport { Action } from 'ngx-bootstrap/mini-ngrx';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  Time\n} from '../timepicker.models';\n\n@Injectable()\nexport class TimepickerActions {\n  static readonly WRITE_VALUE = '[timepicker] write value from ng model';\n  static readonly CHANGE_HOURS = '[timepicker] change hours';\n  static readonly CHANGE_MINUTES = '[timepicker] change minutes';\n  static readonly CHANGE_SECONDS = '[timepicker] change seconds';\n  static readonly SET_TIME_UNIT = '[timepicker] set time unit';\n  static readonly UPDATE_CONTROLS = '[timepicker] update controls';\n\n  writeValue(value: Date | string) {\n    return {\n      type: TimepickerActions.WRITE_VALUE,\n      payload: value\n    };\n  }\n\n  changeHours(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_HOURS,\n      payload: event\n    };\n  }\n\n  changeMinutes(event: TimeChangeEvent) {\n    return {\n      type: TimepickerActions.CHANGE_MINUTES,\n      payload: event\n    };\n  }\n\n  changeSeconds(event: TimeChangeEvent): Action {\n    return {\n      type: TimepickerActions.CHANGE_SECONDS,\n      payload: event\n    };\n  }\n\n  setTime(value: Time): Action {\n    return {\n      type: TimepickerActions.SET_TIME_UNIT,\n      payload: value\n    };\n  }\n\n  updateControls(value: TimepickerComponentState): Action {\n    return {\n      type: TimepickerActions.UPDATE_CONTROLS,\n      payload: value\n    };\n  }\n}\n","import { Time, TimepickerComponentState } from './timepicker.models';\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\n\nexport function isValidDate(value?: string | Date): boolean {\n  if (!value) {\n    return false;\n  }\n\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n\n  return true;\n}\n\nexport function isValidLimit(controls: TimepickerComponentState, newDate: Date): boolean {\n  if (controls.min && newDate < controls.min) {\n    return false;\n  }\n\n  if (controls.max && newDate > controls.max) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function toNumber(value: string | number): number {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, dex);\n}\n\nexport function isNumber(value: string | number): value is number {\n  return !isNaN(toNumber(value));\n}\n\nexport function parseHours(\n  value: string | number,\n  isPM = false\n): number {\n  const hour = toNumber(value);\n  if (\n    isNaN(hour) ||\n    hour < 0 ||\n    hour > (isPM ? hoursPerDayHalf : hoursPerDay)\n  ) {\n    return NaN;\n  }\n\n  return hour;\n}\n\nexport function parseMinutes(value: string | number): number {\n  const minute = toNumber(value);\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n\n  return minute;\n}\n\nexport function parseSeconds(value: string | number): number {\n  const seconds = toNumber(value);\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n\n  return seconds;\n}\n\nexport function parseTime(value: string | Date): Date {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n\n  return value;\n}\n\nexport function changeTime(value: Date, diff: Time): Date {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n\n  let hour = value.getHours();\n  let minutes = value.getMinutes();\n  let seconds = value.getSeconds();\n\n  if (diff.hour) {\n    hour = hour + toNumber(diff.hour);\n  }\n\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n\n  return createDate(value, hour, minutes, seconds);\n}\n\nexport function setTime(value: Date, opts: Time): Date {\n  let hour = parseHours(opts.hour);\n  const minute = parseMinutes(opts.minute);\n  const seconds = parseSeconds(opts.seconds) || 0;\n\n  if (opts.isPM && hour !== 12) {\n    hour += hoursPerDayHalf;\n  }\n\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n\n    return value;\n  }\n\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n\n  return createDate(value, hour, minute, seconds);\n}\n\nexport function createDate(\n  value: Date,\n  hours: number,\n  minutes: number,\n  seconds: number\n): Date {\n  const newValue = new Date(\n    value.getFullYear(),\n    value.getMonth(),\n    value.getDate(),\n    hours,\n    minutes,\n    seconds,\n    value.getMilliseconds()\n  );\n  // #3139 ensure date part remains unchanged\n  newValue.setFullYear(value.getFullYear());\n  newValue.setMonth(value.getMonth());\n  newValue.setDate(value.getDate());\n\n  return newValue;\n}\n\nexport function padNumber(value: number): string {\n  const _value = value.toString();\n  if (_value.length > 1) {\n    return _value;\n  }\n\n  return `0${_value}`;\n}\n\nexport function isHourInputValid(hours: string, isPM: boolean): boolean {\n  return !isNaN(parseHours(hours, isPM));\n}\n\nexport function isMinuteInputValid(minutes: string): boolean {\n  return !isNaN(parseMinutes(minutes));\n}\n\nexport function isSecondInputValid(seconds: string): boolean {\n  return !isNaN(parseSeconds(seconds));\n}\n\nexport function isInputLimitValid(diff: Time, max: Date, min: Date): boolean {\n  const newDate = setTime(new Date(), diff);\n\n  if (max && newDate > max) {\n    return false;\n  }\n\n  if (min && newDate < min) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isInputValid(\n  hours: string,\n  minutes = '0',\n  seconds = '0',\n  isPM: boolean\n): boolean {\n  return isHourInputValid(hours, isPM)\n    && isMinuteInputValid(minutes)\n    && isSecondInputValid(seconds);\n}\n","import { changeTime } from './timepicker.utils';\nimport {\n  TimeChangeEvent,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\n\nexport function canChangeValue(\n  state: TimepickerComponentState,\n  event?: TimeChangeEvent\n): boolean {\n  if (state.readonlyInput || state.disabled) {\n    return false;\n  }\n\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function canChangeHours(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeMinutes(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function canChangeSeconds(\n  event: TimeChangeEvent,\n  controls: TimepickerControls\n): boolean {\n  if (!event.step) {\n    return false;\n  }\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function getControlsValue(\n  state: TimepickerComponentState\n): TimepickerComponentState {\n  const {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  } = state;\n\n  return {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  };\n}\n\nexport function timepickerControls(\n  value: Date,\n  state: TimepickerComponentState\n): TimepickerControls {\n  const hoursPerDay = 24;\n  const hoursPerDayHalf = 12;\n  const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n  const res: TimepickerControls = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n\n    canToggleMeridian: true\n  };\n\n  if (!value) {\n    return res;\n  }\n\n  // compare dates\n  if (max) {\n    const _newHour = changeTime(value, { hour: hourStep });\n    res.canIncrementHours = max > _newHour && (value.getHours() + hourStep) < hoursPerDay;\n\n    if (!res.canIncrementHours) {\n      const _newMinutes = changeTime(value, { minute: minuteStep });\n      res.canIncrementMinutes = showSeconds\n        ? max > _newMinutes\n        : max >= _newMinutes;\n    }\n\n    if (!res.canIncrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: secondsStep });\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n\n    if (value.getHours() < hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\n    }\n  }\n\n  if (min) {\n    const _newHour = changeTime(value, { hour: -hourStep });\n    res.canDecrementHours = min < _newHour;\n\n    if (!res.canDecrementHours) {\n      const _newMinutes = changeTime(value, { minute: -minuteStep });\n      res.canDecrementMinutes = showSeconds\n        ? min < _newMinutes\n        : min <= _newMinutes;\n    }\n\n    if (!res.canDecrementMinutes) {\n      const _newSeconds = changeTime(value, { seconds: -secondsStep });\n      res.canDecrementSeconds = min <= _newSeconds;\n    }\n\n    if (value.getHours() >= hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\n    }\n  }\n\n  return res;\n}\n","import { Injectable } from '@angular/core';\n\n/** Provides default configuration values for timepicker */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimepickerConfig {\n  /** hours change step */\n  hourStep = 1;\n  /** minutes change step */\n  minuteStep = 5;\n  /** seconds changes step */\n  secondsStep = 10;\n  /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n  showMeridian = true;\n  /** meridian labels based on locale */\n  meridians = ['AM', 'PM'];\n  /** if true hours and minutes fields will be readonly */\n  readonlyInput = false;\n  /** if true hours and minutes fields will be disabled */\n  disabled = false;\n  /** if true scroll inside hours and minutes inputs will change time */\n  mousewheel = true;\n  /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n  arrowkeys = true;\n  /** if true spinner arrows above and below the inputs will be shown */\n  showSpinners = true;\n  /** show seconds in timepicker */\n  showSeconds = false;\n  /** show minutes in timepicker */\n  showMinutes = true;\n  /** minimum time user can select */\n  min: Date;\n  /** maximum time user can select */\n  max: Date;\n  /** placeholder for hours field in timepicker */\n  hoursPlaceholder = 'HH';\n  /** placeholder for minutes field in timepicker */\n  minutesPlaceholder = 'MM';\n  /** placeholder for seconds field in timepicker */\n  secondsPlaceholder = 'SS';\n  /** hours aria label */\n  ariaLabelHours = 'hours';\n  /** minutes aria label */\n  ariaLabelMinutes = 'minutes';\n  /** seconds aria label */\n  ariaLabelSeconds = 'seconds';\n}\n","import { Action } from 'ngx-bootstrap/mini-ngrx';\nimport {\n  canChangeHours,\n  canChangeMinutes,\n  canChangeSeconds,\n  canChangeValue,\n  timepickerControls\n} from '../timepicker-controls.util';\nimport { TimepickerConfig } from '../timepicker.config';\nimport {\n  TimepickerComponentState,\n  TimepickerControls\n} from '../timepicker.models';\nimport { changeTime, setTime, isValidLimit } from '../timepicker.utils';\nimport { TimepickerActions } from './timepicker.actions';\n\nexport class TimepickerState {\n  value: Date;\n  config: TimepickerComponentState;\n  controls: TimepickerControls;\n}\n\nexport const initialState: TimepickerState = {\n  value: null,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n\n    canToggleMeridian: true\n  }\n};\n\n// tslint:disable-next-line:cyclomatic-complexity\nexport function timepickerReducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE: {\n      return Object.assign({}, state, { value: action.payload });\n    }\n\n    case TimepickerActions.CHANGE_HOURS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeHours(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { hour: action.payload.step });\n\n      if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n      }\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_MINUTES: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeMinutes(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, { minute: action.payload.step });\n\n      if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n        return state;\n      }\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.CHANGE_SECONDS: {\n      if (\n        !canChangeValue(state.config, action.payload) ||\n        !canChangeSeconds(action.payload, state.controls)\n      ) {\n        return state;\n      }\n\n      const _newTime = changeTime(state.value, {\n        seconds: action.payload.step\n      });\n\n      if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n        return state;\n      }\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.SET_TIME_UNIT: {\n      if (!canChangeValue(state.config)) {\n        return state;\n      }\n\n      const _newTime = setTime(state.value, action.payload);\n\n      return Object.assign({}, state, { value: _newTime });\n    }\n\n    case TimepickerActions.UPDATE_CONTROLS: {\n      const _newControlsState = timepickerControls(state.value, action.payload);\n      const _newState: TimepickerState = {\n        value: state.value,\n        config: action.payload,\n        controls: _newControlsState\n      };\n\n      if (state.config.showMeridian !== _newState.config.showMeridian) {\n        if (state.value) {\n          _newState.value = new Date(state.value);\n        }\n      }\n\n      return Object.assign({}, state, _newState);\n    }\n\n    default:\n      return state;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  timepickerReducer,\n  TimepickerState,\n  initialState\n} from './timepicker.reducer';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Action, MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\n\n@Injectable()\nexport class TimepickerStore extends MiniStore<TimepickerState> {\n  constructor() {\n    const _dispatcher = new BehaviorSubject<Action>({\n      type: '[mini-ngrx] dispatcher init'\n    });\n    const state = new MiniState<TimepickerState>(\n      initialState,\n      _dispatcher,\n      timepickerReducer\n    );\n    super(_dispatcher, timepickerReducer, state);\n  }\n}\n","/* tslint:disable:no-forward-ref max-file-line-count */\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges, ViewEncapsulation\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerStore } from './reducer/timepicker.store';\nimport { getControlsValue } from './timepicker-controls.util';\nimport { TimepickerConfig } from './timepicker.config';\n\nimport {\n  TimeChangeSource,\n  TimepickerComponentState,\n  TimepickerControls\n} from './timepicker.models';\n\nimport {\n  isValidDate,\n  padNumber,\n  parseTime,\n  isInputValid,\n  isHourInputValid,\n  isMinuteInputValid,\n  isSecondInputValid,\n  isInputLimitValid\n} from './timepicker.utils';\n\nimport { Subscription } from 'rxjs';\n\nimport { ControlValueAccessorModel } from './models';\n\nexport const TIMEPICKER_CONTROL_VALUE_ACCESSOR: ControlValueAccessorModel = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => TimepickerComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'timepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore],\n  templateUrl: './timepicker.component.html',\n  styles: [`\n    .bs-chevron {\n      border-style: solid;\n      display: block;\n      width: 9px;\n      height: 9px;\n      position: relative;\n      border-width: 3px 0px 0 3px;\n    }\n\n    .bs-chevron-up {\n      -webkit-transform: rotate(45deg);\n      transform: rotate(45deg);\n      top: 2px;\n    }\n\n    .bs-chevron-down {\n      -webkit-transform: rotate(-135deg);\n      transform: rotate(-135deg);\n      top: -2px;\n    }\n\n    .bs-timepicker-field {\n      width: 50px;\n      padding: .375rem .55rem;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TimepickerComponent\n  implements ControlValueAccessor,\n    TimepickerComponentState,\n    TimepickerControls,\n    OnChanges,\n    OnDestroy {\n  /** hours change step */\n  @Input() hourStep: number;\n  /** minutes change step */\n  @Input() minuteStep: number;\n  /** seconds change step */\n  @Input() secondsStep: number;\n  /** if true hours and minutes fields will be readonly */\n  @Input() readonlyInput: boolean;\n  /** if true hours and minutes fields will be disabled */\n  @Input() disabled: boolean;\n  /** if true scroll inside hours and minutes inputs will change time */\n  @Input() mousewheel: boolean;\n  /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n  @Input() arrowkeys: boolean;\n  /** if true spinner arrows above and below the inputs will be shown */\n  @Input() showSpinners: boolean;\n  /** if true meridian button will be shown */\n  @Input() showMeridian: boolean;\n  /** show minutes in timepicker */\n  @Input() showMinutes: boolean;\n  /** show seconds in timepicker */\n  @Input() showSeconds: boolean;\n  /** meridian labels based on locale */\n  @Input() meridians: string[];\n  /** minimum time user can select */\n  @Input() min: Date;\n  /** maximum time user can select */\n  @Input() max: Date;\n  /** placeholder for hours field in timepicker */\n  @Input() hoursPlaceholder: string;\n  /** placeholder for minutes field in timepicker */\n  @Input() minutesPlaceholder: string;\n  /** placeholder for seconds field in timepicker */\n  @Input() secondsPlaceholder: string;\n\n  /** emits true if value is a valid date */\n  @Output() isValid = new EventEmitter<boolean>();\n\n  // ui variables\n  hours: string;\n  minutes: string;\n  seconds: string;\n  meridian: string;\n\n  /** @deprecated - please use `isEditable` instead */\n  get isSpinnersVisible(): boolean {\n    return this.showSpinners && !this.readonlyInput;\n  }\n\n  get isEditable(): boolean {\n    return !(this.readonlyInput || this.disabled);\n  }\n\n  // min\\max validation for input fields\n  invalidHours = false;\n  invalidMinutes = false;\n  invalidSeconds = false;\n\n  // aria-label variables\n  labelHours: string;\n  labelMinutes: string;\n  labelSeconds: string;\n\n  // time picker controls state\n  canIncrementHours: boolean;\n  canIncrementMinutes: boolean;\n  canIncrementSeconds: boolean;\n\n  canDecrementHours: boolean;\n  canDecrementMinutes: boolean;\n  canDecrementSeconds: boolean;\n\n  canToggleMeridian: boolean;\n\n  // control value accessor methods\n  // tslint:disable-next-line:no-any\n  onChange = Function.prototype;\n  // tslint:disable-next-line:no-any\n  onTouched = Function.prototype;\n\n  timepickerSub: Subscription;\n\n  constructor(\n    _config: TimepickerConfig,\n    private _cd: ChangeDetectorRef,\n    private _store: TimepickerStore,\n    private _timepickerActions: TimepickerActions\n  ) {\n    Object.assign(this, _config);\n\n    this.timepickerSub = _store\n      .select(state => state.value)\n      .subscribe((value: Date) => {\n        // update UI values if date changed\n        this._renderTime(value);\n        this.onChange(value);\n\n        this._store.dispatch(\n          this._timepickerActions.updateControls(getControlsValue(this))\n        );\n      });\n\n    _store\n      .select(state => state.controls)\n      .subscribe((controlsState: TimepickerControls) => {\n        this.isValid.emit(isInputValid(this.hours, this.minutes, this.seconds, this.isPM()));\n        Object.assign(this, controlsState);\n        _cd.markForCheck();\n      });\n  }\n\n  resetValidation(): void {\n    this.invalidHours = false;\n    this.invalidMinutes = false;\n    this.invalidSeconds = false;\n  }\n\n  isPM(): boolean {\n    return this.showMeridian && this.meridian === this.meridians[1];\n  }\n\n  prevDef($event: Event) {\n    $event.preventDefault();\n  }\n\n  wheelSign($event: WheelEventInit): number {\n    return Math.sign($event.deltaY) * -1;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this._store.dispatch(\n      this._timepickerActions.updateControls(getControlsValue(this))\n    );\n  }\n\n  changeHours(step: number, source: TimeChangeSource = ''): void {\n    this.resetValidation();\n    this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n  }\n\n  changeMinutes(step: number, source: TimeChangeSource = ''): void {\n    this.resetValidation();\n    this._store.dispatch(\n      this._timepickerActions.changeMinutes({ step, source })\n    );\n  }\n\n  changeSeconds(step: number, source: TimeChangeSource = ''): void {\n    this.resetValidation();\n    this._store.dispatch(\n      this._timepickerActions.changeSeconds({ step, source })\n    );\n  }\n\n  updateHours(hours: string): void {\n    this.resetValidation();\n    this.hours = hours;\n\n    const isValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n\n    if (!isValid) {\n      this.invalidHours = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  updateMinutes(minutes: string) {\n    this.resetValidation();\n    this.minutes = minutes;\n\n    const isValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n\n    if (!isValid) {\n      this.invalidMinutes = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  updateSeconds(seconds: string) {\n    this.resetValidation();\n    this.seconds = seconds;\n\n    const isValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n\n    if (!isValid) {\n      this.invalidSeconds = true;\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._updateTime();\n  }\n\n  isValidLimit(): boolean {\n    return isInputLimitValid({\n      hour: this.hours,\n      minute: this.minutes,\n      seconds: this.seconds,\n      isPM: this.isPM()\n    }, this.max, this.min);\n  }\n\n  _updateTime() {\n    const _seconds = this.showSeconds ? this.seconds : void 0;\n    const _minutes = this.showMinutes ? this.minutes : void 0;\n    if (!isInputValid(this.hours, _minutes, _seconds, this.isPM())) {\n      this.isValid.emit(false);\n      this.onChange(null);\n\n      return;\n    }\n\n    this._store.dispatch(\n      this._timepickerActions.setTime({\n        hour: this.hours,\n        minute: this.minutes,\n        seconds: this.seconds,\n        isPM: this.isPM()\n      })\n    );\n  }\n\n  toggleMeridian(): void {\n    if (!this.showMeridian || !this.isEditable) {\n      return;\n    }\n\n    const _hoursPerDayHalf = 12;\n    this._store.dispatch(\n      this._timepickerActions.changeHours({\n        step: _hoursPerDayHalf,\n        source: ''\n      })\n    );\n  }\n\n  /**\n   * Write a new value to the element.\n   */\n  writeValue(obj: string | null | undefined | Date): void {\n    if (isValidDate(obj)) {\n      this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n    } else if (obj == null) {\n      this._store.dispatch(this._timepickerActions.writeValue(null));\n    }\n  }\n\n  /**\n   * Set the function to be called when the control receives a change event.\n   */\n  // tslint:disable-next-line:no-any\n  registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Set the function to be called when the control receives a touch event.\n   */\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * This function is called when the control status changes to or from \"disabled\".\n   * Depending on the value, it will enable or disable the appropriate DOM element.\n   *\n   * @param isDisabled\n   */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._cd.markForCheck();\n  }\n\n  ngOnDestroy(): void {\n    this.timepickerSub.unsubscribe();\n  }\n\n  private _renderTime(value: string | Date): void {\n    if (!isValidDate(value)) {\n      this.hours = '';\n      this.minutes = '';\n      this.seconds = '';\n      this.meridian = this.meridians[0];\n\n      return;\n    }\n\n    const _value = parseTime(value);\n    const _hoursPerDayHalf = 12;\n    let _hours = _value.getHours();\n\n    if (this.showMeridian) {\n      this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n      _hours = _hours % _hoursPerDayHalf;\n      // should be 12 PM, not 00 PM\n      if (_hours === 0) {\n        _hours = _hoursPerDayHalf;\n      }\n    }\n\n    this.hours = padNumber(_hours);\n    this.minutes = padNumber(_value.getMinutes());\n    this.seconds = padNumber(_value.getUTCSeconds());\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TimepickerComponent } from './timepicker.component';\nimport { TimepickerActions } from './reducer/timepicker.actions';\nimport { TimepickerStore } from './reducer/timepicker.store';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TimepickerComponent],\n  exports: [TimepickerComponent]\n})\nexport class TimepickerModule {\n  static forRoot(): ModuleWithProviders<TimepickerModule> {\n    return {\n      ngModule: TimepickerModule,\n      providers: [TimepickerActions, TimepickerStore]\n    };\n  }\n}\n"],"sourceRoot":"webpack:///"}