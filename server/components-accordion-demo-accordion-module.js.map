{"version":3,"sources":["webpack:///./demo/src/app/components/+accordion/demos/basic/basic.html?ff89","./demo/src/app/components/+accordion/accordion-section.component.ts","./demo/src/app/components/+accordion/accordion-section.components.html","webpack:///./demo/src/app/components/+accordion/demos/one-at-a-time/one-at-a-time.ts?d3ad","./demo/src/app/components/+accordion/demos/animated/animated.ts","./demo/src/app/components/+accordion/demos/animated/animated.html","./demo/src/app/components/+accordion/demos/manual-toggle/manual-toggle.ts","./demo/src/app/components/+accordion/demos/manual-toggle/manual-toggle.html","webpack:///./demo/src/app/components/+accordion/demos/config/config.html?f694","./demo/src/app/components/+accordion/accordion-section.list.ts","./demo/src/app/components/+accordion/demos/disabled/disabled.ts","./demo/src/app/components/+accordion/demos/disabled/disabled.html","webpack:///./demo/src/app/components/+accordion/demos/opened/opened.ts?0cfb","webpack:///./demo/src/app/components/+accordion/demos/manual-toggle/manual-toggle.html?170b","webpack:///./demo/src/app/components/+accordion/demos/opened/opened.html?18cc","./demo/src/app/components/+accordion/demo-accordion.routes.ts","webpack:///./demo/src/app/components/+accordion/demos/dynamic-body/dynamic-body.ts?23c0","webpack:///./demo/src/app/components/+accordion/demos/basic/basic.ts?22ca","webpack:///./demo/src/app/components/+accordion/demos/manual-toggle/manual-toggle.ts?2607","./demo/src/app/components/+accordion/docs/usage.md","webpack:///./demo/src/app/components/+accordion/demos/config/config.ts?33c1","./demo/src/app/components/+accordion/demos/styling/styling.ts","./demo/src/app/components/+accordion/demos/styling/styling.html","webpack:///./demo/src/app/components/+accordion/demos/styling/styling.html?45e5","webpack:///./demo/src/app/components/+accordion/demos/dymanic/dynamic.ts?4fe1","./demo/src/app/components/+accordion/demos/config/config.ts","./demo/src/app/components/+accordion/demos/config/config.html","./demo/src/app/components/+accordion/demos/index.ts","webpack:///./demo/src/app/components/+accordion/demos/open-event/open-event.html?6060","webpack:///./demo/src/app/components/+accordion/demos/open-event/open-event.ts?68e4","./demo/src/app/components/+accordion/demos/dynamic-body/dynamic-body.ts","./demo/src/app/components/+accordion/demos/dynamic-body/dynamic-body.html","webpack:///./demo/src/app/components/+accordion/demos/animated/animated.html?81bf","./demo/src/app/components/+accordion/demos/basic/basic.ts","./demo/src/app/components/+accordion/demos/basic/basic.html","webpack:///./demo/src/app/components/+accordion/demos/custom-html/custom-html.ts?8c01","webpack:///./demo/src/app/components/+accordion/demos/animated/animated.ts?968a","webpack:///./demo/src/app/components/+accordion/demos/styling/styling.ts?9887","./demo/src/app/components/+accordion/demo-accordion.module.ts","./demo/src/app/components/+accordion/demos/dymanic/dynamic.ts","./demo/src/app/components/+accordion/demos/dymanic/dynamic.html","./demo/src/app/components/+accordion/demos/open-event/open-event.ts","./demo/src/app/components/+accordion/demos/open-event/open-event.html","webpack:///./demo/src/app/components/+accordion/demos/dymanic/dynamic.html?ae5f","webpack:///./demo/src/app/components/+accordion/demos/one-at-a-time/one-at-a-time.html?aef3","./demo/src/app/components/+accordion/demos/opened/opened.ts","./demo/src/app/components/+accordion/demos/opened/opened.html","webpack:///./demo/src/app/components/+accordion/demos/disabled/disabled.ts?b2bd","webpack:///./demo/src/app/components/+accordion/demos/custom-html/custom-html.html?ba45","webpack:///./demo/src/app/components/+accordion/demos/dynamic-body/dynamic-body.html?ba71","webpack:///./demo/src/app/components/+accordion/demos/disabled/disabled.html?c350","./demo/src/app/components/+accordion/demos/custom-html/custom-html.ts","./demo/src/app/components/+accordion/demos/custom-html/custom-html.html","./demo/src/app/components/+accordion/demos/one-at-a-time/one-at-a-time.ts","./demo/src/app/components/+accordion/demos/one-at-a-time/one-at-a-time.html"],"names":[],"mappings":"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","file":"components-accordion-demo-accordion-module.js","sourcesContent":["export default \"<accordion>\\r\\n  <accordion-group heading=\\\"Static Header\\\">\\r\\n    This content is straight in the template.\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Another group\\\">\\r\\n    <p>Some content</p>\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Another group\\\">\\r\\n    <p>Some content</p>\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Another group\\\">\\r\\n    <p>Some content</p>\\r\\n  </accordion-group>\\r\\n</accordion>\\r\\n\";","// todo: add more samples https://jqueryui.com/accordion/#default\n// todo: add more samples https://getbootstrap.com/docs/3.3/components/#panels-alternatives\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { demoComponentContent } from './accordion-section.list';\nimport { ContentSection } from '../../docs/models/content-section.model';\n\n// webpack html imports\n@Component({\n  selector: 'accordion-section',\n  templateUrl: './accordion-section.components.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AccordionSectionComponent {\n  name = 'Accordion';\n  src = 'https://github.com/valor-software/bao-tran-angular/tree/development/src/accordion';\n  componentContent: ContentSection[] = demoComponentContent;\n}\n","<demo-section [name]=\"name\" [src]=\"src\" [componentContent]=\"componentContent\">\n  <p>Displays collapsible content panels for presenting information in a limited amount of space</p>\n  <p>The <strong>accordion component</strong> builds on top of the collapse directive to provide a list\n  of items, with collapsible bodies that are collapsed or expanded by clicking on the item's header.</p>\n  <p>The easiest way to add an accordion component to your app (will be added to the root module)</p>\n\n  <docs-section [content]=\"componentContent\"></docs-section>\n</demo-section>\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-accordion-one-time',\\r\\n  templateUrl: './one-at-a-time.html'\\r\\n})\\r\\nexport class DemoAccordionOneAtATimeComponent {\\r\\n  oneAtATime: boolean = true;\\r\\n}\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-accordion-animation',\r\n  templateUrl: './animated.html'\r\n})\r\nexport class DemoAccordionAnimatedComponent {}\r\n","<accordion [isAnimated]=\"true\">\r\n  <accordion-group heading=\"Static Header\">\r\n    This content is straight in the template.\r\n  </accordion-group>\r\n  <accordion-group heading=\"Another group\">\r\n    <p>Some content</p>\r\n  </accordion-group>\r\n  <accordion-group heading=\"Another group\">\r\n    <p>Some content</p>\r\n  </accordion-group>\r\n  <accordion-group heading=\"Another group\">\r\n    <p>Some content</p>\r\n  </accordion-group>\r\n</accordion>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-accordion-manual-toggle',\r\n  templateUrl: './manual-toggle.html'\r\n})\r\nexport class DemoAccordionManualToggleComponent {\r\n  isOpen = true;\r\n}\r\n","<p>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm\"\r\n          (click)=\"isOpen = !isOpen\">Toggle last panel\r\n  </button>\r\n</p>\r\n\r\n<accordion>\r\n  <accordion-group heading=\"Content 1\">\r\n    <p>accordion 1</p>\r\n  </accordion-group>\r\n  <accordion-group heading=\"Content 2\">\r\n    <p>accordion 2</p>\r\n  </accordion-group>\r\n  <accordion-group [isOpen]=\"isOpen\" heading=\"Last panel\">\r\n    <p>accordion 3</p>\r\n  </accordion-group>\r\n</accordion>\r\n","export default \"<accordion [isAnimated]=\\\"true\\\">\\r\\n  <accordion-group heading=\\\"Header\\\">\\r\\n    This content is straight in the template.\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Content 1\\\">\\r\\n    <p>Content 1</p>\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Content 2\\\">\\r\\n    <p>Content 2</p>\\r\\n  </accordion-group>\\r\\n</accordion>\\r\\n\";","import { DemoAccordionAnimatedComponent } from './demos/animated/animated';\r\nimport { DemoAccordionBasicComponent } from './demos/basic/basic';\r\nimport { DemoAccordionConfigComponent } from './demos/config/config';\r\nimport { DemoAccordionCustomHTMLComponent } from './demos/custom-html/custom-html';\r\nimport { DemoAccordionDisabledComponent } from './demos/disabled/disabled';\r\nimport { DemoAccordionDynamicComponent } from './demos/dymanic/dynamic';\r\nimport { DemoAccordionManualToggleComponent } from './demos/manual-toggle/manual-toggle';\r\nimport { DemoAccordionOneAtATimeComponent } from './demos/one-at-a-time/one-at-a-time';\r\nimport { DemoAccordionOpenEventComponent } from './demos/open-event/open-event';\r\nimport { DemoAccordionStylingComponent } from './demos/styling/styling';\r\n\r\nimport { ContentSection } from '../../docs/models/content-section.model';\r\nimport { DemoTopSectionComponent } from '../../docs/demo-section-components/demo-top-section/index';\r\nimport { ExamplesComponent } from '../../docs/demo-section-components/demo-examples-section/index';\r\nimport { ApiSectionsComponent } from '../../docs/demo-section-components/demo-api-section/index';\r\n\r\nimport {\r\n  NgApiDocComponent,\r\n  NgApiDocConfigComponent\r\n} from '../../docs/api-docs';\r\nimport { DemoAccordionOpenedComponent } from './demos/opened/opened';\r\nimport { DemoAccordionDynamicBodyComponent } from './demos/dynamic-body/dynamic-body';\r\n\r\nexport const demoComponentContent: ContentSection[] = [\r\n  {\r\n    name: 'Usage',\r\n    anchor: 'usage',\r\n    outlet: DemoTopSectionComponent,\r\n    content: {\r\n      doc: require('!!raw-loader!./docs/usage.md')\r\n    }\r\n  },\r\n  {\r\n    name: 'Examples',\r\n    anchor: 'examples',\r\n    outlet: ExamplesComponent,\r\n    content: [\r\n      {\r\n        title: 'Basic',\r\n        anchor: 'basic-accordion',\r\n        description: `<p>Click headers to expand/collapse content that is broken into logical sections, much\r\n          like tabs.</p>`,\r\n        component: require('!!raw-loader!./demos/basic/basic'),\r\n        html: require('!!raw-loader!./demos/basic/basic.html'),\r\n        outlet: DemoAccordionBasicComponent\r\n      },\r\n      {\r\n        title: 'With animation',\r\n        anchor: 'animated-accordion',\r\n        description: `<p>Use input property or config property <code>isAnimated</code> to enable/disable animation</p>`,\r\n        component: require('!!raw-loader!./demos/animated/animated'),\r\n        html: require('!!raw-loader!./demos/animated/animated.html'),\r\n        outlet: DemoAccordionAnimatedComponent\r\n      },\r\n      {\r\n        title: 'Group opening event',\r\n        anchor: 'open-event',\r\n        description: `<p>Accordion with <code>isOpenChange</code> event listener.</p>`,\r\n        component: require('!!raw-loader!./demos/open-event/open-event'),\r\n        html: require('!!raw-loader!./demos/open-event/open-event.html'),\r\n        outlet: DemoAccordionOpenEventComponent\r\n      },\r\n      {\r\n        title: 'Custom HTML',\r\n        anchor: 'custom-html',\r\n        component: require('!!raw-loader!./demos/custom-html/custom-html'),\r\n        html: require('!!raw-loader!./demos/custom-html/custom-html.html'),\r\n        outlet: DemoAccordionCustomHTMLComponent\r\n      },\r\n      {\r\n        title: 'Disabled',\r\n        anchor: 'disabled',\r\n        component: require('!!raw-loader!./demos/disabled/disabled'),\r\n        html: require('!!raw-loader!./demos/disabled/disabled.html'),\r\n        outlet: DemoAccordionDisabledComponent\r\n      },\r\n      {\r\n        title: 'Initially opened',\r\n        anchor: 'opened',\r\n        component: require('!!raw-loader!./demos/opened/opened'),\r\n        html: require('!!raw-loader!./demos/opened/opened.html'),\r\n        outlet: DemoAccordionOpenedComponent\r\n      },\r\n      {\r\n        title: 'Dynamic accordion',\r\n        anchor: 'dynamic-accordion',\r\n        component: require('!!raw-loader!./demos/dymanic/dynamic'),\r\n        html: require('!!raw-loader!./demos/dymanic/dynamic.html'),\r\n        outlet: DemoAccordionDynamicComponent\r\n      },\r\n      {\r\n        title: 'Dynamic body content',\r\n        anchor: 'dynamic-body',\r\n        component: require('!!raw-loader!./demos/dynamic-body/dynamic-body'),\r\n        html: require('!!raw-loader!./demos/dynamic-body/dynamic-body.html'),\r\n        outlet: DemoAccordionDynamicBodyComponent\r\n      },\r\n      {\r\n        title: 'Manual toggle',\r\n        anchor: 'manual-toggle',\r\n        component: require('!!raw-loader!./demos/manual-toggle/manual-toggle'),\r\n        html: require('!!raw-loader!./demos/manual-toggle/manual-toggle.html'),\r\n        outlet: DemoAccordionManualToggleComponent\r\n      },\r\n      {\r\n        title: 'Open only one at a time',\r\n        anchor: 'one-time',\r\n        component: require('!!raw-loader!./demos/one-at-a-time/one-at-a-time'),\r\n        html: require('!!raw-loader!./demos/one-at-a-time/one-at-a-time.html'),\r\n        outlet: DemoAccordionOneAtATimeComponent\r\n      },\r\n      {\r\n        title: 'Styling',\r\n        anchor: 'styling',\r\n        component: require('!!raw-loader!./demos/styling/styling'),\r\n        html: require('!!raw-loader!./demos/styling/styling.html'),\r\n        outlet: DemoAccordionStylingComponent\r\n      },\r\n      {\r\n        title: 'Configuring defaults',\r\n        anchor: 'config',\r\n        component: require('!!raw-loader!./demos/config/config'),\r\n        html: require('!!raw-loader!./demos/config/config.html'),\r\n        outlet: DemoAccordionConfigComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'API Reference',\r\n    anchor: 'api-reference',\r\n    outlet: ApiSectionsComponent,\r\n    content: [\r\n      {\r\n        title: 'AccordionComponent',\r\n        anchor: 'AccordionComponent',\r\n        outlet: NgApiDocComponent\r\n      },\r\n      {\r\n        title: 'AccordionPanelComponent',\r\n        anchor: 'AccordionPanelComponent',\r\n        outlet: NgApiDocComponent\r\n      },\r\n      {\r\n        title: 'AccordionConfig',\r\n        anchor: 'AccordionConfig',\r\n        outlet: NgApiDocConfigComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-accordion-disabled',\r\n  templateUrl: './disabled.html'\r\n})\r\nexport class DemoAccordionDisabledComponent {\r\n  isFirstDisabled = false;\r\n}\r\n","<p>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"isFirstDisabled = !isFirstDisabled\">\r\n    Enable / Disable first panel\r\n  </button>\r\n</p>\r\n\r\n<accordion>\r\n  <accordion-group heading=\"Static Header\"\r\n                   [isDisabled]=\"isFirstDisabled\">\r\n    This content is straight in the template.\r\n  </accordion-group>\r\n  <accordion-group heading=\"Content 1\">\r\n    <p>accordion 1</p>\r\n  </accordion-group>\r\n  <accordion-group heading=\"Content 2\">\r\n    <p>accordion 2</p>\r\n  </accordion-group>\r\n</accordion>\r\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-accordion-opened',\\r\\n  templateUrl: './opened.html'\\r\\n})\\r\\nexport class DemoAccordionOpenedComponent {\\r\\n  isFirstOpen = true;\\r\\n}\\r\\n\";","export default \"<p>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\"\\r\\n          (click)=\\\"isOpen = !isOpen\\\">Toggle last panel\\r\\n  </button>\\r\\n</p>\\r\\n\\r\\n<accordion>\\r\\n  <accordion-group heading=\\\"Content 1\\\">\\r\\n    <p>accordion 1</p>\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Content 2\\\">\\r\\n    <p>accordion 2</p>\\r\\n  </accordion-group>\\r\\n  <accordion-group [isOpen]=\\\"isOpen\\\" heading=\\\"Last panel\\\">\\r\\n    <p>accordion 3</p>\\r\\n  </accordion-group>\\r\\n</accordion>\\r\\n\";","export default \"<accordion>\\r\\n  <accordion-group heading=\\\"Content 1\\\">\\r\\n    <p>accordion 1</p>\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Initially expanded\\\"\\r\\n                   [isOpen]=\\\"isFirstOpen\\\">\\r\\n    This content is straight in the template.\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Content 2\\\">\\r\\n    <p>accordion 3</p>\\r\\n  </accordion-group>\\r\\n</accordion>\\r\\n\";","import { AccordionSectionComponent } from './accordion-section.component';\r\n\r\nexport const routes = [{ path: '', component: AccordionSectionComponent }];\r\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-accordion-dynamic-body',\\r\\n  templateUrl: './dynamic-body.html'\\r\\n})\\r\\nexport class DemoAccordionDynamicBodyComponent {\\r\\n  items = ['Item 1', 'Item 2', 'Item 3'];\\r\\n\\r\\n  addItem(): void {\\r\\n    this.items.push(`Item ${this.items.length + 1}`);\\r\\n  }\\r\\n}\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-accordion-basic',\\r\\n  templateUrl: './basic.html'\\r\\n})\\r\\nexport class DemoAccordionBasicComponent {}\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-accordion-manual-toggle',\\r\\n  templateUrl: './manual-toggle.html'\\r\\n})\\r\\nexport class DemoAccordionManualToggleComponent {\\r\\n  isOpen = true;\\r\\n}\\r\\n\";","export default \"import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\\n\\n// RECOMMENDED\\nimport { AccordionModule } from 'bao-tran-angular/accordion';\\n// NOT RECOMMENDED (Angular 9 doesn't support this kind of import)\\nimport { AccordionModule } from 'bao-tran-angular';\\n\\n@NgModule({\\n  imports: [\\n    BrowserAnimationsModule,\\n    AccordionModule.forRoot(),\\n    ...\\n  ]\\n})\\nexport class AppModule(){}\\n\\nAlso should be added web-animations-js polyfill for IE browser (Edge)\\n\";","export default \"import { Component } from '@angular/core';\\nimport { AccordionConfig } from 'bao-tran-angular/accordion';\\n\\n// such override allows to keep some initial values\\n\\nexport function getAccordionConfig(): AccordionConfig {\\n  return Object.assign(new AccordionConfig(), { closeOthers: true });\\n}\\n\\n@Component({\\n  selector: 'demo-accordion-config',\\n  templateUrl: './config.html',\\n  providers: [{ provide: AccordionConfig, useFactory: getAccordionConfig }]\\n})\\nexport class DemoAccordionConfigComponent {}\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-accordion-styling',\r\n  templateUrl: './styling.html'\r\n})\r\nexport class DemoAccordionStylingComponent {\r\n  customClass = 'customClass';\r\n  isFirstOpen = true;\r\n}\r\n","<accordion>\r\n  <accordion-group heading=\"Static Header, initially expanded\"\r\n                   [panelClass]=\"customClass\"\r\n                   [isOpen]=\"isFirstOpen\">\r\n    This content is straight in the template.\r\n  </accordion-group>\r\n  <accordion-group heading=\"Content 1\">\r\n    <p>accordion 1</p>\r\n  </accordion-group>\r\n  <accordion-group heading=\"Content 2\" panelClass=\"customClass\">\r\n    <p>accordion 2</p>\r\n  </accordion-group>\r\n</accordion>\r\n","export default \"<accordion>\\r\\n  <accordion-group heading=\\\"Static Header, initially expanded\\\"\\r\\n                   [panelClass]=\\\"customClass\\\"\\r\\n                   [isOpen]=\\\"isFirstOpen\\\">\\r\\n    This content is straight in the template.\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Content 1\\\">\\r\\n    <p>accordion 1</p>\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Content 2\\\" panelClass=\\\"customClass\\\">\\r\\n    <p>accordion 2</p>\\r\\n  </accordion-group>\\r\\n</accordion>\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-accordion-dynamic',\\r\\n  templateUrl: './dynamic.html'\\r\\n})\\r\\nexport class DemoAccordionDynamicComponent {\\r\\n  groups = [\\r\\n    {\\r\\n      title: 'Dynamic Group Header - 1',\\r\\n      content: 'Dynamic Group Body - 1'\\r\\n    },\\r\\n    {\\r\\n      title: 'Dynamic Group Header - 2',\\r\\n      content: 'Dynamic Group Body - 2'\\r\\n    }\\r\\n  ];\\r\\n\\r\\n  addGroupItem(): void {\\r\\n    this.groups.push({\\r\\n      title: `Dynamic Group Header - ${this.groups.length + 1}`,\\r\\n      content: `Dynamic Group Body - ${this.groups.length + 1}`\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\";","import { Component } from '@angular/core';\nimport { AccordionConfig } from 'bao-tran-angular/accordion';\n\n// such override allows to keep some initial values\n\nexport function getAccordionConfig(): AccordionConfig {\n  return Object.assign(new AccordionConfig(), { closeOthers: true });\n}\n\n@Component({\n  selector: 'demo-accordion-config',\n  templateUrl: './config.html',\n  providers: [{ provide: AccordionConfig, useFactory: getAccordionConfig }]\n})\nexport class DemoAccordionConfigComponent {}\n","<accordion [isAnimated]=\"true\">\r\n  <accordion-group heading=\"Header\">\r\n    This content is straight in the template.\r\n  </accordion-group>\r\n  <accordion-group heading=\"Content 1\">\r\n    <p>Content 1</p>\r\n  </accordion-group>\r\n  <accordion-group heading=\"Content 2\">\r\n    <p>Content 2</p>\r\n  </accordion-group>\r\n</accordion>\r\n","import { DemoAccordionAnimatedComponent } from './animated/animated';\r\nimport { DemoAccordionBasicComponent } from './basic/basic';\r\nimport { DemoAccordionConfigComponent } from './config/config';\r\nimport { DemoAccordionCustomHTMLComponent } from './custom-html/custom-html';\r\nimport { DemoAccordionDisabledComponent } from './disabled/disabled';\r\nimport { DemoAccordionDynamicBodyComponent } from './dynamic-body/dynamic-body';\r\nimport { DemoAccordionDynamicComponent } from './dymanic/dynamic';\r\nimport { DemoAccordionManualToggleComponent } from './manual-toggle/manual-toggle';\r\nimport { DemoAccordionOneAtATimeComponent } from './one-at-a-time/one-at-a-time';\r\nimport { DemoAccordionOpenedComponent } from './opened/opened';\r\nimport { DemoAccordionOpenEventComponent } from './open-event/open-event';\r\nimport { DemoAccordionStylingComponent } from './styling/styling';\r\n\r\nexport const DEMO_COMPONENTS = [\r\n  DemoAccordionAnimatedComponent,\r\n  DemoAccordionBasicComponent,\r\n  DemoAccordionConfigComponent,\r\n  DemoAccordionCustomHTMLComponent,\r\n  DemoAccordionDisabledComponent,\r\n  DemoAccordionDynamicBodyComponent,\r\n  DemoAccordionDynamicComponent,\r\n  DemoAccordionManualToggleComponent,\r\n  DemoAccordionOneAtATimeComponent,\r\n  DemoAccordionOpenedComponent,\r\n  DemoAccordionOpenEventComponent,\r\n  DemoAccordionStylingComponent\r\n];\r\n","export default \"<accordion>\\r\\n  <accordion-group heading=\\\"Group without isOpenChange event listener\\\">\\r\\n    <p>Some content</p>\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Group with isOpenChange event listener\\\" (isOpenChange)=\\\"log($event)\\\">\\r\\n    <p>Some content</p>\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Group with isOpenChange event listener\\\" (isOpenChange)=\\\"log($event)\\\">\\r\\n    <p>Some content</p>\\r\\n  </accordion-group>\\r\\n</accordion>\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-accordion-open-event',\\r\\n  templateUrl: './open-event.html'\\r\\n})\\r\\nexport class DemoAccordionOpenEventComponent {\\r\\n  log(event: boolean) {\\r\\n    console.log(`Accordion has been ${event ? 'opened' : 'closed'}`);\\r\\n  }\\r\\n}\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-accordion-dynamic-body',\r\n  templateUrl: './dynamic-body.html'\r\n})\r\nexport class DemoAccordionDynamicBodyComponent {\r\n  items = ['Item 1', 'Item 2', 'Item 3'];\r\n\r\n  addItem(): void {\r\n    this.items.push(`Item ${this.items.length + 1}`);\r\n  }\r\n}\r\n","<accordion>\r\n  <accordion-group heading=\"Dynamic Body Content\">\r\n    <p>The body of the accordion group grows to fit the contents</p>\r\n    <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"addItem()\">Add\r\n      Item\r\n    </button>\r\n    <div *ngFor=\"let item of items\">{{item}}</div>\r\n  </accordion-group>\r\n  <accordion-group heading=\"Content 2\">\r\n    <p>accordion 2</p>\r\n  </accordion-group>\r\n  <accordion-group heading=\"Content 3\">\r\n    <p>accordion 3</p>\r\n  </accordion-group>\r\n</accordion>\r\n","export default \"<accordion [isAnimated]=\\\"true\\\">\\r\\n  <accordion-group heading=\\\"Static Header\\\">\\r\\n    This content is straight in the template.\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Another group\\\">\\r\\n    <p>Some content</p>\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Another group\\\">\\r\\n    <p>Some content</p>\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Another group\\\">\\r\\n    <p>Some content</p>\\r\\n  </accordion-group>\\r\\n</accordion>\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-accordion-basic',\r\n  templateUrl: './basic.html'\r\n})\r\nexport class DemoAccordionBasicComponent {}\r\n","<accordion>\r\n  <accordion-group heading=\"Static Header\">\r\n    This content is straight in the template.\r\n  </accordion-group>\r\n  <accordion-group heading=\"Another group\">\r\n    <p>Some content</p>\r\n  </accordion-group>\r\n  <accordion-group heading=\"Another group\">\r\n    <p>Some content</p>\r\n  </accordion-group>\r\n  <accordion-group heading=\"Another group\">\r\n    <p>Some content</p>\r\n  </accordion-group>\r\n</accordion>\r\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-accordion-custom-html',\\r\\n  templateUrl: './custom-html.html'\\r\\n})\\r\\nexport class DemoAccordionCustomHTMLComponent {}\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-accordion-animation',\\r\\n  templateUrl: './animated.html'\\r\\n})\\r\\nexport class DemoAccordionAnimatedComponent {}\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-accordion-styling',\\r\\n  templateUrl: './styling.html'\\r\\n})\\r\\nexport class DemoAccordionStylingComponent {\\r\\n  customClass = 'customClass';\\r\\n  isFirstOpen = true;\\r\\n}\\r\\n\";","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { AccordionModule } from 'bao-tran-angular/accordion';\n\nimport { DocsModule } from '../../docs';\nimport { AccordionSectionComponent } from './accordion-section.component';\nimport { DEMO_COMPONENTS } from './demos';\n\nimport { routes } from './demo-accordion.routes';\n\n@NgModule({\n  declarations: [\n    AccordionSectionComponent,\n    ...DEMO_COMPONENTS\n  ],\n  imports: [\n    AccordionModule.forRoot(),\n    CommonModule,\n    FormsModule,\n    DocsModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [AccordionSectionComponent],\n  entryComponents: [...DEMO_COMPONENTS]\n})\nexport class DemoAccordionModule {\n  static routes: any = routes;\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-accordion-dynamic',\r\n  templateUrl: './dynamic.html'\r\n})\r\nexport class DemoAccordionDynamicComponent {\r\n  groups = [\r\n    {\r\n      title: 'Dynamic Group Header - 1',\r\n      content: 'Dynamic Group Body - 1'\r\n    },\r\n    {\r\n      title: 'Dynamic Group Header - 2',\r\n      content: 'Dynamic Group Body - 2'\r\n    }\r\n  ];\r\n\r\n  addGroupItem(): void {\r\n    this.groups.push({\r\n      title: `Dynamic Group Header - ${this.groups.length + 1}`,\r\n      content: `Dynamic Group Body - ${this.groups.length + 1}`\r\n    });\r\n  }\r\n}\r\n","<p>\r\n  <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)=\"addGroupItem()\">\r\n    Add Group Item\r\n  </button>\r\n</p>\r\n\r\n<accordion>\r\n  <accordion-group *ngFor=\"let group of groups\" [heading]=\"group.title\">\r\n    {{ group?.content }}\r\n  </accordion-group>\r\n</accordion>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-accordion-open-event',\r\n  templateUrl: './open-event.html'\r\n})\r\nexport class DemoAccordionOpenEventComponent {\r\n  log(event: boolean) {\r\n    console.log(`Accordion has been ${event ? 'opened' : 'closed'}`);\r\n  }\r\n}\r\n","<accordion>\r\n  <accordion-group heading=\"Group without isOpenChange event listener\">\r\n    <p>Some content</p>\r\n  </accordion-group>\r\n  <accordion-group heading=\"Group with isOpenChange event listener\" (isOpenChange)=\"log($event)\">\r\n    <p>Some content</p>\r\n  </accordion-group>\r\n  <accordion-group heading=\"Group with isOpenChange event listener\" (isOpenChange)=\"log($event)\">\r\n    <p>Some content</p>\r\n  </accordion-group>\r\n</accordion>\r\n","export default \"<p>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addGroupItem()\\\">\\r\\n    Add Group Item\\r\\n  </button>\\r\\n</p>\\r\\n\\r\\n<accordion>\\r\\n  <accordion-group *ngFor=\\\"let group of groups\\\" [heading]=\\\"group.title\\\">\\r\\n    {{ group?.content }}\\r\\n  </accordion-group>\\r\\n</accordion>\\r\\n\";","export default \"<div class=\\\"checkbox\\\">\\r\\n  <label>\\r\\n    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"oneAtATime\\\">\\r\\n    Open only one at a time\\r\\n  </label>\\r\\n</div>\\r\\n\\r\\n<accordion [closeOthers]=\\\"oneAtATime\\\">\\r\\n  <accordion-group heading=\\\"Header\\\">\\r\\n    This content is straight in the template.\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Content 1\\\">\\r\\n    <p>Content 1</p>\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Content 2\\\">\\r\\n    <p>Content 2</p>\\r\\n  </accordion-group>\\r\\n</accordion>\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-accordion-opened',\r\n  templateUrl: './opened.html'\r\n})\r\nexport class DemoAccordionOpenedComponent {\r\n  isFirstOpen = true;\r\n}\r\n","<accordion>\r\n  <accordion-group heading=\"Content 1\">\r\n    <p>accordion 1</p>\r\n  </accordion-group>\r\n  <accordion-group heading=\"Initially expanded\"\r\n                   [isOpen]=\"isFirstOpen\">\r\n    This content is straight in the template.\r\n  </accordion-group>\r\n  <accordion-group heading=\"Content 2\">\r\n    <p>accordion 3</p>\r\n  </accordion-group>\r\n</accordion>\r\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-accordion-disabled',\\r\\n  templateUrl: './disabled.html'\\r\\n})\\r\\nexport class DemoAccordionDisabledComponent {\\r\\n  isFirstDisabled = false;\\r\\n}\\r\\n\";","export default \"<accordion>\\r\\n  <accordion-group>\\r\\n    <button class=\\\"btn btn-link btn-block clearfix\\\" accordion-heading type=\\\"button\\\">\\r\\n      <div class=\\\"pull-left float-left\\\">I can have markup!</div>\\r\\n      <span class=\\\"badge badge-secondary float-right pull-right\\\">Some HTML here</span>\\r\\n    </button>\\r\\n    This is just some content to illustrate fancy headings.\\r\\n  </accordion-group>\\r\\n  <accordion-group>\\r\\n    <button class=\\\"btn btn-link\\\" accordion-heading type=\\\"button\\\">\\r\\n      I can have markup, too!\\r\\n    </button>\\r\\n    <span class=\\\"badge badge-secondary center\\\">And some HTML here</span>\\r\\n  </accordion-group>\\r\\n</accordion>\\r\\n\";","export default \"<accordion>\\r\\n  <accordion-group heading=\\\"Dynamic Body Content\\\">\\r\\n    <p>The body of the accordion group grows to fit the contents</p>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"addItem()\\\">Add\\r\\n      Item\\r\\n    </button>\\r\\n    <div *ngFor=\\\"let item of items\\\">{{item}}</div>\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Content 2\\\">\\r\\n    <p>accordion 2</p>\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Content 3\\\">\\r\\n    <p>accordion 3</p>\\r\\n  </accordion-group>\\r\\n</accordion>\\r\\n\";","export default \"<p>\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"isFirstDisabled = !isFirstDisabled\\\">\\r\\n    Enable / Disable first panel\\r\\n  </button>\\r\\n</p>\\r\\n\\r\\n<accordion>\\r\\n  <accordion-group heading=\\\"Static Header\\\"\\r\\n                   [isDisabled]=\\\"isFirstDisabled\\\">\\r\\n    This content is straight in the template.\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Content 1\\\">\\r\\n    <p>accordion 1</p>\\r\\n  </accordion-group>\\r\\n  <accordion-group heading=\\\"Content 2\\\">\\r\\n    <p>accordion 2</p>\\r\\n  </accordion-group>\\r\\n</accordion>\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-accordion-custom-html',\r\n  templateUrl: './custom-html.html'\r\n})\r\nexport class DemoAccordionCustomHTMLComponent {}\r\n","<accordion>\r\n  <accordion-group>\r\n    <button class=\"btn btn-link btn-block clearfix\" accordion-heading type=\"button\">\r\n      <div class=\"pull-left float-left\">I can have markup!</div>\r\n      <span class=\"badge badge-secondary float-right pull-right\">Some HTML here</span>\r\n    </button>\r\n    This is just some content to illustrate fancy headings.\r\n  </accordion-group>\r\n  <accordion-group>\r\n    <button class=\"btn btn-link\" accordion-heading type=\"button\">\r\n      I can have markup, too!\r\n    </button>\r\n    <span class=\"badge badge-secondary center\">And some HTML here</span>\r\n  </accordion-group>\r\n</accordion>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-accordion-one-time',\r\n  templateUrl: './one-at-a-time.html'\r\n})\r\nexport class DemoAccordionOneAtATimeComponent {\r\n  oneAtATime: boolean = true;\r\n}\r\n","<div class=\"checkbox\">\r\n  <label>\r\n    <input type=\"checkbox\" [(ngModel)]=\"oneAtATime\">\r\n    Open only one at a time\r\n  </label>\r\n</div>\r\n\r\n<accordion [closeOthers]=\"oneAtATime\">\r\n  <accordion-group heading=\"Header\">\r\n    This content is straight in the template.\r\n  </accordion-group>\r\n  <accordion-group heading=\"Content 1\">\r\n    <p>Content 1</p>\r\n  </accordion-group>\r\n  <accordion-group heading=\"Content 2\">\r\n    <p>Content 2</p>\r\n  </accordion-group>\r\n</accordion>\r\n"],"sourceRoot":"webpack:///"}