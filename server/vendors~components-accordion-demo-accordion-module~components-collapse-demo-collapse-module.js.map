{"version":3,"sources":["bao-tran-angular/collapse/collapse-animations.ts","bao-tran-angular/collapse/collapse.directive.ts","bao-tran-angular/collapse/collapse.module.ts"],"names":[],"mappings":"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","file":"vendors~components-accordion-demo-accordion-module~components-collapse-demo-collapse-module.js","sourcesContent":["import {\r\n  animate,\r\n  style,\r\n  AnimationMetadata\r\n} from '@angular/animations';\r\n\r\nexport const COLLAPSE_ANIMATION_TIMING = '400ms cubic-bezier(0.4,0.0,0.2,1)';\r\n\r\nexport const expandAnimation: AnimationMetadata[] = [\r\n  style({ height: 0, visibility: 'hidden' }),\r\n  animate(\r\n    COLLAPSE_ANIMATION_TIMING,\r\n    style({ height: '*', visibility: 'visible' })\r\n  )\r\n];\r\n\r\nexport const collapseAnimation: AnimationMetadata[] = [\r\n  style({ height: '*', visibility: 'visible' }),\r\n  animate(\r\n    COLLAPSE_ANIMATION_TIMING,\r\n    style({ height: 0, visibility: 'hidden' })\r\n  )\r\n];\r\n","import {\r\n  AnimationBuilder,\r\n  AnimationFactory,\r\n  AnimationPlayer\r\n} from '@angular/animations';\r\n\r\nimport {\r\n  AfterViewChecked,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Input,\r\n  Output,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\nimport {\r\n  collapseAnimation,\r\n  expandAnimation\r\n} from './collapse-animations';\r\n\r\n@Directive({\r\n  selector: '[collapse]',\r\n  exportAs: 'bs-collapse',\r\n  host: {\r\n    '[class.collapse]': 'true'\r\n  }\r\n})\r\nexport class CollapseDirective implements AfterViewChecked {\r\n  /** This event fires as soon as content collapses */\r\n  @Output() collapsed: EventEmitter<CollapseDirective> = new EventEmitter();\r\n  /** This event fires when collapsing is started */\r\n  @Output() collapses: EventEmitter<CollapseDirective> = new EventEmitter();\r\n  /** This event fires as soon as content becomes visible */\r\n  @Output() expanded: EventEmitter<CollapseDirective> = new EventEmitter();\r\n  /** This event fires when expansion is started */\r\n  @Output() expands: EventEmitter<CollapseDirective> = new EventEmitter();\r\n  // shown\r\n  @HostBinding('class.in')\r\n  @HostBinding('class.show')\r\n  @HostBinding('attr.aria-expanded')\r\n  isExpanded = true;\r\n  collapseNewValue = true;\r\n  // hidden\r\n  @HostBinding('attr.aria-hidden') isCollapsed = false;\r\n  // stale state\r\n  @HostBinding('class.collapse') isCollapse = true;\r\n  // animation state\r\n  @HostBinding('class.collapsing') isCollapsing = false;\r\n\r\n  @Input()\r\n  set display(value: string) {\r\n    if (!this.isAnimated) {\r\n      this._renderer.setStyle(this._el.nativeElement, 'display', value);\r\n\r\n      return;\r\n    }\r\n\r\n    this._display = value;\r\n\r\n    if (value === 'none') {\r\n      this.hide();\r\n\r\n      return;\r\n    }\r\n\r\n    this.show();\r\n  }\r\n  /** turn on/off animation */\r\n  @Input() isAnimated = false;\r\n  /** A flag indicating visibility of content (shown or hidden) */\r\n  @Input()\r\n  set collapse(value: boolean) {\r\n    this.collapseNewValue = value;\r\n    if (!this._player || this._isAnimationDone) {\r\n      this.isExpanded = value;\r\n      this.toggle();\r\n    }\r\n  }\r\n\r\n  get collapse(): boolean {\r\n    return this.isExpanded;\r\n  }\r\n\r\n  private _display = 'block';\r\n  private _factoryCollapseAnimation: AnimationFactory;\r\n  private _factoryExpandAnimation: AnimationFactory;\r\n  private _isAnimationDone: boolean;\r\n  private _player: AnimationPlayer;\r\n  private _stylesLoaded = false;\r\n\r\n  private _COLLAPSE_ACTION_NAME = 'collapse';\r\n  private _EXPAND_ACTION_NAME = 'expand';\r\n\r\n  constructor(\r\n    private _el: ElementRef,\r\n    private _renderer: Renderer2,\r\n    _builder: AnimationBuilder\r\n  ) {\r\n    this._factoryCollapseAnimation = _builder.build(collapseAnimation);\r\n    this._factoryExpandAnimation = _builder.build(expandAnimation);\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    this._stylesLoaded = true;\r\n\r\n    if (!this._player || !this._isAnimationDone) {\r\n      return;\r\n    }\r\n\r\n    this._player.reset();\r\n    this._renderer.setStyle(this._el.nativeElement, 'height', '*');\r\n  }\r\n\r\n  /** allows to manually toggle content visibility */\r\n  toggle(): void {\r\n    if (this.isExpanded) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  /** allows to manually hide content */\r\n  hide(): void {\r\n    this.isCollapsing = true;\r\n    this.isExpanded = false;\r\n    this.isCollapsed = true;\r\n    this.isCollapsing = false;\r\n\r\n    this.collapses.emit(this);\r\n\r\n    this._isAnimationDone = false;\r\n\r\n    this.animationRun(this.isAnimated, this._COLLAPSE_ACTION_NAME)(() => {\r\n      this._isAnimationDone = true;\r\n      if (this.collapseNewValue !== this.isCollapsed && this.isAnimated) {\r\n        this.show();\r\n\r\n        return;\r\n      }\r\n      this.collapsed.emit(this);\r\n      this._renderer.setStyle(this._el.nativeElement, 'display', 'none');\r\n    });\r\n  }\r\n  /** allows to manually show collapsed content */\r\n  show(): void {\r\n    this._renderer.setStyle(this._el.nativeElement, 'display', this._display);\r\n\r\n    this.isCollapsing = true;\r\n    this.isExpanded = true;\r\n    this.isCollapsed = false;\r\n    this.isCollapsing = false;\r\n\r\n    this.expands.emit(this);\r\n\r\n    this._isAnimationDone = false;\r\n    this.animationRun(this.isAnimated, this._EXPAND_ACTION_NAME)(() => {\r\n      this._isAnimationDone = true;\r\n      if (this.collapseNewValue !== this.isCollapsed && this.isAnimated) {\r\n        this.hide();\r\n\r\n        return;\r\n      }\r\n      this.expanded.emit(this);\r\n      this._renderer.removeStyle(this._el.nativeElement, 'overflow');\r\n    });\r\n  }\r\n\r\n  animationRun(isAnimated: boolean, action: string) {\r\n    if (!isAnimated || !this._stylesLoaded) {\r\n      return (callback: () => void) => callback();\r\n    }\r\n\r\n    this._renderer.setStyle(this._el.nativeElement, 'overflow', 'hidden');\r\n    this._renderer.addClass(this._el.nativeElement, 'collapse');\r\n\r\n    const factoryAnimation = (action === this._EXPAND_ACTION_NAME)\r\n      ? this._factoryExpandAnimation\r\n      : this._factoryCollapseAnimation;\r\n\r\n    if (this._player) {\r\n      this._player.destroy();\r\n    }\r\n\r\n    this._player = factoryAnimation.create(this._el.nativeElement);\r\n    this._player.play();\r\n\r\n    return (callback: () => void) => this._player.onDone(callback);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { CollapseDirective } from './collapse.directive';\r\n\r\n@NgModule({\r\n  declarations: [CollapseDirective],\r\n  exports: [CollapseDirective]\r\n})\r\nexport class CollapseModule {\r\n  static forRoot(): ModuleWithProviders<CollapseModule> {\r\n    return { ngModule: CollapseModule, providers: [] };\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}