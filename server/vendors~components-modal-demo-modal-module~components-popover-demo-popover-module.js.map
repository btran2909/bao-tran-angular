{"version":3,"sources":["bao-tran-angular/popover/popover.config.ts","bao-tran-angular/popover/popover-container.component.ts","bao-tran-angular/popover/popover.directive.ts","bao-tran-angular/popover/popover.module.ts"],"names":[],"mappings":"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","file":"vendors~components-modal-demo-modal-module~components-popover-demo-popover-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Configuration service for the Popover directive.\r\n * You can inject this service, typically in your root component, and customize\r\n * the values of its properties in order to provide default values for all the\r\n * popovers used in the application.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PopoverConfig {\r\n  /** sets disable adaptive position */\r\n  adaptivePosition = true;\r\n  /**\r\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\", \"auto\"\r\n   */\r\n  placement = 'top';\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  triggers = 'click';\r\n\r\n  outsideClick = false;\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   */\r\n  container: string;\r\n  /** delay before showing the tooltip */\r\n  delay = 0;\r\n}\r\n","import { ChangeDetectionStrategy, Input, Component } from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { isBs3 } from 'bao-tran-angular/utils';\n\n@Component({\n  selector: 'popover-container',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // tslint:disable-next-line\n  host: {\n    '[attr.id]': 'popoverId',\n    '[class]':\n      '\"popover in popover-\" + placement + \" \" + \"bs-popover-\" + placement + \" \" + placement + \" \" + containerClass',\n    '[class.show]': '!isBs3',\n    '[class.bs3]': 'isBs3',\n    role: 'tooltip',\n    style: 'display:block;'\n  },\n  styles: [\n    `\n    :host.bs3.popover-top {\n      margin-bottom: 10px;\n    }\n    :host.bs3.popover.top>.arrow {\n      margin-left: -2px;\n    }\n    :host.bs3.popover.top {\n      margin-bottom: 10px;\n    }\n    :host.popover.bottom>.arrow {\n      margin-left: -4px;\n    }\n    :host.bs3.bs-popover-left {\n      margin-right: .5rem;\n    }\n    :host.bs3.bs-popover-right .arrow, :host.bs3.bs-popover-left .arrow{\n      margin: .3rem 0;\n    }\n    `\n  ],\n  templateUrl: './popover-container.component.html'\n})\nexport class PopoverContainerComponent {\n  @Input() placement: string;\n  @Input() title: string;\n  containerClass: string;\n  popoverId: string;\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  constructor(config: PopoverConfig) {\n    Object.assign(this, config);\n  }\n}\n","import {\n  Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output,\n  Renderer2, TemplateRef, ViewContainerRef\n} from '@angular/core';\nimport { PopoverConfig } from './popover.config';\nimport { ComponentLoader, ComponentLoaderFactory } from 'bao-tran-angular/component-loader';\nimport { PopoverContainerComponent } from './popover-container.component';\nimport { PositioningService } from 'bao-tran-angular/positioning';\nimport { timer } from 'rxjs';\nimport { parseTriggers, Trigger } from 'bao-tran-angular/utils';\n\nlet id = 0;\n\n/**\n * A lightweight, extensible directive for fancy popover creation.\n */\n@Directive({selector: '[popover]', exportAs: 'bs-popover'})\nexport class PopoverDirective implements OnInit, OnDestroy {\n  /** unique id popover - use for aria-describedby */\n  popoverId = id++;\n  /** sets disable adaptive position */\n  @Input() adaptivePosition: boolean;\n  /**\n   * Content to be displayed as popover.\n   */\n  /* tslint:disable-next-line: no-any */\n  @Input() popover: string | TemplateRef<any>;\n  /**\n   * Context to be used if popover is a template.\n   */\n  /* tslint:disable-next-line: no-any */\n  @Input() popoverContext: any;\n  /**\n   * Title of a popover.\n   */\n  @Input() popoverTitle: string;\n  /**\n   * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   */\n  @Input() placement: 'top' | 'bottom' | 'left' | 'right' | 'auto' | 'top left' | 'top right' |\n    'right top' | 'right bottom' | 'bottom right' | 'bottom left' | 'left bottom' | 'left top';\n  /**\n   * Close popover on outside click\n   */\n  @Input() outsideClick = false;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   */\n  @Input() triggers: string;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   */\n  @Input() container: string;\n\n  /**\n   * Css class for popover container\n   */\n  @Input() containerClass = '';\n\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n  @Input()\n  get isOpen(): boolean {\n    return this._popover.isShown;\n  }\n\n  set isOpen(value: boolean) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Delay before showing the tooltip\n   */\n  @Input() delay: number;\n\n  /**\n   * Emits an event when the popover is shown\n   */\n  /* tslint:disable-next-line: no-any */\n  @Output() onShown: EventEmitter<any>;\n  /**\n   * Emits an event when the popover is hidden\n   */\n  /* tslint:disable-next-line: no-any */\n  @Output() onHidden: EventEmitter<any>;\n\n  protected _popoverCancelShowFn: Function;\n\n  protected _delayTimeoutId: number | any;\n\n  private _popover: ComponentLoader<PopoverContainerComponent>;\n  private _isInited = false;\n  private _ariaDescribedby: string;\n\n  constructor(\n    _config: PopoverConfig,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n    _viewContainerRef: ViewContainerRef,\n    cis: ComponentLoaderFactory,\n    private _positionService: PositioningService\n  ) {\n    this._popover = cis\n      .createLoader<PopoverContainerComponent>(\n        _elementRef,\n        _viewContainerRef,\n        _renderer\n      )\n      .provide({provide: PopoverConfig, useValue: _config});\n\n    Object.assign(this, _config);\n\n    this.onShown = this._popover.onShown;\n    this.onHidden = this._popover.onHidden;\n\n    // fix: no focus on button on Mac OS #1795\n    if (typeof window !== 'undefined') {\n      _elementRef.nativeElement.addEventListener('click', function () {\n        try {\n          _elementRef.nativeElement.focus();\n        } catch (err) {\n          return;\n        }\n      });\n    }\n  }\n\n  /**\n   * Set attribute aria-describedBy for element directive and\n   * set id for the popover\n   */\n  setAriaDescribedBy(): void {\n    this._ariaDescribedby = this.isOpen ? `ngx-popover-${this.popoverId}` : null;\n    if (this._ariaDescribedby) {\n      this._popover.instance.popoverId = this._ariaDescribedby;\n      this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\n    } else {\n      this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n    }\n  }\n\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  show(): void {\n    if (this._popover.isShown || !this.popover || this._delayTimeoutId) {\n      return;\n    }\n\n    this._positionService.setOptions({\n      modifiers: {\n        flip: {\n          enabled: this.adaptivePosition\n        },\n        preventOverflow: {\n          enabled: this.adaptivePosition\n        }\n      }\n    });\n\n    const showPopover = () => {\n      if (this._delayTimeoutId) {\n        this._delayTimeoutId = undefined;\n      }\n\n      this._popover\n        .attach(PopoverContainerComponent)\n        .to(this.container)\n        .position({attachment: this.placement})\n        .show({\n          content: this.popover,\n          context: this.popoverContext,\n          placement: this.placement,\n          title: this.popoverTitle,\n          containerClass: this.containerClass\n        });\n\n      if (!this.adaptivePosition) {\n        this._positionService.calcPosition();\n        this._positionService.deletePositionElement(this._popover._componentRef.location);\n      }\n\n      this.isOpen = true;\n      this.setAriaDescribedBy();\n    };\n\n    const cancelDelayedTooltipShowing = () => {\n      if (this._popoverCancelShowFn) {\n        this._popoverCancelShowFn();\n      }\n    };\n\n    if (this.delay) {\n      const _timer = timer(this.delay).subscribe(() => {\n        showPopover();\n        cancelDelayedTooltipShowing();\n      });\n\n      if (this.triggers) {\n        parseTriggers(this.triggers)\n          .forEach((trigger: Trigger) => {\n            this._popoverCancelShowFn = this._renderer.listen(\n              this._elementRef.nativeElement,\n              trigger.close,\n              () => {\n                _timer.unsubscribe();\n                cancelDelayedTooltipShowing();\n              }\n            );\n          });\n      }\n    } else {\n      showPopover();\n    }\n  }\n\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  hide(): void {\n    if (this._delayTimeoutId) {\n      clearTimeout(this._delayTimeoutId);\n      this._delayTimeoutId = undefined;\n    }\n\n    if (this.isOpen) {\n      this._popover.hide();\n      this.setAriaDescribedBy();\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n  toggle(): void {\n    if (this.isOpen) {\n      return this.hide();\n    }\n\n    this.show();\n  }\n\n  ngOnInit(): void {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/bao-tran-angular/issues/1885\n    if (this._isInited) {\n      return;\n    }\n    this._isInited = true;\n\n    this._popover.listen({\n      triggers: this.triggers,\n      outsideClick: this.outsideClick,\n      show: () => this.show(),\n      hide: () => this.hide()\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._popover.dispose();\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ComponentLoaderFactory } from 'bao-tran-angular/component-loader';\nimport { PositioningService } from 'bao-tran-angular/positioning';\nimport { PopoverDirective } from './popover.directive';\nimport { PopoverContainerComponent } from './popover-container.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PopoverDirective, PopoverContainerComponent],\n  exports: [PopoverDirective],\n  entryComponents: [PopoverContainerComponent]\n})\nexport class PopoverModule {\n  static forRoot(): ModuleWithProviders<PopoverModule> {\n    return {\n      ngModule: PopoverModule,\n      providers: [ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\n"],"sourceRoot":"webpack:///"}