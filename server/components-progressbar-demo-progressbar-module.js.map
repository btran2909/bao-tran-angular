{"version":3,"sources":["./demo/src/app/components/+progressbar/demos/index.ts","./demo/src/app/components/+progressbar/demo-progressbar.module.ts","./demo/src/app/components/+progressbar/demos/static/static.ts","./demo/src/app/components/+progressbar/demos/static/static.html","webpack:///./demo/src/app/components/+progressbar/demos/dynamic/dynamic.html?f3ae","./demo/src/app/components/+progressbar/demos/dynamic/dynamic.ts","./demo/src/app/components/+progressbar/demos/dynamic/dynamic.html","webpack:///./demo/src/app/components/+progressbar/demos/config/config.ts?03b5","./demo/src/app/components/+progressbar/demos/config/config.ts","./demo/src/app/components/+progressbar/demos/config/config.html","webpack:///./demo/src/app/components/+progressbar/demos/stacked/stacked.html?0bbc","./demo/src/app/components/+progressbar/demos/stacked/stacked.ts","./demo/src/app/components/+progressbar/demos/stacked/stacked.html","./demo/src/app/components/+progressbar/progressbar-section.component.ts","./demo/src/app/components/+progressbar/progressbar-section.component.html","webpack:///./demo/src/app/components/+progressbar/demos/stacked/stacked.ts?3652","./demo/src/app/components/+progressbar/progressbar-section.list.ts","webpack:///./demo/src/app/components/+progressbar/demos/static/static.html?66f9","webpack:///./demo/src/app/components/+progressbar/demos/config/config.html?76b0","./demo/src/app/components/+progressbar/docs/usage.md","./demo/src/app/components/+progressbar/demo-progressbar.routes.ts","webpack:///./demo/src/app/components/+progressbar/demos/dynamic/dynamic.ts?9d3c","webpack:///./demo/src/app/components/+progressbar/demos/static/static.ts?b7b2"],"names":[],"mappings":"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","file":"components-progressbar-demo-progressbar-module.js","sourcesContent":["import { DemoProgressbarStaticComponent } from './static/static';\r\nimport { DemoProgressbarDynamicComponent } from './dynamic/dynamic';\r\nimport { DemoProgressbarStackedComponent } from './stacked/stacked';\r\nimport { DemoProgressbarConfigComponent } from './config/config';\r\n\r\nexport const DEMO_COMPONENTS = [\r\n  DemoProgressbarStaticComponent,\r\n  DemoProgressbarDynamicComponent,\r\n  DemoProgressbarStackedComponent,\r\n  DemoProgressbarConfigComponent\r\n];\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ProgressbarModule } from 'bao-tran-angular/progressbar';\n\nimport { DocsModule } from '../../docs';\nimport { ProgressbarSectionComponent } from './progressbar-section.component';\nimport { DEMO_COMPONENTS } from './demos';\nimport { routes } from './demo-progressbar.routes';\n\n@NgModule({\n  declarations: [\n    ProgressbarSectionComponent,\n    ...DEMO_COMPONENTS\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    DocsModule,\n    ProgressbarModule.forRoot(),\n    RouterModule.forChild(routes)\n  ],\n  exports: [ProgressbarSectionComponent],\n  entryComponents: [...DEMO_COMPONENTS]\n})\nexport class DemoProgressbarModule {}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-progressbar-static',\r\n  templateUrl: './static.html'\r\n})\r\nexport class DemoProgressbarStaticComponent {}\r\n","<div class=\"row\">\r\n  <div class=\"col-sm-4\">\r\n    <div class=\"mb-2\">\r\n      <progressbar [value]=\"55\"></progressbar>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-sm-4\">\r\n    <div class=\"mb-2\">\r\n      <progressbar [value]=\"22\" type=\"warning\" [striped]=\"true\">22%</progressbar>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-sm-4\">\r\n    <div class=\"mb-2\">\r\n      <progressbar max=\"200\" [value]=\"166\" type=\"danger\" [striped]=\"true\" [animate]=\"true\"><i>166 / 200</i></progressbar>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export default \"<div class=\\\"mb-2\\\">\\r\\n  <progressbar [max]=\\\"max\\\" [value]=\\\"dynamic\\\">\\r\\n    <span class=\\\"text-nowrap\\\">{{dynamic}} / {{max}}</span>\\r\\n  </progressbar>\\r\\n  <small><em>No animation</em></small>\\r\\n</div>\\r\\n<div class=\\\"mb-2\\\">\\r\\n  <progressbar [animate]=\\\"false\\\" [value]=\\\"dynamic\\\" type=\\\"success\\\"><b>{{dynamic}}%</b></progressbar>\\r\\n  <small><em>Object (changes type based on value)</em></small>\\r\\n</div>\\r\\n<div class=\\\"mb-3\\\">\\r\\n  <progressbar class=\\\"progress-striped active\\\" [value]=\\\"dynamic\\\" [type]=\\\"type\\\">{{type}}</progressbar>\\r\\n</div>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"random()\\\">Randomize</button>\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-progressbar-dynamic',\r\n  templateUrl: './dynamic.html'\r\n})\r\nexport class DemoProgressbarDynamicComponent {\r\n  max: number = 200;\r\n  showWarning: boolean;\r\n  dynamic: number;\r\n  type: string;\r\n\r\n  constructor() {\r\n    this.random();\r\n  }\r\n\r\n  random(): void {\r\n    let value = Math.floor(Math.random() * 100 + 1);\r\n    let type: string;\r\n\r\n    if (value < 25) {\r\n      type = 'success';\r\n    } else if (value < 50) {\r\n      type = 'info';\r\n    } else if (value < 75) {\r\n      type = 'warning';\r\n    } else {\r\n      type = 'danger';\r\n    }\r\n\r\n    this.dynamic = value;\r\n    this.type = type;\r\n  }\r\n}\r\n","<div class=\"mb-2\">\r\n  <progressbar [max]=\"max\" [value]=\"dynamic\">\r\n    <span class=\"text-nowrap\">{{dynamic}} / {{max}}</span>\r\n  </progressbar>\r\n  <small><em>No animation</em></small>\r\n</div>\r\n<div class=\"mb-2\">\r\n  <progressbar [animate]=\"false\" [value]=\"dynamic\" type=\"success\"><b>{{dynamic}}%</b></progressbar>\r\n  <small><em>Object (changes type based on value)</em></small>\r\n</div>\r\n<div class=\"mb-3\">\r\n  <progressbar class=\"progress-striped active\" [value]=\"dynamic\" [type]=\"type\">{{type}}</progressbar>\r\n</div>\r\n<button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"random()\">Randomize</button>\r\n","export default \"import { Component } from '@angular/core';\\nimport { ProgressbarConfig } from 'bao-tran-angular/progressbar';\\n\\n// such override allows to keep some initial values\\n\\nexport function getProgressbarConfig(): ProgressbarConfig {\\n  return Object.assign(new ProgressbarConfig(), { animate: true, striped: true,  max: 150 });\\n}\\n\\n@Component({\\n  selector: 'demo-progressbar-config',\\n  templateUrl: './config.html',\\n  providers: [{ provide: ProgressbarConfig, useFactory: getProgressbarConfig }]\\n})\\nexport class DemoProgressbarConfigComponent {}\\n\";","import { Component } from '@angular/core';\nimport { ProgressbarConfig } from 'bao-tran-angular/progressbar';\n\n// such override allows to keep some initial values\n\nexport function getProgressbarConfig(): ProgressbarConfig {\n  return Object.assign(new ProgressbarConfig(), { animate: true, striped: true,  max: 150 });\n}\n\n@Component({\n  selector: 'demo-progressbar-config',\n  templateUrl: './config.html',\n  providers: [{ provide: ProgressbarConfig, useFactory: getProgressbarConfig }]\n})\nexport class DemoProgressbarConfigComponent {}\n","<div class=\"mb-2\">\r\n  <progressbar class=\"progress-striped active\"  [value]=\"136\" type=\"danger\"><i>136 / 150</i></progressbar>\r\n</div>\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <div class=\\\"mb-3\\\">\\r\\n      <progressbar class=\\\"progress\\\" [value]=\\\"stacked\\\" [max]=\\\"100\\\"></progressbar>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"randomStacked()\\\">Randomize</button>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'demo-progressbar-stacked',\r\n  templateUrl: './stacked.html'\r\n})\r\nexport class DemoProgressbarStackedComponent {\r\n  type: string;\r\n  stacked: any[] = [];\r\n\r\n  constructor() {\r\n    this.randomStacked();\r\n  }\r\n\r\n  randomStacked(): void {\r\n    let types = ['success', 'info', 'warning', 'danger'];\r\n\r\n    this.stacked = [];\r\n    let n = Math.floor(Math.random() * 4 + 1);\r\n    for (let i = 0; i < n; i++) {\r\n      let index = Math.floor(Math.random() * 4);\r\n      let value = Math.floor(Math.random() * 27 + 3);\r\n      this.stacked.push({\r\n        value,\r\n        type: types[index],\r\n        label: value + ' %'\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-lg-12\">\r\n    <div class=\"mb-3\">\r\n      <progressbar class=\"progress\" [value]=\"stacked\" [max]=\"100\"></progressbar>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-lg-12\">\r\n    <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"randomStacked()\">Randomize</button>\r\n  </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, Injector, ReflectiveInjector } from '@angular/core';\nimport { isBs3 } from 'bao-tran-angular/utils';\n\nimport { demoComponentContent } from './progressbar-section.list';\nimport { ContentSection } from '../../docs/models/content-section.model';\n\n@Component({\n  selector: 'progressbar-section',\n  templateUrl: './progressbar-section.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProgressbarSectionComponent {\n  name = 'Progressbar';\n  src = 'https://github.com/valor-software/bao-tran-angular/tree/development/src/progressbar';\n  componentContent: ContentSection[] = demoComponentContent;\n  content: any;\n\n  _injectors = new Map<ContentSection, ReflectiveInjector>();\n\n  constructor(private injector: Injector) { }\n\n  sectionInjections(content: ContentSection) {\n    if (this._injectors.has(content)) {\n      return this._injectors.get(content);\n    }\n\n    const _injector = ReflectiveInjector.resolveAndCreate([\n      {\n        provide: ContentSection,\n        useValue: content\n      }], this.injector);\n\n    this._injectors.set(content, _injector);\n\n    return _injector;\n  }\n\n  get isBs3(): boolean {\n    if (typeof PR !== 'undefined') {\n      setTimeout(() => PR.prettyPrint(), 10);\n    }\n\n    return isBs3();\n  }\n}\n","<demo-section [name]=\"name\" [src]=\"src\" [componentContent]=\"componentContent\">\n  <p>Provide up-to-date feedback on the progress of a workflow or action with simple yet flexible progress bars.</p>\n\n\n  <docs-section [content]=\"componentContent\"></docs-section>\n</demo-section>\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-progressbar-stacked',\\r\\n  templateUrl: './stacked.html'\\r\\n})\\r\\nexport class DemoProgressbarStackedComponent {\\r\\n  type: string;\\r\\n  stacked: any[] = [];\\r\\n\\r\\n  constructor() {\\r\\n    this.randomStacked();\\r\\n  }\\r\\n\\r\\n  randomStacked(): void {\\r\\n    let types = ['success', 'info', 'warning', 'danger'];\\r\\n\\r\\n    this.stacked = [];\\r\\n    let n = Math.floor(Math.random() * 4 + 1);\\r\\n    for (let i = 0; i < n; i++) {\\r\\n      let index = Math.floor(Math.random() * 4);\\r\\n      let value = Math.floor(Math.random() * 27 + 3);\\r\\n      this.stacked.push({\\r\\n        value,\\r\\n        type: types[index],\\r\\n        label: value + ' %'\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\";","import { DemoProgressbarStaticComponent } from './demos/static/static';\r\nimport { DemoProgressbarDynamicComponent } from './demos/dynamic/dynamic';\r\nimport { DemoProgressbarStackedComponent } from './demos/stacked/stacked';\r\nimport { DemoProgressbarConfigComponent } from './demos/config/config';\r\n\r\nimport { ContentSection } from '../../docs/models/content-section.model';\r\nimport { DemoTopSectionComponent } from '../../docs/demo-section-components/demo-top-section/index';\r\nimport { ExamplesComponent } from '../../docs/demo-section-components/demo-examples-section/index';\r\nimport { ApiSectionsComponent } from '../../docs/demo-section-components/demo-api-section/index';\r\n\r\nimport {\r\n  NgApiDocComponent,\r\n  NgApiDocConfigComponent\r\n} from '../../docs/api-docs';\r\n\r\nexport const demoComponentContent: ContentSection[] = [\r\n  {\r\n    name: 'Usage',\r\n    anchor: 'usage',\r\n    outlet: DemoTopSectionComponent,\r\n    content: {\r\n      doc: require('!!raw-loader!./docs/usage.md')\r\n    }\r\n  },\r\n  {\r\n    name: 'Examples',\r\n    anchor: 'examples',\r\n    outlet: ExamplesComponent,\r\n    content: [\r\n      {\r\n        title: 'Static',\r\n        anchor: 'bs3-static',\r\n        component: require('!!raw-loader!./demos/static/static'),\r\n        html: require('!!raw-loader!./demos/static/static.html'),\r\n        outlet: DemoProgressbarStaticComponent\r\n      },\r\n      {\r\n        title: 'Dynamic',\r\n        anchor: 'bs3-dynamic',\r\n        component: require('!!raw-loader!./demos/dynamic/dynamic'),\r\n        html: require('!!raw-loader!./demos/dynamic/dynamic.html'),\r\n        outlet: DemoProgressbarDynamicComponent\r\n      },\r\n      {\r\n        title: 'Stacked',\r\n        anchor: 'bs3-stacked',\r\n        component: require('!!raw-loader!./demos/stacked/stacked'),\r\n        html: require('!!raw-loader!./demos/stacked/stacked.html'),\r\n        outlet: DemoProgressbarStackedComponent\r\n      },\r\n      {\r\n        title: 'Configuring defaults',\r\n        anchor: 'bs3-config',\r\n        component: require('!!raw-loader!./demos/config/config'),\r\n        html: require('!!raw-loader!./demos/config/config.html'),\r\n        outlet: DemoProgressbarConfigComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: 'API Reference',\r\n    anchor: 'api-reference',\r\n    outlet: ApiSectionsComponent,\r\n    content: [\r\n      {\r\n        title: 'ProgressbarComponent',\r\n        anchor: 'progressbar-component',\r\n        outlet: NgApiDocComponent\r\n      },\r\n      {\r\n        title: 'ProgressbarConfig',\r\n        anchor: 'progress-config',\r\n        outlet: NgApiDocConfigComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"mb-2\\\">\\r\\n      <progressbar [value]=\\\"55\\\"></progressbar>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"mb-2\\\">\\r\\n      <progressbar [value]=\\\"22\\\" type=\\\"warning\\\" [striped]=\\\"true\\\">22%</progressbar>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n    <div class=\\\"mb-2\\\">\\r\\n      <progressbar max=\\\"200\\\" [value]=\\\"166\\\" type=\\\"danger\\\" [striped]=\\\"true\\\" [animate]=\\\"true\\\"><i>166 / 200</i></progressbar>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"mb-2\\\">\\r\\n  <progressbar class=\\\"progress-striped active\\\"  [value]=\\\"136\\\" type=\\\"danger\\\"><i>136 / 150</i></progressbar>\\r\\n</div>\\r\\n\";","export default \"// RECOMMENDED\\nimport { ProgressbarModule } from 'bao-tran-angular/progressbar';\\n// NOT RECOMMENDED (Angular 9 doesn't support this kind of import)\\nimport { ProgressbarModule } from 'bao-tran-angular';\\n\\n@NgModule({\\n  imports: [ProgressbarModule.forRoot(),...]\\n})\\nexport class AppModule(){}\\n\";","import { ProgressbarSectionComponent } from './progressbar-section.component';\r\n\r\nexport const routes = [{ path: '', component: ProgressbarSectionComponent }];\r\n","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-progressbar-dynamic',\\r\\n  templateUrl: './dynamic.html'\\r\\n})\\r\\nexport class DemoProgressbarDynamicComponent {\\r\\n  max: number = 200;\\r\\n  showWarning: boolean;\\r\\n  dynamic: number;\\r\\n  type: string;\\r\\n\\r\\n  constructor() {\\r\\n    this.random();\\r\\n  }\\r\\n\\r\\n  random(): void {\\r\\n    let value = Math.floor(Math.random() * 100 + 1);\\r\\n    let type: string;\\r\\n\\r\\n    if (value < 25) {\\r\\n      type = 'success';\\r\\n    } else if (value < 50) {\\r\\n      type = 'info';\\r\\n    } else if (value < 75) {\\r\\n      type = 'warning';\\r\\n    } else {\\r\\n      type = 'danger';\\r\\n    }\\r\\n\\r\\n    this.dynamic = value;\\r\\n    this.type = type;\\r\\n  }\\r\\n}\\r\\n\";","export default \"import { Component } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n  selector: 'demo-progressbar-static',\\r\\n  templateUrl: './static.html'\\r\\n})\\r\\nexport class DemoProgressbarStaticComponent {}\\r\\n\";"],"sourceRoot":"webpack:///"}